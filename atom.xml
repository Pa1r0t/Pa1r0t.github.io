<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pa1r0t</title>
  
  <subtitle>re&amp;crypto</subtitle>
  <link href="https://pa1r0t.github.io/atom.xml" rel="self"/>
  
  <link href="https://pa1r0t.github.io/"/>
  <updated>2023-01-01T13:44:07.110Z</updated>
  <id>https://pa1r0t.github.io/</id>
  
  <author>
    <name>Pa1r0t_9e</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>unicorn_learning5</title>
    <link href="https://pa1r0t.github.io/2023/01/01/unicorn-learning5/"/>
    <id>https://pa1r0t.github.io/2023/01/01/unicorn-learning5/</id>
    <published>2023-01-01T01:58:42.000Z</published>
    <updated>2023-01-01T13:44:07.110Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅限作者学习使用" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8b46c0a4067b2619659e160c5c11ca182d0fd259a4ce5827b74834d766d3566f">57f4ad225687d507395974160374769b2879cc786eddcc489def179d2372db7f21ba4301511baa9d038ded7bf900e616f674954b3fd06d4bfc4f76422d342fd27f2f8fe6aa10fa5ed04b54db404adbd9ce6c7b2e037d57e025025414daae09e9d620605c8f756dcfb2d0263952d62ffbc3296e888a22f24402203afc321fdd22672080e7e1996f6c5e81f600983d39e0bc20b4ee000afda1f293cd0526545df2da34c94f13bf80b261f665cf91fb0522e2e7573e198a51dbcbe92173fd29932e7cd3ed36a4088ce0677b5bd96285dfa52aea45dad54df1a435b2dc87d1ed9544a3774dc8b4c3a229ff51efdf21ccf695adf02b15eb762eff9299bf0c90675d4beff67265173a75d9862925fb6d86399a36ff3cd7b3cc14bb207645707e58b59e3787250544aee5f7600ea0fd024f0e574bbca50a046cc10dd19556968a984047a5da61cdd87a2e3cd269e5c96f37bd1e6dfb602479b97f5ee8a491def9f1cf96f97d3fa73636723576a441a226771b7dbcca9c1267f5fe17cfef126ac1f84d813853d85579fba6e249a5319ee67bcaa01331a0a20d06430e544b9ac15bf0de44ae8e546c6711c5710cf2bf73de515eb874a2a0f6f3998710fc4ebc8b7827856fe09e0daad56eda9df73758128623e5589a2a73f22ca49accd39bbf4901f0c5800718233b30dff4ff53ef9642703986b143f0503097e91fa210c085a38c0895675b37ab59f9575fb0d580121a2673de8473ebda67fce44ffca0c1f89c3c9137612d10360c3eb6f18a3aa17e0af047a6144eb838d879f81ea1cf80c9c1d3b42a22cc06e988131cb6b418703ec04db0454f7b03a954cb66d5c49d7b25381508c5678db12a93af6c8ebab0d995a20b8b0fdf5dcbbe9b71758b649a6b7ad5cd381be41a5bb4b9b7653b6a1fdfff73d58772a45d589d6c33f2cac8ce72c815a8b2052d0a08c8ea628e7da25376cfaedc94819c3458ccffe85f31f369bcf0049863348b46341214eaba3ad48da42b3b8aee38c81e8cc05555e9efeca1faada540ce907a145d55ad13dfdcf613789b5d665cc6d63612454e4429e255ce9853723b5df303fea57b267685c9fa6c66807252f0611f5c1db73c887b1acf4486888e2f3c5cc52ad5cb6ce7dcc0e33807e2499ec4682bb5230cfb6c3a286fdb286e51066941cdd4e7a9437736daaa7af32b611ed29a16b07f577d664e953814d0348e4c088034b1fa263ab447db42a692055837199a8f0f828c48a432e5af6bb227fd143f70feca5f6f7f8972e5e96d74950ffb43ce68b5e33f793ce461335222db6a7cb4c5d514d5fd84309991829d6704da681f793b0111238817a6cee164fc67d1554a3403a62037e0233a9f821b30b49de0359e3dd834d0ed9967eb1323cc66c538db11438f13833b79bd2f782cfc5bb7fb37c6463267bf72be250d757894fd70f95d3530b1e2dd25c420990034f541e890e2f126b2148c25d58866934307bd9d5ff89997a3301696d0797a9598151bc2e01ce17e5ae1cdf79e379e6a2ccef2d63d3786d48c9fc64d278f8f0f866aed0dd9c02d2d64c0100422466fd4620f403e0be5970af6030969996c00ffa4a62ac2d146b76d89deb615fca7e2fa0f4e9f4a3784ab962d0ed20732fc4a9e74be6b8c11c8e53d7d3c3a1627c19e83d22db12e28ad02ac95310b4f031e32d4cfb6ec1d223cb7a884a1036c17ea0d3f5d111e2317cf8b49b6cbfd61196408d9434dfc7664b844e9e097fff628c5e7c52106928a257ef0526d82a7b3fb765da8333c2f74729017db34fff94d5c7b32058a72ef91f4892d5701045a4cb34805276fe89d90b2ce7a42f8cda448e49ccfad2a5a7a054cfe943d4b878a850718b1326a413f1fca39d8f2558acadb538c70e4fcc5e9b9fd0649d47d078995012d6ecb7522bfc7c0fd18ca65e0ea1f2efb8ba9e58ddde74cb9739a5c8ce086a6b31d6f8b49397f5a2ded2782cb5a8397546abed4646447652ca0ced93355c22f16f78fdfbf87f63a007d118a95823ffffa46156c06cc874e39c371fe4a2662df4b3f314b422a04b4a8ad346b352efcab649317eeedd89f423545d5e16f66762383ac1de69e01e96a2439fe0006842045484f690706d7230e17aa18a280f9e577122e6213e682ea12bf9295a7d3d3694087caa3b472078c24a910438acbc249e67e1f085508916e35e1a253aec78e3f66ecc54aff501d8481d5cc4e558faec6661d1d829e1f11a677bd8b033fd8904ae7827cbf5cd5724e0e9d39761b0c9c6c172a058ca2718a6c641709b5b92fec5ec1dc7edd5b72b3f06d3b34bfefd51f81e2fa08aeb68fec5db8af9246761ea2261dd62c585915e0f31dc0bed3ab01819c163e4e3a0256b21aa5e45ea146a0b14fbd2bd45cb6b143204a447c26cf30dd15bc8572878834430e5529f4247cb97a8215b85d5aedaa5b6718ca98677741fb62b30499f3056377809c842d76af939717cefb9a31a554b32f98439a8cc343cc890e42bc311b7903fade17f795083246cb4f84c6325f5831f4cfe43f42b48a4d279f166e5689c6e81883e23570b9c46fd468f9b3ccc18960591c39823f45562dbdb24cbadb789225b547dd8030115d0822206f974f4a6eeaa1aaa193ad282947d743344045c70af87266e8d3506a28edda3d151ca6c563e444662aaaf19e7f813bcaaad9a18c6fc2428348d773a7b667f729b781cfae60df46a4ff7b72d11b0f72c6c8dcde7599707184b7ab450ded1bb92c9256337504809583942bd8aced5208600c82a31cd426e8958716a85f4762361eb0631eb639ef727e0c3e5fcbba96fd5c778112c41eb3d6453d4bd60556621788d7db68dfe9f6c5a9a9bd866ac4e4201727291d4577d45de3cd3c3acfc5721add361218dc462ea86d2f652e620c0d9432c9802a9871fb47b0fa0fe4410c88a796598c63aee294b05b90c085bc4add94370fc835a815d691805f5a1b2f888d4e0f5e8ec27b12424d7effa838b224f79e230526e1ac9cd25785ac5aed5b7c5d082ce3771219fdb84a495e677297c772eef9a41a32da3e59dc0fa10e60275c0c1b4023bbe0067e6ccedaed1d10bbcd3a24245733ba6bc3c384d6e0679a18753149794d21bf9fe2903e34ab21e1e4c01bc6ecb27b7bbe13741a540a101cca08fc37d142b4021c6f7a3db66d1fa9ee2862f5b147196ab479b4416d7352687b13bf21fbe691c833c6c122bf26b9cd5d83a8a4da3a51022d1f6b466154f5e575ef9f669a60b31b8265051a7b2090f2b47b5919997130ebedc7ff2854505d79e4c7223ff9e79191a7fe8117b7fe5e3fef866a0a484a03d165f062164737eb86b253cb210609447fc949249a8b5df6da96ab8901e663fd367d1539c723a3715c75dfe2e0826aa76317f4f79a6cc1858704640175bcf65d1802c8030674ab87b692d8137c721d9f917b137ca1ed724edf5fff002cffd5981678bd5332b7a0dc2a6aefaf81afaffb2169b86e3790c569fb45425bf28396335567946f1d66c9ad34df3db48d50b82ce692665752d549eb36a60f1e33d1ed19f6b67da419dde2be3ae62a549b392f086f97fc07d0d5848119c73ed6438fb98ea5b833f104a9f7b5479500f7e4d6436b614199233994aea2719d8551cf3157857309fb3a6dfadf36276fbc9d27061604b74a9a206b71f3002aa8c3006485527bd8faa4d0425334206aacd8d0d078c51ebb747a41d9f3be416070ca5033ee5f170e702f06ee9af3f3a6a826b2bf3b08c4cac9fd96a677f47752d06189fbe5a22a5fc87fbb8a3bf1507b51507b9039ded6289ca536a8d9420527a4d053fde6e242985833f785313a8cc68ae9469987b82bf1be47a1f818c75811293e9d38f5068661fce654380d5cac0117500c435a976d56b48c719170cd19cef6d132a71150ab4e05f2acc61fc001347bdfc799b7c3d7576a747e71e9366c60e1713abb2750979d21977448a8ff4a7c55e1375a54a67cb98222b833c570837287cd706b7baa92466b1db83adb58cec90776a43f313740b80835c40c1c25cf582ff8b5e58fce83182358c83b5c0759ef207c15a31d7c8c017aaf1175b9362845b0a6c09cae7b6a8762f486edf9cc6129049cab27aadaeb122283e0959f70786966930f047ab07b0d3d8e9f9bdf9fd99b1ba4d086db5a9e31101d19358c81a722b446c50dafd0e126967e7b3a779c7dd5be185b2c36358b76869f0d5397e6a0494f21e8728a3636f5da5ab3291b849237ffa4ff6c7619253030f0a516f8ca84f7902ea8cdd636e076bfd89be90ed2787ae034f367bfa5460b343ce9da3d650146244c176546e46d9f44c5e1c67d60155aee80588995d0c768ec647aa2e75f440e8c8888f7c27ba70bf170c43108acb6eaef1cd9159e6656797704c4a0db65af8779f99804ad901100c20e358a33c7c2156742e5e3bcf1f3409c744f20f7a3655b0106457c391358fef8f54e3e2399c1c49573d3d1b5415ea6f1c5af4d67fd081e76e2c132084ec10d6724a9aff6b974794d5396edc8ec7950d77bd5bab9d8243604af2c75a8badabb07bc55a6336fa34382770664786b517d2c842c16a2fd9ba5e5eddcfc669f130ba9a7fe0974b548de6bb22d53f2573bc1e33c94aec6f32b7edd2af2f3baf5baac1156892cedd8458c995c8d4f7bad522c031e050d93e895938fba5d8b25b619f6442d15e4cf965d20a5f9235eb51c41215ece082df3443cd9fcb182f77f7713e8634b035b9b77dfe27ac7b6e373e0f65dd2e53fbbbfb72f5332c83d2251161e916102b6e0fab2380e53392a39ecb2e61403ddcb320f7c695561111ba11e373950e1d9025b21fa1d7095e186d08b0779bee27f418c161a5d7a7bd9d741aa1f561a94276b50e9ee76c296aeb988b98ab5dd372eb081ba88e59a2dc1ab8e29e2e784150ea76a9e4a2598e8c2e716c0f29f769f19dc412edcc351228d89ca9564e267033348a83018e58a132c5f72a240311bbc7787a232221b611f712283cdff1b2aae8257afad5c112d2d077210dc4b1de8bada2b09f5cb5f1817183aa34d13be8bd7a4ec6d4285ade05f744ea4ee48eb5da54a246e5fdce5a9ac3c4953acd4db2ea3a6b6eb25ece2ade504c609b7469d19b1b39d9705f84fc03b097ba8fa858401ad2a0550b57b4fac66c36e0041cea7dd436b239a3253a71da2f0de88c2234311403a992bfd1c8b90b64aa115412d54e34f74159b860bee61f8f0ba1f0baaa6378bf34dc8061113faf2022fe37c60ab7bd1abf6131515c4d4816d55cca24a34d70b47312e28d99c74a51e3a4a28b2148c166a599300a988530e8c7dedf5f345f98c22dd75a82a900e9947d95659ab86174576212a58eac3552f1cc08a89ec6aee41cb8d11d08f1f3efd23a4ee2ebb126cff92e706efe3f8a3d941a247e822cb0d88f84baf7d3894079ab6eef9d159a0607c4c403346b07eeb40cd7359073c90f2a246603ae63214e59e4ff88b80b95f52c734d48d21e5b85b44b97839b6a3c3c5e73014c0bba567ae9ebe6447f0954ad741ae8781d5934bb0f7d7c1bc8e527b10bee6896cfa5484dad9bdc4a8356dcde3f0d06c70d618f6c3d7c2ed30a3e50f1dfeb06f7d7f5e4697e4eef221f87a7969e8378ae81cac3dbe3bb427684070d2b3c2abb654d8a2b7fa3d4a6a735225f6bb1bd181ad0fa825cd0ed915dcb5f7a393926e6bc357fc306e0e44f1804f690274f831eb62a43125abc049ac89063f66e4cdefa0a3cc57024c2b8d3bc7717e57671fa0eccfa2b80f7d3e241da2be865d1bd6dd85a5ec2e99558b63e9fda323dd2ea0f2b49492ccea750fd207742cd4cbf1ddeb7f05963b0d09b2f140f557a61375ce18f59b240e7bc3b692c0e9d2cd2f6b39ba2deaed744088fe8fa1f31f7ba6c52aca63fd979c9950f2a370c364399058fb32f2562b9ebf7066ac3c6a9fb815390eb919f86db5eb00b32b0208affa0fc4dc6095799c91b446c2dc26ee81c9ddeb9acaa2bff00228be6cbc525f3c04f98fdda6edb78a4196e2a4cf0df25a79da1399d19ce563ddd35c76795cfb9b3ff2335286439682f47eb4983e6a1ac9cf4618f6cc1f806b31c0489659d32abcb3cbc006fc7649ed3757cf56aaaab2ecc9fa1a6b2f62e6be8efa866a089e034174a21ab1085d709575a831ad8c5c6e9d7dfcb7f63c732b40aca6dad597f6f261e08328cc1da6648e5a0288ebaa42d73cef66344f7e19168f0ae86a71bc7a53ae21eac1f7bc3ed7dfa6843578ee01ccb735e34320cf5d0b0d9c718a078a776a3305193dc8e09b2425cd26f5978c267015a2d653af3aaa29a50322f7af7ed912f8b544b31d2d9d3fab831158de3642648296a735290666d4aea951e2c8a590262c4eda32c38e15974879eecd82855a3f50e1827f350eea74a28294525ecfb418f34b8c1683ae1b65576e601690f1625ddcf83c86fec1ae87219f653f58997abf8d0e4e08d0a0210adeb28a3dbc38bdf51a3b809b50cbc5a71f3ca8dd671e3d183858c471bb62aa7e285152d83799b2f839e89a6dc471ceee1b06be091dc7471bde94b75e46c9dd6fb5637cab7ddf4de875db65ed30609336e81ee4f56ff82cb016d7c7059e981cd367679ac2d0bfe186ebb8c1a43dfe5994a55e9858f9567467ccc5fcd6504badb53920f7eaf54f26f9001161ce6a2965b2a47a34408a818ac12613ba64ac7b2edd135d4606f64f9958d0907a101ba4c2211a494b8e627b108522627f8450b0b78824833faa723df96c8b6b4f4a652138d628860d03ef52a2eb0011b4af4d628bc2a5263143d150b016b2e6ec91f54a97b2825bb7e76417b794558a815196d992246e670ebaae4ceadfb6d2705a4a257f833de3e5598eb6e32aea0de26854d90a6150177b20982fc271d297a15ef39888898dc954871286fd0608a87d0201fe16906fa2de3fcdfd6f5c160d2b9bb3306f24fc0283272005a1fda2fa90b64ed616bdd91e911697a08b633ef79020f80c93e33e509e8a079f1acb623f044031d4f606fc23290ebf9d00b3a0b935e00e0f7504f21e963ee35ab2a589a75dbf310a87299d41c0bccfe4ff6b4490d9bc62a1dfd9ce1e8f7747fd9bef9ed58cb93a66cea99c958f7bb0a1b0b3d502ff0a5bca1adc9421c75158ec91ff674f13ee65fda12ff38f277ffbd432cc7493253f28155d90c2b5da3c66f20e58e9f727d74847d19f5e5e978f143462350b3cafc0eb929cd28e9bf1c476bce4f700a2fc8c64d7d321f8920ea6a0454c8630b947133c0b1a289f85f0a5b81331ec12f48892410d989340beba9bea67582996a2209ac189481a9d4ea7a85c1975644226cd1fc0ea3b69f6a7d907acec6032a20d08e1a71f81b92f492d5aea6aa2dd509451f41c86396145c7dc0c7bb90fef754d50e38e2298f68ef0562aa8a39f9dead08ac9fdcb9400e3f59b6f28108ee68dcb36c093a6edda2638d14972c959586be00b7d82cc0bc6938f01d0dff01c4d9414d402356f5496c04264817ee9b5df2417221c2aadd91949fdffb80f107e18aea1c90294dc72916e7dcb049418ca5d4bbfd38e3d0906c8256e26d5c42781f1c2fcaebecf8ecbbb980594f9d507a6d181912e1ef04924da9d676652b40308bb82c9cb1f7f87053a19fdcdb3e0ae8afff409d98d2275bfec50f46f6b6e32e1cf2340c513554f0aa548e8fa528aadef59b274b7fdce249652f200889d3b6176854b7a0f3e7dca21e02b01d7f96b33de07baf8a944642db6811e7158e5788431eaffe9e8496856aaa043f51a01c5d04082560983e6d8023e753218b899a211cb90fabaaf8cd47eb273b1b8a9ed3b5026c08a534c07c80a642acce3346e4bd26805f54c411666228308a15b263065a02f2a371d8da35f70cf7e7d32355985c0584c40df18d2a33c4d3741ab50b89b9d70f8c2b7ccf8c01c567e1c72db0a6951ead3d6dd9c2ec776c785a4c2eced3ff4a27bb41084a3ce1471070803acefca20d3a41378349ec0d33127458e04635448bd8300af0e6bbf6ccffb06c69e067845e4086375fbf99383c90593208e398905e0d583b50b932900156640e18a6720d2115a01f61ef2c0de4583db9753bfb971c214af654a0d8a3395b1e75df41a3de63bd1f678c01553304a58b87e6b6fc40618a6b4c18015e5cb125574707506eb0133b17b9e72f14fea6c12352668800db5c99e12da6c87799304c07e4dc5459772ed004629f5bc4b666148cc0e41f6f31cbeb06b89721834ecbc6c2a636bd3a591e2c500605f138c46860a00e0ad5e0257f48792a490c9480a545115bdbe1617a4b6a64475145da6c3910a427469a9812723f1edd235ce5b6c43ab638cd930e754acb694cd76691ad9177f58b44af01e7a5135b9d131f3b7790c0ac7261422277240869200b746e74b78145c73156ebe54820ced66e07a8b8e5b34ae562b44e208a57219e509f80f1467a1c2cebc3e1bb5089e26ab3b4b280001c5587181f2338cf9a57dc19499c401074e068f8d764160f5845d8d77c153267318ccf076035e414a551ce6b12c623a209151c0f496c776a1fe919522db86c51947ad34c49a6996808542eaf34fb776216a8f0cf8787153fca1ee5e6d479eff3571f68c1a7e4be30a6875c808bbe93a6f8ac9b2046dd64777e2800b68e5e9353aee6197a00779d6502fa9b5474f1592dc4bdadd60bb9dcb445c7817272c3606ba883b4f37a2eb0e790e023734ed53b64692cc0bf9e1011930e47cc8c73e3e5bc0bd0f69393f11a1a4b3d5efba7b6e713d8f8d661562b061920345036f75d10475ae508872f1daf55cb6dc186466f73576f0365dafb9472bf2d744be99c575964bdb6cb68abdb6ebfa92da009ff6abd75fbfbe05b4257c5dd01dca8e6693dd5362f8f595ccffcd6979cdfedab6b4860b20492d6355ef340a47c7f1d8556e316516d34c16e50d8bb68c83c3749e5bf2b679b19b68be4286c3ec5ab5a8a03f0b2da74428c471909e56c87da2aff435471f362455d62d2e13ae55fcf1cac003246d59844a1a87988b3d2f2ce484f3f95fc733d55d856fd3a3d6f459f45e25ac5d6e14ebfb2047571039b065618db97c3799375a90797a6020bd16b487250a33533518c996bf796a2726e7794e1277a69d0205276a7d03b51c4855f14747ab4f895323df6aa82a2669955d518f874b15aefe26eb2e30d76a1145dbb54ff36d1a578d51079a00abc0ceb4ebe5e6ec8dc5fba06cf3ab2747ccf0b94a534e91658086830a23b598cb34730a6efe663f554d6994a5ccc2ab67da20ea075c58d7f05033b686d56f1aa43756019dfee5f5b537efeb69ad33e48c526892df6ec980b168ea1ed6a986187bba9bc5364b12e7d11e03aec567ba856496fd6a9e6e780a963efb3907d43bdbc1f08d7b66ddb23a820e8cb9a788ef4abbea394e34ceff34c14278612be2e68624c9d2b5a7680038a8bae76ec3d940fd7dcd1e28b7e8734dd040f8c2d87a854180feb7f7681629665caaa423b12118e3100b4eee9ef66a32a9fe774531163fbc36c9f6a3f050f18dd9fe9149b014a51e5353367c7f0d7ac6969641c5f6099532df674477a05ce25168b5982db68e1cdb9520e8291e4abab839fbe237c9f9d152e6dd0133e2af2be463553dbe985ff6bd62481becdde10884f8e3a167a278e04f08e3b2558a455e7eecf81231b320e485d8ab7f3b3191c4f3e1d57230bcf2d629c26ffa2368db6cd9aa1a3e225e342bc62bd7ff0b56e09650c0a48c6deae08ea67607aec7b853b508df66bc8b14bf28375339caded99ed5e6ec373628dadc8c36363ffe3856a836541d0c6356b47410e080ab831ed5d4f5b7aac09732901a1313b714747d55dda52683eff1449adb1c7963d62ac9b0c910fb819d797722a7c3567bedfea798a1c86130bd6d5050cdddc946120121ecffbdf785c7eead7a305e5afa31647aec8e8d00e3b2f1b601846bf798fe297f977323f71312a006503898382d929b160218b882a12727144a35871a43f07413863cb5dfa80a6c1fb3719e1ec1e0de0b4599ed7001a3632421a161c8f6e5d120910ac632362914d20b63a6e838bdc90ed9fb6e7e22eaae9d2da41a134bbcc6905c846c7a43a8dc4c65172c3ad883b2b7df883d377aad8d1f77ab12f36c881cc5d846898977b5c67a3704adbc565474cbc0e9f4e27d8c30a66cd60816f1f4f3588cc1e2327e448e59e8b93809e7cfb3cc27923f392a0e6274c1f25ec9b6c4f5119f6b01a5b94c70e53cf8160a01f6502831c3ac8a259895291efdc0c854918d181a2308b5968cc2620a81d53cbfa88f0a43219956e5e574ea9dbb0f126c93bfb8c428aee3a24d7ca0f878780901e9ddc089e33d475c92f3d9cd16e4d222abffe857f506ff7fc00b3232c041600b9560be2fe45cd783a2bf0de7a6846c0cc87d01ec6709d64ff7ae0380df0c711c67494becb0d988d8b5e8de54ed1abdf7ae3bfb26e277c740c504602e6e478c0bfd76c7a45df84f44dc2fbc7929192e359ff381a3879c2499c2049f6f0fc7851404b18f2eea266b3d15c179ce2a292dbf68940ad2ca5dad657c57d170ebbb89c2236bb4af115ee3cf8d2966137e8013027f7102376604053637676347c4daa82d26e6539d8a2a838d550f8e8f7267738a03be6b52aba7bf7de5d93190eb26afd646af29b701fdaa9676da82fda66b74a25ca3c7c7fcd522dd23d3c8f2ac92954d16fa03c2ce8640448c14baa4bb6a05089041cc647a3affaea531783773537f0034c3fb53925640487abb0d64d61e094446cbe3faf3864643cfb39fadece787d9ca66dbf256f328d83aa76ca4ab0e7b56a05cfdbf138aca1860623107c29d252244c8ba55a0bbd264b3d4df3e6469a31e973ea4d4bf2d2817997c816ed35f511df70d8ea4a2cd53793c15cbe86e281e7e36b680fb31dc56983f4c1b4596b202d79191a414f64d09d071472d2cc5039f0e9f15c3197c63e5ca72d14ec9d8585cead4756cce0c184f912ef3e754e224b6305bc91e98f1f68b1ab2a4c4d22c71f372b9329f063d1f09416ddd76281006a5aafe1452bf0c2c6dfd589cb9ba8994557770700d695ce81e424dac16f8a45a98b8ac79396c10e11016b26ab75288f202485d1b8c45b4ff8b14df6ea20cb8d62f5a8956dcfd267ae616c193f7f6464bdf374c1c0dfd9a9c2dab189736ef9b604103a7b2b10889cff35f157b2907c16435efecc24c5c1ce5af75c432fc5c2aa04c0299af2edec0a2f3725bf1778a071045737033b77089632210bcdffec960ef941dc4c46fefd56ffb91457eeb12a95b22674e3f48bb510b36258bdc63f8dc603cbbe06e01f5b76c30a0c083847d75a4efac94e03c708505090288641a2114bc7f7e999a828eb8c21bc26ade2b0f94becf45d736d74f5740fa5893a258be0a9471a54e75cfdd23606d2c5ca9f7976fbdd7a0cb66563417cfe7231df18f903e08347719875db2a948757e05b01e5f70fbb4a4a4fdfb4339bf4acd5d5c3fdd32859abff779b6154c27a18c1b039a65975df3000930de62f35e9286154ce07e8c311ca2004bb4381b2a6e5eba93a5e3fb51f0a9f7de700a42b24b56d6288a7b61c449b6a35941813383dfb3e2c694600edc5a75d425fcaaa5d2184f9194ec259fe18c6244b5b52eb7d74f720e5b1ce4c3adee44282eab9018ff182eb125286725665775c3863d0b2de6a6ac943e8a3305717e829c568b3d8d654d2de81d1ea47a5d26371f44b8f4da3ed0bf32a395eaf640db249ec07c675ae69286f842971531501d0af8e0dc1e84645b9d17466fc34f358d3d8234780fb58459e2ef6dd58819492c7c9fc9c9f0fa41dd626c0da8ef2a78fc32a11597c98cc24eb6edfdbfad5a856a8195c944ebafd886ac3ca69cbcf781f5732a90486ce43cf5a7aa78ed307b4e091f558ee87f904f09545ee75e5ed21bcb664156d72074e46d989b85d7997a0884bc5248d0821b24f24e19dcf5b84424606989649ffeb08ebcb109cceea5f7858d97b67a212c79a29c28c3990045f73f23050f3baf6ef7db198e7dfd8e6788c6c3fd912cf61d7cbf35742ec2c1f6079b5df1d69a765377e42e07225d4b890e3e7065d7a236384139a2b3c25608c95450a8579721b0854c1d9779376650012651d0959ede5f1e51f319e748cb8b23278b8cabf293dbc93a0e9bc3c1f254793a5b419963378a9d9acb2dcd992ae26b62fd4a0f9efd461eaec9de4df68baa19e57264ac92538e7fcc7e31f696c4f5f53e2928417c7daa7b32162cd16bc3e706c8b47ef9749290f2dec6ce03a70714dcc4b23f5d2cb8f535db5f46f67248b21ff4fd81d548f83738aff24d36c6180d1ea0e4bc0cd830235836eb9694dfe0d55f4a4182f37ed5145da78242f14fdc9a839945c619df3b7cac4e05afe0be0c1513a014c23d019b24156c5ebfecfb42d6cd61c8a83a1c0b819b231fddb1b52ad5cf8ba8c6d03f4cbe611ff3acc011bded99448d8dce20103f2e962283b5b3d717cad68a62e17ea2d68c42dbbacc61f564e3246436f64a0bb3f7a345b0afd5fcbb65f38e7c6b62c7f72d43952f251e7206a7f1d5b2d140906dbe7602ce4ecf3b47341bfaf74e6142e7b7906279ab9efee39e22fc1a5bbb8bcb791253da911a381c3ff8fc35ac1e9a7d92a9a8893fac90f9f5b1ee35e5c222cc20208eb800043744ea7f815fa439f03df7fb035cc02fdd536fa6a9b03b4f68ffdc7ae6ab41bf403948dcc30c39afdd12bff62947909760070c9ef8e1bf949f8ff77203c6ea6e5b7caae8fc244d956cf302a40b504c41cf3b923a6dfe37850d00faa16eb1c9403dfdcc644117fad66cd9e288a7cd828f99f2368350af622b39b56ba81930ba90e3099ae8ae05c7d9ee830ef92c24062e491228516f0f664c64f2a54f1d2dfa5d600837c8d68e36fe788d8db5c03a23bb7935ea0ed5dbdb93108ca8fc37fe964a30e0a2461ff7b18bab13111dd95a8fa88ddc7d94cbc81dcadbc5e9f9169dfedc2eea44b46899e2de7ff5c01220ab3d739ae5fcf4cf1f51b5402f2438b1574b1e3a0d75a23a03be19862914690e567011603895efbbf1f407324b245313b1c026a8ac5c30ab74d084e52acbe07bcfcec1cb803cf256cdc1821cbf5836e01ac95fc2fde652356a5a2784c5152bf32b3dce76f7db259536e6ee8972a7ff12f2fd99ca4b78e9bdb5ac9084819154dcedfed6be3740dcb1ce1b1519ad4a585e2b6dd1a9d2eaab32bdb5b553a7445a16f9397daa098f680fcc15768d211b6b2568349b1eeeb1b991f6d245746da9cd5cf3c01a707509fc9fc12ad39a76554cbc7ecb66fbcc00f93394641a42423bf84a1fb195b0127741ce04a7a671f4677c2ce1cc8778bc2eb6c187033a12c7a16fa8c0b62b75ae04f232f3b634d1a32fdd4e7eaade39805492cb7878d804e91f867cb91d941c97dbd3995d83144730f23165f2702906b9ad0e9ba64e35c740785c2d4619c7303c19821948117bf817c5c8868c096d01c10f7893fa7e6dadd5d7f4e245aa50af0999e86a6033261564b2bcfacedae259f18c44443bc309287d4c51ae9c0ffe1a5d8cce3a2c4035236ce37e4ce397b627a557b04c04ebf6a9982daaa3db9500e9a2f352129efb10280a799e27f72c8371de350188d264e4c24d15ff531b29bf4a6415b7d1434b4633013c89e05c3d475bdb71fcdac282bf8fac67b14078b2d80b1f37423db38b2048ae0c88bf4e94d96af42d23a82d2cf70ff1592001f2afcc982696fffece036c26b1081aa6a3c13f9bf7c851ae9c7fa833dbaa8087a39932df682d5c260aca5bf08b138cc6e4b3ebfae00e193741dac5fcea91412b701fae2c075857d30e3b4b13e6caf620e3501b182c64c047d990ebdbff39d1afa8cd0cb05abf62c6d856a2e4638ca56f6d4dc126c91aafa97946bef5816b34f43ed35df7e84026d3a93dc7e97cd196f08022a5a567683c653c2cc56355e3407faf2ca67a235e4276bea5de0a8be009503dfb56c1260da9053a30d3eb9175eb8aaa728927f75253d05f9e0028f9464048102e6adb852fb61b185dd67952c05fdc06ea51a0fc794344c27786beaa478647b762f63bb1e8d05ec7c7d4c21f40fbfb306802e05278e14a5470463d4fb259cd8a1b97539b5701a3cfc8d04323837623693512253a1f23e46d9693903cf29d985b0e32448656adb3951bb8d250223532ee0bf8c1ba043ef00a68cc51a87b38554f3e89b360a395a9cf590be504a4f8d10ae52fab8b3a61e7c9dab9b75f22f0081258ccfd243becdf47c6b60d783461934cf37f96464d7d4a6219bb5cc92ee828cc63ea7078d32163dd07144b9848bd0da5fe035e208b4e48f35449241c473331408877b574906949482c8172e537814ccaf0577bcdced706e3bc20efec3af67c0ae6b7c6b0378316e81247900403b09c29f98cf525895595911a218d03e77e85e70285d2468fdbad515721b16e58d3f365efef3b59081cb66b520c4a3481e5abcf779ca2f06f2749dd9896d62ff38ead7cd6ef0000b613957fae23917eb681977f2b502a6746970eaaeb697c3705c833b20b05011857f5f90000e5d3c4f2c8f5c5fdb6a099bd252186b4fff4fed15e6263a62068055ca206f0ec35de2b419e915e30f41b9560f2fc67b5f527dc3a8f543b85fd04da320263118c1c49c2e2a5397953524120d90b49780d19ee824f26d9322c211f492356dc32b3fcb9558fd55eb7535996698d28e4957bfeb6b453165accf14bd5a104f6341b7116b4776d55583ef30346f49aa1630b73f5547262a0287176218e5d45fde0e0be147a39121de9a0e949058d61072d1e61c26505842f94329ee5603f6f95729b8efd4d51426c0a9d436c572abb45b3cc519a27b76167be5bb8cf9edfa9e139939bb0f186c1abeb7ebc59a38f4b7d33ea8e03ce08fb9c10c63711b47185d95a378a5203fa00bfe626f9ac5e4f09d1bd1e6df1e4dceeb5193bb8c335a5482ed178edbbfea4d62a7b9410d6bf20260fbb544fc0b1cb04ffbaed1ecf40fc87fe3a38d915fb3f9aad7169256015abb99025332ef2029adcc63308d90667bcef6eb50ea8b5e58ac2d53bb29bc0040e98cd545293a9f965461ac866d33645bd2c0f5a17273159cbffc2af18b77526998ce2de492c319ec4e14087339f741218944b02d00aa3db355f7eafe01363ff8533240a509436c2929dfe365c4b96f0a11e562e412b79a46b4fc0bec38701b0bb8182b8eb199839e148c62b54e60e83390987aa569e4e5c0baf8763c6079e0bfb2255478d5b2d75e556ecca68bf76442df8d2134fc7aba48f66fabb669f79e2ba6d661af0783014e7536bf721dabd2661e7ba6768f72a19a330d192c44e37b7f0dcabcad8fcc4860dae79291cb3130a042af6479677d23cda205fe9d7b9e0a4bf4caf57b5c792edf836a0ba815f034d74ec79a46ab9c4d4e043d67f6abbe38d60079eb7ca2e65d3cf4925801202405ee2599f20306f22f6d1601696490fae348dffba0dac68d9007a7a939ee27aea44215691eeaef0c3703b3bce8f061d3288543d8281011a625f466ead86c58ceb579a38ec7d3bfccb8cd3b4a0af24055fd26fbe5a89dfa289f6eff524680711c345918e2e7c3db794969b87bfa42b0ac785baec2c94a7d84867b145e095761b5009b0f82d50b83a3d47e591f581c92370d42cb0a2ed9f4d071011380f9933117e6f03c2b3e106b8aa4ff426cc22ac97f373df6f6955e093b1dfe97fdf8e8117b8f030d5bdbe4f861408437bd1a1597e1585ee70ecc814d64893bcd8a631dc9f47e75c035eaab8670c15da9134d1795b241cd37dca800788c29cbf9b93b91606397896eb96143aeb6cf90d0606b71500b5ac93f4cc7d7b84f4b2ced3329565c992fc4c036f3207b8e33515f1850c609832f0b2b8068178cc83b68b08f6dfd9885788cd3b6fe8a5ed60523b46523fd6b1b62e7b3da12471d0278d4b181a470e9b85430c12e5f2b6b58ed41f358007dd5378eee992c0efa83e0d23db02d7b819e11e82f9b9aa5834e16896f91e4c8a5e5b57ec34fd0691b83b75cc5e797a1e40d61f601ab088d6f97401dc2caeea8d0636359241f26e8d937ff11e85499f0f34f262d370dcd4077a161f5fbab231a2ddf2969b933e195c7ac32a3b5378cec78530b78deaa198455baa7f015514aafa05e0abf7ebd62649d44716965f7640d1dde0069242f7c987f246b1188cd17f1155d7889394c7e970b1a86449fd68e4c1022828ff22aefdeed183532c2c67b80ed0c2b39b5ab53e0fef37bdb9d1c5b1d92dfc61c21d5aa9873b0167611aa09a64edf239786e300d0716e434e5f8cc7d77f02b5f341479d366635f72ca1ea589f4c7ee7f88b142fee30808ddc4bd71eb8baca995f6ec621eda0872cc185d24f8a530e461536838e6d8153302375b5d54aeca16bb76000045c5ecd527d44995a2fecd902212f7051dc55fcc8355b8433887e6d7497b0c8de2e27bf7a3a404ef24821481ffa24bcc1d54edd9e6eb76ddaf1fa730d543ce4ffe68ebe59eec3fbc7e5c07f1e4789baed618c9fb7c4b5767a6c9f68c835cd6025e66948fbaf8f5e1247190c78693634488fb86c354f574510a8f2ea68b2df5c6188bfd4fdfff86ff3ff6ae85f0720189e9207d26907d422c13c0da1b96f86b2c3c928937d2d2ff93cae9d30e1f1bdff72e98eace94e397cf280eddffaff14391e7852975ed9d4b4ac2189f074cdd37dc6d28109bca89394daa575b9135de8e728e67749c26332ab7dfc03e9c1ae91305efc6aba2cf7fa899a0bcdd6c809da12d32be3f140134f31328e7913d55d65a5e8a4effb92fb2469ed4c1b804e0b791bf99443facd609efe01a37b0c1f39b482f92c6ebbe55ce36a874f6865103c3626046c0ff2065f64213c752b3282aec20e71fc4cd3419923002308cf6bff97c42241b61ed089a2a34dbcf78b6fb36bf500cd59dcdb392d022ec7a6261b324b5012b87cf760c5ec7d57726936e87862a82f9b34c51945a41828fb7ae29bcbe7c2c37a3900e40f719bb8b16eefa234cac29db7a1bc8ecdf95ad944bf8dab51876fcf8c73eb0e20969522bf632d8af206ed6299f39d61fedce3388495c8aef129bfe91d46e8804f9c4bd15fda57da670a58c60f162c0fedeca175adc9d043e4af6cbfb865f82e8ce596c0ba8652186e326257092de74c6a1abeb36412ce0ea634415be18ced980d68d0fff9d04232f10206a8d1f618da7ad14f4b38ffad60da73197779b34d0e3c2dc7ede73e287a1d7f250594b8219be9ce7d08f464ec157e996c00108ec2ee3221f6a9e3ef43632ee68edfa29c64fdfb08c2f9ef377f5a5fd557810bea141e83779dbe8537f4c05a3254c468008369c660b543468a3809919861fde87a28bac02bd8ecd08e4ca6940252ff427582b86fc6f57484a4667d99fd8d23ca83a1418d0a6c14e0e00fff4d957ece4ddca57cbbe333afd26c3bd1f5742bb354159b0adcc77ff17b26393662a61c61632ef70dea982af540c5d28be13a35aad969bb7a63ba164819d670ee87995219742dfa695fba6ddace4fbf649e1b9cd6ab6e45712937b566991117b5de2d7b1090be6444d078d2d85a3998deb97b3b962dbcd28df5b821a170c36095f4ab7827ead2054abcc7484b562bcad7373ef75ba25a635e7ba92371457f0e54dfa5bc49cc056ad903be9008bf3974a238aa00325681837244bce00b045d5d75ce3dae7e8ad20cf292b672b8079e461bfcc926506b1959934735f78f2ac6742ec69d6f6055c54d0e646dc7796d2fa5b2dc5a7edb3920ac366fac58731e0536c399687ac10010ca733955b87e981d8df73a690888273db7027a92002159c76a61cf3b2717bd06b7094fe001571506c0c2e6ab021bed50b218a1c010d22783934a465ef87e118c0116041ae7074435cae53b6aceecec6c6d584d856e71f2cfb7c0a996db8584f801d995522456374fda69b22c7540048aa971723d7c9c03ef8a0e9a1978a824700630b837a869bb141891bffdac03aba28416924480a653e235831d663405c06e767590fb71c67e4ee0d01506adb88349b40cd4af0f6d0952799cafdfa4a148bb63bb46e6902823752a6ce42cb56ad13ca28ea8801cba0fd1fa83803aa67cec87461ac397585effcf4eea3d799845551a76df3708b501977b5bbcae6766f39a80a3e44286b3f1fa439d14f49a676da6277963a518eb0ea5416449e0e440395f3da024aff30cbf1c7536b0950e77b8eab17749ff8566c2e8f9433df94a2202aade4551229be99bd1522068cab539d73d771519369441c27e58a6009ea2ddb6d572ed931b1a9e35f2d5d5be32b8d8ceb3a5d3c6705ccb54608d4124692752460f5c59dd9d4cadace5579af76b656c8f20b490ab0cd5183e6f2b613be4fec676be81464a018b42794859b55d3efa334c4aa8bdb71769bac1269a2edc1371f1f4425e3221fab1ad5a3263b0661619880d853a8b7592b6cb93e6d5c513a541909b25bbc7dc97d2a98c8538f9333626a4e4e7fb8bedbf3ef66ab381827bcb7433072d775340168d22b367ed89748bb0919564e78dfa81e50b6df164888df633015f5252fcb436ce2536a4fb1d79427ce83422fb26f582196b704cb7fc48baa4e26198a99ef641d1d97eea963a94cf686c15ec85bec716aa0931adf7dcc9df9c8b8c10620dde8b931afb559a90c6d6ecafff8c452d6fc1d3ed0877e7e769a2371761dce8b4aae88579c868711fae4b9e3d7f8fdf71da9fd0e4eee89055d428d03607ac116232180779801bee87b054a5d3a1f31ad64ef12bdccd6a482a6dbf7c160202ed671b0fd965bab2bc0d22ddcc9f6b27d3ed15bd914ff13f4e08fdbc8ddadd28ec0e1af6b0c917927cc3a98a5516ec0e44561a3c682a6a7dd2c6dcc4d19113b312c8a32bd87b687dbe1efa59bbd36e7b15107b1c5be2bf903525f5e3843581fc29d33d1d7b7614b83e67745d16f3be68d79d8be95428d80a6bd79740463ef4f81ffd37e754a409344565ad3d79ab3a97dcd6d9da3e3f51732dc9a235a3bc0a329e8967fa33933cba1cf122a64ff834fb8a88d52ad3f6af6de16634316cf8f388d59a6095437198fc8b40a4e70be244dc34c340cd38f5d48316b74a8979123884c3a78f50cbf4ae332967f49060b4bbe630fa0454a80df0cb6cb7407d645be0b0d62cab4e0c6891ada1defc44877b5dd8651eff72b03e290802d59edf232fa3ac7e4897ad5c8df3d87166372dc0b8046e7ae957275ec73e2878c8c7248bfab355a02cf753089e243616158ed8f77656c02608648646c8ca891641c2d2a23a0bc9ce9710bdf2fd12c688997720d787434e4751be0f248ed49600bceb7e21b1e10f67849b133d11c823be6b0398dcb15b2979fec4c2eda7c9d0b11392271309a4c30f0d49c48debeda186ba5c0cb28ec3edf9edc0cfe691019644646883c17c78075a634e19692b7431628bd90b46c760c4c6de6e421ce60d6d9566449c4bd14085bb4cacb86fae5e790cdeb1516b91ddba37518109cc2aa77b41231e10bd39d38bb4961baa4114d1cb33b5999a3682befd6bb9325c0c88b753e41b43af92a3607214796dca4d7f965906b5c390d7abcaeed0ec7d06a25e3b7153d57e92e723cf6ae694b5bb3045ef84fbe187754a94a23b1f134386cdfe01546c7663d20970d62856333a517a8957c6379a3ec1b91481016cbb25ab7981ff251d0838cc09b6bde88b8a2563e802600c6a41ca6c1613ceb088e2a19e82163bffa3b7a19f3b5ebdb56a653591b2f6e9bfa02eccaf603a96e1e386b13307841db6bf5c6ebc9632bb2a713336365aebac6922af46e24466e602c4ca55c95b54cd2f1a94d43746afa77c82bd76aecf1e3e643c9d7c8aee423cbae7128067ec45d9530fafbd7cdd8cf15ad2cdb38f56b5ce39e5b638d710556f07f68cfd2a873743f3c88000af7cfc7e204317ee62ac9d0bf421d71c901536fde70b86bdb4b224ce1acfe0b300bbf25c035ec71dc3abf55d9470bb8c8655ad60226500593aa0414b0480988930f6686602720215cf23c6fc2a6f89823250505822acdc262bab8286734a87e199726a1d27d816cc3c7ae37979a41d389624aee9e774da758702e5bf263c01961d3ea6724d817fe4ceb7135e89d191d5706d508378b1c4a9aba03fc8851299938c81fd2ac6b157a011289bd96557aad51051f1c407410afcebb6e6421d771b91084d30ced952a553ce4894073def6cae9865c104c2366acd930bc1f599572f11e26e8f71d9d5fc456f27f70ccf04d7bb2fd1dfea147a51dad3f20095eaa4d67cb2439f71ba9c54ef32e69b39358f56ca709ab74241c4c9c0830ff9310a24afceb0cb2c1f03b079fa8e9106560a4512b5cf0893ec87a2402d99210aa195fef2a9162ec669d24b8535b71c02ab7b66ad3d19196c994087840ed56c38cc68dad58dadf574368a9680c6b0c34463f22a29e880b361a00f8b53793241c99438cb160117c304ca269ce150580d83e705a7129cf923c4ee662030a02f20ed275371fd62c2b7e964ef5d2622f145ba9ec240b1243cdfb7df96b30c2cb4ee30adff53d7a48158af43ce06f5af3a4c8c567ef79f5f5471aabcd612648a718933761f8d1c83cfbbcf5658d321d01332a58927356cab18438641a52b474683b9bb5039d18cb03dda689adef72feaef3fd62f04f465bbb9146c55e4374706d64de95900c5302037ed887ab525b432ff41fcf218a66bcd9c22804aec2ba1cd75a8912ca3979e422cae501869f660be227cb9b1fe11886bc6b587bd0f62f94659b8304622b9c6faf8aa936ffa634730b5e9ada60d36924f26df526031c4a12c568abdd86c9be87a7ea1061d4184962bf2364a13e94f5266ba8943ab3e19f1410843ba960ddd488a758ca34fa6cba40440ac8ab9c9eb25a4ba1f8cff7c5a7b4718225a9a9ee037c4bae7f791e44aa24a4608c5dab917715d87667166f77ac7b1b7a606b96b6341f7e2347a4ac46e2283df3aa6f4ed2e607906564aacb03645c64d1fc2ec2167559556eaf6f894d534159d2d2fd42c7110fad2d0e3097ca2d58b96e335be58d06d4b941dc25a8f50d23840f55ebaf56bab8662d1dc3b79e4538810b509d9b0ff26d0669e155f95c61a6bd6fb05af6b1fb79e279e409438dc1bc991975f746862d9d4b17d645db06b5352c8281ac9c199696eed4772a5874ee5aacd9dc7d7ec5dd0b368d00dcd28b52703a28c82cbff6ed30d57a7489fcee6e0d3c8702b9206b72e0ea48082bd416f1e67d7669b6af9e40b6910b412677950ac9303a96c1f9406539509127b2f27c86dc2c9fef71eb8c1a4af4aa3d74bac3a9c13ff0b90488e21f0f3440f1274671a32056cffbd4640131e4ea4638118e07a2f0e659b3a963e71b80d0a5156b001a88c76929d1a4d8c487c67d3fa84dd1b376ee47b39291858c623652cafe076d52a7ab399d84885956c997f6a658380b47af0ef310a9e3debefea703e1fc25cf3e789bde0029bf3f0d1e27cbcad01f1782256b2f20ad6d25d0a459bd33ad270c136a7bb4725b7b886dc3b0a6855f78ca82d31ce935b8693d1913b556740fe92f078b2764a2c10cb3d3a51c45d9f1b7148e567db2e2dc84a96806a473387c0c71fb75706d4113388b1bf81c7ae394492452b77a28b2fc48ad3aff7b91f42382996e524ae4a020af4a542a931eef58a73e116a10cc0f2292e06f71dba4466c873cbfd2f2d4eb712d46c9704ed01cbd2452e53cc0194ec8469152b571657093c80e6b42849bfab036def3ad6f8cd17ba5c3cf8f42ed7c7e61c2eca9265d8935c58c8e0304ebd933a9585cd269d342e73c5bf3470ce07c9b029d6ff21e1b2a5112d086027c8f1c185130730c348112223bafdef2ea7f17a3a2486ae57fa98559ae7e2d38875312592f28f8620c0a280480f8ccb925dc5dda6068873201fb4425eaa0b55af3966eb0a6ef92929d370a046093cad8fb719c96a78d0c0f97d803b74e4cbe6e0b5f83e6c36bb6c1c50a0611b8378052c5dd2d8452ac1fd2867ab7e9b2b6d38923e77535b9db090d7d1b1f1a487d176876ab41f2a39dc9f14de07b5aa6afab128bf32f63fbd14831d17677c17e369baa1003a295b9ce5d6cc15557b8c20491031377d47d274a63da5a4acbe06f4bc92065c80977a4cf9e10393f7970b6d6a716ea5f70c0fcb44b67886e0cfd43d87f7b57f5623c3df65437fd4fda97d2ae197394e62d45f5ebb5043621d637ffa19363e2166da3ed1640c4fa008658d465ba055a1183244c58cafda6eeee259bdd5715260a5b7d81ca475f96a12d618b835ba26eb22b960f47fa1ee3a510d7c521a8d3f4b4684bfc96278a986284fa1b1b7bad75913530bc3fa455fc8521577ae87788b61911c4d4b271a2c07c9ddfb905a35ebecf90b83768f1d114ef399e6ce6f971bbcbe73bcd75765bf227b05dd529b1acf22e62dd9c20fe181d06058be6b41ac544258aeb541401651bd43c7fdd8c24311e001140ddeb70bba4499d3c05b10aa87858bb15dcad9f6c426f4666e8524e5af673981db05ae2ed323a7cc339ad3966e78d8f15fd3ed860d9fa8c3e7e44099cc36c6febd5a528e1d94aae84970b458f07da5bbc5616d9313b45cc058fc55a75f1047710078e047b21c1459262568b4449145ac5a946673f79edb476563cb754a84dfc0af74cca6aa206efa001c0b6f2a7746f3e908222ce163f3239daf8d30a6159bb122bdaef1ff1f5d3a96f0a49f20edf5d8b0411523e6f5f6035c4830c1565e10dbe0baff7a79091c93f7e206ae00704ba7a1adeaa6a3bd3fd304d1da280b56905235d87725efa4185259c66c1894eeacb468bc9589a3481f7bfd32a2cf2576aecb837eb822f12ac929f5cc9d1eb38c56676303e73d50b45aed6f26be76c854559fb9cc74f88d9f48a2e2da8b413659059c23edfcaef70e2f7c6d57114fa9c982c8fe7dc856efffcaa4a12e0a1acf15f2d0ca3b8db5ee72295399a54d23495fe0586eba6a4af0f6d9efe293d16c6653f4a2fa8bddca9c5f69d1cfd4c5536955b4aaecf23dd45cfa33430746c9df9f7066c4d8a23f2484e6e66868163e3d0c1b7a0bfd3a16e2655740f350a610e4fec316827f8f80d81c483140eeaebc585b1a28608f721d875221973e215b34eb0b8a0f794a547cd2ac318bf5ff00c90490a5b16b8b6ebabae0199343a74da4a47ce261ba63ccc4f1294ac5cbcb4c67a8d2749c65419d3b89daa01cd05b066a0da4d7c7cf8796a7eb5b4cc08177811a15453312c5542b30122e6b5bf35b4240e4b2968da7cfabeb1acd43a05893fa3a7ccf10fd0fc7d15132e9e47f93d018292ae25b70c73f0d77bb6589723aae83f366cccc3d3028051e2fb306fe922c5539fe54440be3bd7b66d6eaf37b8424a56dc97d30c902a13657229b1b79568dcb2b588d29f3cd96f5e80ef3982264b38f34f2127e52b693b4b739655b7ef084bbde9ca7673c09891457592d3693b0a8a43fa21808b17469ef0741e778e677cc978b6bb8b60593914c487a5fe9afe87e5d2581d7208cafdc5e5ae2db890ad6ef03f5927cfe806871072152a9240f054ce23fd00dbacc7f971ebb38b5f0b76a4bb9ae893674cd658178e8001afc84dd7969277c9c0d0982eb467637b7dd71274606ff942196aded55c672d244b208216074f4affff71e9b5ede838151f2da5a6e3497535f9d893329d8bccbed7df9a167d9c3dd33b66a6c169e5d7a1ae0a7857b2b7c004ccb31aca42a143b25a4ec1feb9c935172f2ce38038c775ae76b140aeb8c996dfc7f1518e9088730ff00ed656495fef099d47846bdaf9f89f4da936ce5ac9b0b33f50843c14613fa24ab9c495ea120f956e3c1e6d15031d0388954a0a9614f191fc15c875cb13fd1a0efd3cc66b720120ddd59f6375f0d1e96dee5735606cb36f75b24afa698c6024fe2d73624492a12184ebb83358fbb22606159d01adf22b727ddc405f2b7048b4615056577d1c647345204efcde0cd32bff35ec54cb3a8e9046e6b58b8a41885fd4cdd218d58838ebe9e06baa71015ab3ab08bcd304e597118bbc2f35c662a85739f2dbb948852cba942065471fb87be4f8e7967ad2a3253ba3ee01aa3afa5e06c6e649e40050509a0841596c07219e0773cccda23d75f9b2717af5af9adb6a793a15c698718cd3a087635811d9f518b3b481f8c8c75e0e4cac2a05604909bff318b35febe3486202644dc34cd4882710c475e200e2026d759f0bc69ad729f4e3c6ff8f72ff2fdc726f66bd2fa81c5b51869ec5a3280369df18a7b7d34847a4ec62eb37d25881e1c1684e0a0b84c463925c6c159ca0e43f2dd38596f0f9d763eab9295687b52ac85a0a0aa00020e7170cbf8d228d24ed7dc891e3e5c56b322d248f57ffc5fdd4b1855ab2156c0f81d0a2022cdea9a70538e0e0a5be5951f3df27b37483131201d998222e08c522e3e9c2b9964f39de4c5391d841a9264f377814b263884454ca58c9482f16bdae13c6b30b6b8af662b088d96c51a0014de3a34df26bf93ae9ac7263a51e3434ee3789570f494b1dc3160b346ea31fc895e2ddf42ae5363d91af0e19ba52093a27f9a3e76eeac46aefc652e6b836aeed4cd2c70c89681a7be23bab039021f261b0620f1d9d9864d7528f7360f5ecf593fe23e7012b14f3518bff7fd2912e1d52cd9c4e4c6c01cd18e1d7077c69391021f45eaeac336f9b9b9a765802f2abc4990a3c4e7ebb324d6b87ad77b3d3e5785574eb67561040f59c00b4b64ed7b19798d44616406d268d1f6fde5be47ed6b7afa979513463d0d1a19725dfbecbfd267f6458257b3993237bd0ca1da66418beaa14f47afdfcd14d49408d534326a83b184191623eb0844f3e6c9094fd2846d6c983fc1536a2170f0cccb0eb05d1154569e036d2e6a77ad43ad5a73d555119d0825463ddeea52939dc0acfc53cdef03c3148bea0f1ccdd3b071ea0553c98d5c28e95871460c3f5b153c180ab359d0903631d16f88a14530381847043357c5b3172cdd9be015582343430d59e504ef7bd9ca4d1dab5cbaa59c102ec13ff35c2c185d9ded082f27d3c52ba7cd259599503e52cb4071922021f6379c22893d45950513b3d28e8368a596b3bfc12be0cd90926760dd5891426bdfe1954621ac612703a7a2162bef2bdf63c8d120cc78845cdcb3de835f869ddcc48d081c776863d8e846e88f6c916df2d4cfa2e3616dcbc5ed2a7b0ee09bb6fbcc98a89df17d6c9f6ef8bdeb6d51fc30349bded6a77bc79b39f5f61d762f3e376ef4702332d36355a53d6b9e8d1f6750be0e5ae0fdc0c1bd7aeb023b417434c1d145ba79f6dbffb779e981b583b0a52f57d48a8aa0ade36692e9b49510ca2a8cb7266a6846c42085f024a2d6cdae41d2fce73f07e871126c8b4ce7eea976459376c78f3f53b27b238e768a43283510d223c3d39e2c8bf3219263cbfc68c3bb2ca844105fa87088cec996e03792fbabb0ffe88a3f46dfab55903feb11b8a20460f627da13c95be5a378eeb4a723f48fd343318ec4ba62d92bf97487a91b37576c1b98735a7613a7cde32be3c134ba50c09bd33700c7d30ca0d9dd4719eafb5c4fa0c025259243e26135b6e3b4912bffbbb9fd711fcdf9f739f22827880de600b6a2014200d5a01ea237a217e18a4319be2ea8e1dcff0f459a5a9d4fe28b1b5a1d6c4899541cb8d2d6cd322889afc6a51d80c81d7f25672622eb504a184a1e5d6eb4361a4202f3b3d1f5c85dbac806376859b125b2c84d244166ab0c87c8f7b65bbcea1a0f26a8ccdd13eb0da2f6e19bfcbdde4d44e78d2e3d2ffaa71fff4d4f3425a344b253976ebd8b20ae2a5ccd7f535630033cda1a4b02c8a8a44c909bd83c589aca0552644174cb66e8610014bf220c690491741cf59ff9db7056459b1aed65a40f9b8da1d3127ba67b0e11e17894d276c1f288861e00c39b110c537aa829162df025992e51c65015d16b67709be23148394f3013928a05b39fe523f232824e4e2947dae310259c5458db0e757edea8b94c2060555693da3873c9b0ee7fb66938c41820194fc5e329e9769d10224bac47a6b7bfeb844693fc148f4d7171592f307bc18fd3f38ae86cb10cd96b213c0c222c675ee8592e379aaea7c5fc67a09fc5ad069f6185161381868ea8b83a3bff262811d818ce206a0a83e2d577154916808f319c814b203ea342554122980cab2e1c7b4ce0f12d5c7de054108dbec1b8809c8756ba79debd963e6a6728a82e5d384c8ec4893f6a3927e8328240380645ba2695c599897ac7ec13442b22a17e409d7c9546c04839e09c0caa78ba3a1d2b1fe8bf2a423efbe997ec1ed5a7e8e15bdbeaad59486d609c14fe11a6d3277f0ba854df7808055b94fa5a8d00687b00050e4f5da98ddb8ae2c196a57e091d973adf84086941125ce79816dbd6e495fd718522069bb612a8da5636b7760ff48ad31a5cfe1076196c10da2c230f3395ff0331ade9bd8c88c4624fe3de40e812e74f80b68091f8aaf8e138b0c29721a78aa70affdb13f6c01b7c0b6790088c03f411a8393830c8240c9d71bbdeebc94b383738cf6289e674eb2dd6164de5d873bcd515e0034ec20b336</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">miss your girl friend</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">限制内容</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>unicorn_learning4</title>
    <link href="https://pa1r0t.github.io/2022/12/31/unicorn-learning4/"/>
    <id>https://pa1r0t.github.io/2022/12/31/unicorn-learning4/</id>
    <published>2022-12-31T06:12:48.000Z</published>
    <updated>2022-12-31T08:10:21.907Z</updated>
    
    <content type="html"><![CDATA[<p>unicorn_starting</p><p>模拟Jni与Java交互</p><span id="more"></span><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>hook这个函数，其中存在调用java类和java函数</p><p><img src="/./../images/image-20221231150501748.png" alt="image-20221231150501748"></p><p>尝试将上一次的代码进行修改后直接执行，观察结果</p><p><img src="/./../images/image-20221231153507375.png" alt="image-20221231153507375"></p><h3 id="注册java类和方法"><a href="#注册java类和方法" class="headerlink" title="注册java类和方法"></a>注册java类和方法</h3><p>结果发现不能找到java这个类，下面已经给出申明，直接复制即可</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">com_sec_udemo_MainActivity</span>(metaclass=JavaClassDef, jvm_name=<span class="string">&quot;com/sec/udemo/MainActivity&quot;</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 添加自定义java类</span></span><br><span class="line">emulator.java_classloader.add_class(com_sec_udemo_MainActivity)</span><br></pre></td></tr></table></figure><p>执行后发现又要声明相关方法:</p><p><img src="/./../images/image-20221231154406776.png" alt="image-20221231154406776"></p><p>声明方法：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@java_method_def(<span class="params">name=<span class="string">&#x27;getSaltFromJava&#x27;</span>,signature=<span class="string">&#x27;(Ljava/lang/String;)Ljava/lang/String;&#x27;</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">                     args_list=[<span class="string">&#x27;jstring&#x27;</span>],native=<span class="literal">False</span></span>) </span><span class="comment"># 这里native=False申明此方法非native方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSaltFromJava</span>(<span class="params">self,mu,data</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>这个函数在java中的功能如下：</p><p><img src="/./../images/image-20221231142325743.png" alt="image-20221231142325743"></p><p>这里我们作出拼接返回即可</p><p>执行后再次报错</p><p><img src="/./../images/image-20221231155418523.png" alt="image-20221231155418523"></p><p>这里我们缺少jobject对象，这里我们手动创建一下，然后传入进去</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">obj = com_sec_udemo_MainActivity()</span><br><span class="line">sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv3&#x27;</span>,</span><br><span class="line">emulator.java_vm.jni_env.address_ptr,obj,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(sign)</span><br></pre></td></tr></table></figure><p>然后这里又有相加时出现错误</p><p><img src="/./../images/image-20221231160243373.png" alt="image-20221231160243373"></p><p>这里我们调试一下，data的内容：</p><p><img src="/./../images/image-20221231160423365.png" alt="image-20221231160423365"></p><p>一看是java string类型，类型展开发现value中value就是python的str类型</p><p><img src="/./../images/image-20221231160549317.png" alt="image-20221231160549317"></p><p>修改后成功出结果：</p><p><img src="/./../images/image-20221231160712892.png" alt="image-20221231160712892"></p><p>完整代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> androidemu.java.helpers.native_method <span class="keyword">import</span> native_method</span><br><span class="line"><span class="keyword">from</span> UnicornTraceDebugger <span class="keyword">import</span> udbg</span><br><span class="line"><span class="keyword">from</span> androidemu.emulator <span class="keyword">import</span> Emulator</span><br><span class="line"><span class="keyword">from</span> androidemu.utils <span class="keyword">import</span> memory_helpers</span><br><span class="line"><span class="keyword">from</span> androidemu.java.java_classloader <span class="keyword">import</span> JavaClassDef</span><br><span class="line"><span class="keyword">from</span> androidemu.java.java_method_def <span class="keyword">import</span> java_method_def</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置logging</span></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    stream=sys.stdout,</span><br><span class="line">    level=logging.DEBUG,</span><br><span class="line">    <span class="built_in">format</span>=<span class="string">&quot;%(asctime)s %(levelname)7s %(name)34s | %(message)s&quot;</span></span><br><span class="line">                    )</span><br><span class="line"><span class="comment"># 用于打印调试信息</span></span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">com_sec_udemo_MainActivity</span>(metaclass=JavaClassDef, jvm_name=<span class="string">&quot;com/sec/udemo/MainActivity&quot;</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="meta">    @java_method_def(<span class="params">name=<span class="string">&#x27;getSaltFromJava&#x27;</span>,signature=<span class="string">&#x27;(Ljava/lang/String;)Ljava/lang/String;&#x27;</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">                     args_list=[<span class="string">&#x27;jstring&#x27;</span>],native=<span class="literal">False</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getSaltFromJava</span>(<span class="params">self,mu,data</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> data.value.value + <span class="string">&#x27;salt..&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据执行失败的库函数，进行hook，直接本地写函数实现相关库函数功能,首先导入修饰器</span></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memclr</span>(<span class="params">mu,addr,size</span>):</span><br><span class="line">    mu.mem_write(addr,<span class="built_in">bytes</span>(size))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memclr_ptr (addr:%x,size:%d)&#x27;</span> % (addr,size))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memcpy</span>(<span class="params">mu,dist,source,size</span>):</span><br><span class="line">    data = mu.mem_read(source,size)</span><br><span class="line">    mu.mem_write(dist,<span class="built_in">bytes</span>(data))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memcpy (dist:%x,source:%x)&#x27;</span> % (dist,source))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sprintf</span>(<span class="params">mu,buffer,<span class="built_in">format</span>,arg1,arg2</span>):</span><br><span class="line">    format1 = memory_helpers.read_utf8(mu,<span class="built_in">format</span>)</span><br><span class="line">    data1 = memory_helpers.read_utf8(mu,arg1)</span><br><span class="line">    res = format1 % (data1,arg2)</span><br><span class="line">    mu.mem_write(buffer,<span class="built_in">bytes</span>((res+<span class="string">&#x27;\x00&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;sprintf (%s)&#x27;</span> % (<span class="built_in">format</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建模拟器</span></span><br><span class="line">emulator = Emulator()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加hook 此处必须在导入so文件之前就hook，因为此hook的本质就是hook got表的内容</span></span><br><span class="line"><span class="comment"># 在导入so文件之前hook才生效，导入之后没法hook</span></span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memclr&#x27;</span>, emulator.hooker.write_function(__aeabi_memclr) + <span class="number">1</span>)</span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memcpy&#x27;</span>, emulator.hooker.write_function(__aeabi_memcpy) + <span class="number">1</span>)</span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;sprintf&#x27;</span>, emulator.hooker.write_function(sprintf) + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加自定义java类</span></span><br><span class="line">emulator.java_classloader.add_class(com_sec_udemo_MainActivity)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载相关so文件</span></span><br><span class="line"><span class="comment"># do_init 参数为false，即不执行初始化函数，因为unicorn不能实现相关初始化操作，</span></span><br><span class="line"><span class="comment"># 这可能会涉及更多库的调用</span></span><br><span class="line">emulator.load_library(<span class="string">&#x27;./lib/libc.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line">libnat_mod = emulator.load_library(<span class="string">&#x27;./lib/libnative-lib.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行报错时打印调试信息，跟踪报错与定位发生报错的相关地址</span></span><br><span class="line">dbg = udbg.UnicornDebugger(emulator.mu,udbg.UDBG_MODE_ALL)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始执行想要执行的jni函数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 根据so模块调用指定的函数，后面都是函数的参数</span></span><br><span class="line">    <span class="comment"># 参数1: JNIEnv</span></span><br><span class="line">    <span class="comment"># 参数2: 是java类的对象，这里填0即可</span></span><br><span class="line">    <span class="comment"># 参数3: 是函数输入字符串</span></span><br><span class="line">    obj = com_sec_udemo_MainActivity()</span><br><span class="line">    sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv3&#x27;</span>,</span><br><span class="line">                         emulator.java_vm.jni_env.address_ptr,obj,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sign)</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># 打印调用栈</span></span><br><span class="line">    tracks = dbg.get_tracks()</span><br><span class="line">    <span class="comment"># 这里打印调用地址即可，打印后100条</span></span><br><span class="line">    <span class="keyword">for</span> addr <span class="keyword">in</span> tracks[-<span class="number">100</span>:-<span class="number">1</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr - <span class="number">0xcbc66000</span>))</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;unicorn_starting&lt;/p&gt;
&lt;p&gt;模拟Jni与Java交互&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>unicorn_learning3</title>
    <link href="https://pa1r0t.github.io/2022/12/31/unicorn-learning3/"/>
    <id>https://pa1r0t.github.io/2022/12/31/unicorn-learning3/</id>
    <published>2022-12-31T01:12:04.000Z</published>
    <updated>2022-12-31T03:18:14.288Z</updated>
    
    <content type="html"><![CDATA[<p>unicorn start</p><p>模拟器框架自动填充got表项内容</p><span id="more"></span><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>hook JNI函数</p><p><img src="/./../images/image-20221231092735710.png" alt="image-20221231092735710"></p><p>hook JNI函数的条件：</p><p><img src="/./../images/1.png" alt="1"></p><p>框架：<img src="/./../images/image-20221231093245212.png" alt="image-20221231093245212"></p><h3 id="打印调试信息"><a href="#打印调试信息" class="headerlink" title="打印调试信息"></a>打印调试信息</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置logging</span></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    stream=sys.stdout,</span><br><span class="line">    level=logging.debug,</span><br><span class="line">    <span class="built_in">format</span>=<span class="string">&quot;%(asctime)s %(levelname)7s %(name)34s | %(message)s&quot;</span></span><br><span class="line">                    )</span><br><span class="line"><span class="comment"># 用于打印调试信息</span></span><br><span class="line">logger = logging.getLogger(__name__)</span><br></pre></td></tr></table></figure><h3 id="创建模拟器-导入so文件-执行"><a href="#创建模拟器-导入so文件-执行" class="headerlink" title="创建模拟器+导入so文件+执行"></a>创建模拟器+导入so文件+执行</h3><p>用写好的框架进行模拟执行，不需要考虑手动填充got表项</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建模拟器</span></span><br><span class="line">emulator = Emulator()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载相关so文件</span></span><br><span class="line"><span class="comment"># do_init 参数为false，即不执行初始化函数，因为unicorn不能实现相关初始化操作，</span></span><br><span class="line"><span class="comment"># 这可能会涉及更多库的调用</span></span><br><span class="line">emulator.load_library(<span class="string">&#x27;./lib/libc.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line">libnat_mod = emulator.load_library(<span class="string">&#x27;./lib/libnative-lib.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始执行想要执行的jni函数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 根据so模块调用指定的函数，后面都是函数的参数</span></span><br><span class="line">    <span class="comment"># 参数1: JNIEnv</span></span><br><span class="line">    <span class="comment"># 参数2: 是java类的对象，这里填0即可</span></span><br><span class="line">    <span class="comment"># 参数3: 是函数输入字符串</span></span><br><span class="line">    sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv2&#x27;</span>,</span><br><span class="line">                         emulator.java_vm.jni_env.address_ptr,<span class="number">0</span>,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sign)</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><p>这里出现libc的基地址</p><p><img src="/./../images/image-20221231100141520.png" alt="image-20221231100141520"></p><p>这里出现libnative-lib.so的基地址。3）处有报错，但又不知道哪里有错</p><p><img src="/./../images/image-20221231100259956.png" alt="image-20221231100259956"></p><h3 id="跟踪报错信息"><a href="#跟踪报错信息" class="headerlink" title="跟踪报错信息"></a>跟踪报错信息</h3><p>打印异常地址和地址调用栈,这里打印最后100条即可,用udbg打印</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行报错时打印调试信息，跟踪报错与定位发生报错的相关地址</span></span><br><span class="line">dbg = udbg.UnicornDebugger(emulator.mu,udbg.UDBG_MODE_ALL)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始执行想要执行的jni函数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 根据so模块调用指定的函数，后面都是函数的参数</span></span><br><span class="line">    <span class="comment"># 参数1: JNIEnv</span></span><br><span class="line">    <span class="comment"># 参数2: 是java类的对象，这里填0即可</span></span><br><span class="line">    <span class="comment"># 参数3: 是函数输入字符串</span></span><br><span class="line">    sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv2&#x27;</span>,</span><br><span class="line">                         emulator.java_vm.jni_env.address_ptr,<span class="number">0</span>,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sign)</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># 打印调用栈</span></span><br><span class="line">    tracks = dbg.get_tracks()</span><br><span class="line">    <span class="comment"># 这里打印调用地址即可，打印后100条</span></span><br><span class="line">    <span class="keyword">for</span> addr <span class="keyword">in</span> tracks[-<span class="number">100</span>:-<span class="number">1</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr - <span class="number">0xcbc66000</span>)) <span class="comment"># 注意这里要减去基地址</span></span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><p>这里有函数参数提示：</p><p><img src="/./../images/image-20221231100710715.png" alt="image-20221231100710715"></p><p>这里有出现负地址，负地址就是函数执行到libc.so文件中，这里由于没有初始化的缘故，可能libc中部分函数执行失败，这里我们手动hook，&#x3D;&#x3D;本质是hook got表地址&#x3D;&#x3D;</p><p><img src="/./../images/image-20221231101354303.png" alt="image-20221231101354303"></p><p>这里我们定位到ida中出错的地址</p><p><img src="/./../images/image-20221231101510570.png" alt="image-20221231101510570"></p><p>发现是这个库函数有问题。那就hook它</p><p><img src="/./../images/image-20221231102149719.png" alt="image-20221231102149719"></p><h3 id="hook"><a href="#hook" class="headerlink" title="hook"></a>hook</h3><p>添加hook 此处必须在导入so文件之前就hook，在导入so文件之前hook才生效，导入之后没法hook</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据执行失败的库函数，进行hook，直接本地写函数实现相关库函数功能,首先导入修饰器</span></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memclr</span>(<span class="params">mu,addr,size</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memclr_ptr (addr:%x,size:%d)&#x27;</span> % (addr,size))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 添加hook 此处必须在导入so文件之前就hook，因为此hook的本质就是hook got表的内容</span></span><br><span class="line"><span class="comment"># 在导入so文件之前hook才生效，导入之后没法hook</span></span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memclr&#x27;</span>, emulator.hooker.write_function(__aeabi_memclr) + <span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他函数以此类推</p><p>关于sprintf函数，第一个参数，是a2，就是buffer地址</p><p><img src="/./../images/image-20221231103838068.png" alt="image-20221231103838068"></p><p>全部函数hook后：</p><p><img src="/./../images/image-20221231104133180.png" alt="image-20221231104133180"></p><p>这里输出是空因为，我们hook相关函数还未在unicorn中实现，这里我们做个实现即可</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memclr</span>(<span class="params">mu,addr,size</span>):</span><br><span class="line">    mu.mem_write(addr,<span class="built_in">bytes</span>(size))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memclr_ptr (addr:%x,size:%d)&#x27;</span> % (addr,size))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memcpy</span>(<span class="params">mu,dist,source,size</span>):</span><br><span class="line">    data = mu.mem_read(source,size)</span><br><span class="line">    mu.mem_write(dist,<span class="built_in">bytes</span>(data))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memcpy (dist:%x,source:%x)&#x27;</span> % (dist,source))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sprintf</span>(<span class="params">mu,buffer,<span class="built_in">format</span>,arg1,arg2</span>):</span><br><span class="line">    format1 = memory_helpers.read_utf8(mu,<span class="built_in">format</span>)</span><br><span class="line">    data1 = memory_helpers.read_utf8(mu,arg1)</span><br><span class="line">    res = format1 % (data1,arg2)</span><br><span class="line">    mu.mem_write(buffer,<span class="built_in">bytes</span>((res+<span class="string">&#x27;\x00&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;sprintf (%s)&#x27;</span> % (<span class="built_in">format</span>))</span><br></pre></td></tr></table></figure><p>这里说明一下bytes()函数放入int型会输出什么：</p><p><img src="/./../images/image-20221231104346170.png" alt="image-20221231104346170"></p><p>最终结果：</p><p><img src="/./../images/image-20221231105346413.png" alt="image-20221231105346413"></p><p>全部代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> androidemu.java.helpers.native_method <span class="keyword">import</span> native_method</span><br><span class="line"><span class="keyword">from</span> UnicornTraceDebugger <span class="keyword">import</span> udbg</span><br><span class="line"><span class="keyword">from</span> androidemu.emulator <span class="keyword">import</span> Emulator</span><br><span class="line"><span class="keyword">from</span> androidemu.utils <span class="keyword">import</span> memory_helpers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置logging</span></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    stream=sys.stdout,</span><br><span class="line">    level=logging.DEBUG,</span><br><span class="line">    <span class="built_in">format</span>=<span class="string">&quot;%(asctime)s %(levelname)7s %(name)34s | %(message)s&quot;</span></span><br><span class="line">                    )</span><br><span class="line"><span class="comment"># 用于打印调试信息</span></span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据执行失败的库函数，进行hook，直接本地写函数实现相关库函数功能,首先导入修饰器</span></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memclr</span>(<span class="params">mu,addr,size</span>):</span><br><span class="line">    mu.mem_write(addr,<span class="built_in">bytes</span>(size))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memclr_ptr (addr:%x,size:%d)&#x27;</span> % (addr,size))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__aeabi_memcpy</span>(<span class="params">mu,dist,source,size</span>):</span><br><span class="line">    data = mu.mem_read(source,size)</span><br><span class="line">    mu.mem_write(dist,<span class="built_in">bytes</span>(data))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;__aeabi_memcpy (dist:%x,source:%x)&#x27;</span> % (dist,source))</span><br><span class="line"></span><br><span class="line"><span class="meta">@native_method</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sprintf</span>(<span class="params">mu,buffer,<span class="built_in">format</span>,arg1,arg2</span>):</span><br><span class="line">    format1 = memory_helpers.read_utf8(mu,<span class="built_in">format</span>)</span><br><span class="line">    data1 = memory_helpers.read_utf8(mu,arg1)</span><br><span class="line">    res = format1 % (data1,arg2)</span><br><span class="line">    mu.mem_write(buffer,<span class="built_in">bytes</span>((res+<span class="string">&#x27;\x00&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;sprintf (%s)&#x27;</span> % (<span class="built_in">format</span>))</span><br><span class="line"><span class="comment"># 创建模拟器</span></span><br><span class="line">emulator = Emulator()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加hook 此处必须在导入so文件之前就hook，因为此hook的本质就是hook got表的内容</span></span><br><span class="line"><span class="comment"># 在导入so文件之前hook才生效，导入之后没法hook</span></span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memclr&#x27;</span>, emulator.hooker.write_function(__aeabi_memclr) + <span class="number">1</span>)</span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;__aeabi_memcpy&#x27;</span>, emulator.hooker.write_function(__aeabi_memcpy) + <span class="number">1</span>)</span><br><span class="line">emulator.modules.add_symbol_hook(<span class="string">&#x27;sprintf&#x27;</span>, emulator.hooker.write_function(sprintf) + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载相关so文件</span></span><br><span class="line"><span class="comment"># do_init 参数为false，即不执行初始化函数，因为unicorn不能实现相关初始化操作，</span></span><br><span class="line"><span class="comment"># 这可能会涉及更多库的调用</span></span><br><span class="line">emulator.load_library(<span class="string">&#x27;./lib/libc.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line">libnat_mod = emulator.load_library(<span class="string">&#x27;./lib/libnative-lib.so&#x27;</span>,do_init=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行报错时打印调试信息，跟踪报错与定位发生报错的相关地址</span></span><br><span class="line">dbg = udbg.UnicornDebugger(emulator.mu,udbg.UDBG_MODE_ALL)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始执行想要执行的jni函数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 根据so模块调用指定的函数，后面都是函数的参数</span></span><br><span class="line">    <span class="comment"># 参数1: JNIEnv</span></span><br><span class="line">    <span class="comment"># 参数2: 是java类的对象，这里填0即可</span></span><br><span class="line">    <span class="comment"># 参数3: 是函数输入字符串</span></span><br><span class="line">    sign = emulator.call_symbol(libnat_mod,<span class="string">&#x27;Java_com_sec_udemo_MainActivity_sign_1lv2&#x27;</span>,</span><br><span class="line">                         emulator.java_vm.jni_env.address_ptr,<span class="number">0</span>,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sign)</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># 打印调用栈</span></span><br><span class="line">    tracks = dbg.get_tracks()</span><br><span class="line">    <span class="comment"># 这里打印调用地址即可，打印后100条</span></span><br><span class="line">    <span class="keyword">for</span> addr <span class="keyword">in</span> tracks[-<span class="number">100</span>:-<span class="number">1</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr - <span class="number">0xcbc66000</span>))</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;unicorn start&lt;/p&gt;
&lt;p&gt;模拟器框架自动填充got表项内容&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>unicorn_learning2</title>
    <link href="https://pa1r0t.github.io/2022/12/30/unicorn-learning2/"/>
    <id>https://pa1r0t.github.io/2022/12/30/unicorn-learning2/</id>
    <published>2022-12-30T01:40:33.000Z</published>
    <updated>2022-12-30T07:24:54.480Z</updated>
    
    <content type="html"><![CDATA[<p>unicorn start</p><p>用unicorn调用so文件中的某个函数，观察函数的输入与输出</p><span id="more"></span><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>hook  so文件中的sign1函数的输出与输入</p><p><img src="/./../images/image-20221230100636171.png" alt="image-20221230100636171"></p><p>这个函数内部调用了两个函数，tea_encrypt和sprintf，这两个函数中tea_encrypt函数只需要修复got表项即可调用tea_encrypt，但是sprintf函数不行</p><p>这里我们开始实验</p><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><p>由于这里的指令都是两个字节为一条指令</p><p><img src="/./../images/image-20221230145634256.png" alt="image-20221230145634256"></p><p>所以这里为thumb指令集</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_arm</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Emulate ARM code&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Initialize emulator in ARM mode</span></span><br><span class="line">        mu = Uc(UC_ARCH_ARM, UC_MODE_THUMB)<span class="comment"># 创建代码</span></span><br><span class="line">        <span class="comment"># 其它代码添加到此处</span></span><br><span class="line">        <span class="keyword">return</span> mu</span><br><span class="line">    <span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;ERROR: %s&quot;</span> % e)</span><br><span class="line"></span><br><span class="line">mu = test_arm() <span class="comment"># mu就是arm虚拟机</span></span><br></pre></td></tr></table></figure><h3 id="建立内存映射-写入数据"><a href="#建立内存映射-写入数据" class="headerlink" title="建立内存映射+写入数据"></a>建立内存映射+写入数据</h3><p>由于这是要模拟执行一段函数，所以要建立镜像区，栈区，数据段区的内存</p><p>这里各个区的大小存粹靠估算</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">image = <span class="built_in">open</span>(<span class="string">&#x27;./libnative-lib.so&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line"><span class="comment"># 镜像内存</span></span><br><span class="line">image_base = <span class="number">0x0</span></span><br><span class="line">mu.mem_map(image_base, <span class="number">0x10000</span>*<span class="number">8</span>)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">mu.mem_write(image_base,image)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 栈内存</span></span><br><span class="line">stack_base = <span class="number">0xa0000</span></span><br><span class="line">stack_size = <span class="number">0x10000</span> * <span class="number">3</span></span><br><span class="line">mu.mem_map(stack_base, stack_size)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">stack_top = stack_base + stack_size - <span class="number">0x4</span></span><br><span class="line">mu.reg_write(UC_ARM_REG_SP,stack_top)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据段内存</span></span><br><span class="line">a1 = <span class="string">b&#x27;123&#x27;</span></span><br><span class="line">data_base = <span class="number">0xf0000</span></span><br><span class="line">data_size = <span class="number">0x10000</span> * <span class="number">3</span></span><br><span class="line">mu.mem_map(data_base, data_size)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">mu.mem_write(data_base,a1)</span><br></pre></td></tr></table></figure><p>这里栈区的sp指针应小于栈大小的0x4，防止栈溢出，这里我们将‘123’字符串写入数据段，来作为函数的参数使用</p><h3 id="添加hook函数"><a href="#添加hook函数" class="headerlink" title="添加hook函数"></a>添加hook函数</h3><p>主要用于程序报错时可以及时追踪到哪里有问题</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hook_code</span>(<span class="params">uc, address, size, user_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&quot;</span> %(address, size))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_memory</span>(<span class="params">uc, access, address, size,value, userdata</span>):</span><br><span class="line">    pc = uc.reg_read(UC_ARM_REG_PC)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;memory error: pc:%x address:%x size:%x&quot;</span> % (pc, address, size))</span><br><span class="line">    </span><br><span class="line">mu.hook_add(UC_HOOK_CODE,hook_code,<span class="number">0</span>)</span><br><span class="line">mu.hook_add(UC_HOOK_MEM_UNMAPPED,hook_memory,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="开始执行"><a href="#开始执行" class="headerlink" title="开始执行"></a>开始执行</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开始执行虚拟机</span></span><br><span class="line">start_addr = <span class="number">0x9B68</span></span><br><span class="line">end_addr = <span class="number">0x9C2C</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    mu.emu_start(start_addr, end_addr)</span><br><span class="line">    R2 = mu.reg_read(UC_ARM_REG_R2)</span><br><span class="line">    res = mu.mem_read(R2,<span class="number">16</span>)</span><br><span class="line">    <span class="built_in">print</span>(binascii.b2a_hex(res))</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><p>结果只运行到第一条指令：</p><p><img src="/./../images/image-20221230141126071.png" alt="image-20221230141126071"></p><p><img src="/./../images/image-20221230141137038.png" alt="image-20221230141137038"></p><p>这里将开始地址+1，然后执行：</p><p><img src="/./../images/image-20221230141419595.png" alt="image-20221230141419595"></p><p><img src="/./../images/image-20221230141523486.png" alt="image-20221230141523486"></p><p>然后这里就遇到了函数地址外的地址，很奇怪！！！，这里找到0x91ac,也就是最后一次正常的地方，发现来到了plt表，点击后又来到got表，这里的got表其实是ida已经自动补全了，unicorn需要自己手动补全</p><p><img src="/./../images/image-20221230141839711.png" alt="image-20221230141839711"></p><p><img src="/./../images/image-20221230142108868.png" alt="image-20221230142108868"></p><p>补全后：</p><p><img src="/./../images/image-20221230152353412.png" alt="image-20221230152353412"></p><p>执行代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开始执行虚拟机</span></span><br><span class="line">start_addr = <span class="number">0x9B68</span></span><br><span class="line">end_addr = <span class="number">0x9C2C</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 添加got表</span></span><br><span class="line">    mu.mem_write(<span class="number">0x1EDB0</span>,<span class="string">b&#x27;\xD9\x98\x00\x00&#x27;</span>)</span><br><span class="line">    mu.emu_start(start_addr+<span class="number">1</span>, end_addr)</span><br><span class="line">    R2 = mu.reg_read(UC_ARM_REG_R2)</span><br><span class="line">    res = mu.mem_read(R2,<span class="number">16</span>)</span><br><span class="line">    <span class="built_in">print</span>(binascii.b2a_hex(res))</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><hr><h3 id="最后代码："><a href="#最后代码：" class="headerlink" title="最后代码："></a>最后代码：</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.arm_const  <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_code</span>(<span class="params">uc, address, size, user_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&quot;</span> %(address, size))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_memory</span>(<span class="params">uc, access, address, size,value, userdata</span>):</span><br><span class="line">    pc = uc.reg_read(UC_ARM_REG_PC)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;memory error: pc:%x address:%x size:%x&quot;</span> % (pc, address, size))</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_arm</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Emulate ARM code&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Initialize emulator in ARM mode</span></span><br><span class="line">        mu = Uc(UC_ARCH_ARM, UC_MODE_THUMB)<span class="comment"># 创建代码</span></span><br><span class="line">        <span class="comment"># 其它代码添加到此处</span></span><br><span class="line">        <span class="keyword">return</span> mu</span><br><span class="line">    <span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;ERROR: %s&quot;</span> % e)</span><br><span class="line"></span><br><span class="line">mu = test_arm() <span class="comment"># mu就是arm虚拟机</span></span><br><span class="line">image = <span class="built_in">open</span>(<span class="string">&#x27;./libnative-lib.so&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line"><span class="comment"># 镜像内存</span></span><br><span class="line">image_base = <span class="number">0x0</span></span><br><span class="line">mu.mem_map(image_base, <span class="number">0x10000</span>*<span class="number">8</span>)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">mu.mem_write(image_base,image)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 栈内存</span></span><br><span class="line">stack_base = <span class="number">0xa0000</span></span><br><span class="line">stack_size = <span class="number">0x10000</span> * <span class="number">3</span></span><br><span class="line">mu.mem_map(stack_base, stack_size)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">stack_top = stack_base + stack_size - <span class="number">0x4</span></span><br><span class="line">mu.reg_write(UC_ARM_REG_SP,stack_top)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据段内存</span></span><br><span class="line">a1 = <span class="string">b&#x27;123&#x27;</span></span><br><span class="line">data_base = <span class="number">0xf0000</span></span><br><span class="line">data_size = <span class="number">0x10000</span> * <span class="number">3</span></span><br><span class="line">mu.mem_map(data_base, data_size)  <span class="comment"># 这里大小自己估算</span></span><br><span class="line">mu.mem_write(data_base,a1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#函数参数通过数据段传递 寄存器是R0</span></span><br><span class="line">mu.reg_write(UC_ARM_REG_R0,data_base)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加hook函数</span></span><br><span class="line"><span class="comment"># mu.hook_add(UC_HOOK_CODE,hook_code,0)</span></span><br><span class="line"><span class="comment"># mu.hook_add(UC_HOOK_MEM_UNMAPPED,hook_memory,0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#开始执行虚拟机</span></span><br><span class="line">start_addr = <span class="number">0x9B68</span></span><br><span class="line">end_addr = <span class="number">0x9C2C</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 添加got表</span></span><br><span class="line">    mu.mem_write(<span class="number">0x1EDB0</span>,<span class="string">b&#x27;\xD9\x98\x00\x00&#x27;</span>)</span><br><span class="line">    mu.emu_start(start_addr+<span class="number">1</span>, end_addr)</span><br><span class="line">    R2 = mu.reg_read(UC_ARM_REG_R2)</span><br><span class="line">    res = mu.mem_read(R2,<span class="number">16</span>)</span><br><span class="line">    <span class="built_in">print</span>(binascii.b2a_hex(res))</span><br><span class="line"><span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;unicorn start&lt;/p&gt;
&lt;p&gt;用unicorn调用so文件中的某个函数，观察函数的输入与输出&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>unicorn_learning1</title>
    <link href="https://pa1r0t.github.io/2022/12/29/unicorn1/"/>
    <id>https://pa1r0t.github.io/2022/12/29/unicorn1/</id>
    <published>2022-12-29T06:32:54.000Z</published>
    <updated>2022-12-29T07:54:07.945Z</updated>
    
    <content type="html"><![CDATA[<p>unicorn start!</p><p>效仿大佬的文章简单地给自己作个学习记录，就当作写了篇日记了</p><span id="more"></span><h1 id="Unicorn-入门学习"><a href="#Unicorn-入门学习" class="headerlink" title="Unicorn 入门学习"></a>Unicorn 入门学习</h1><p>unicorn 是用于执行多种cpu框架的虚拟架构系统</p><h5 id="下面进行模仿arm架构，执行arm指令"><a href="#下面进行模仿arm架构，执行arm指令" class="headerlink" title="下面进行模仿arm架构，执行arm指令"></a>下面进行模仿arm架构，执行arm指令</h5><p>首先在python中导入unicorn</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><p>如何根据自己要执行指令对应哪个cpu架构，来导入相应的处理器相关的常量</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn.arm_const  <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.arm64_const <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.m68k_const <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.mips_const <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.sparc_const <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.x86_const <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><p>寄存器常量命名规则：<br>UC_ + 指令集 + <em>REG</em> + 大写寄存器名<br>UC_ARM<em>REG</em> + 大写寄存器名 （UC_ARM_REG_R0）<br>UC_X86<em>REG</em> + 大写寄存器名 （UC_X86_REG_EAX）</p><p>这里我们选择unicorn.arm_const</p><h4 id="创建arm虚拟机（UC）"><a href="#创建arm虚拟机（UC）" class="headerlink" title="创建arm虚拟机（UC）"></a>创建arm虚拟机（UC）</h4><p>Uc 是unicorn的主类，Uc对象则代表了一个独立的虚拟机实例，它有独立的寄存器和内存等资源，不同Uc对象之间的数据是独立的。Uc的构造函数有两个参数 <em>arch</em> 和 <em>mode</em>，用来指定模拟执行的指令集和对应的位数或模式。<br>arch常量参数一般以 UC<em>ARCH</em> 开头，MODE常量以UC<em>MODE</em> 开头。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Test ARM</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_arm</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Emulate ARM code&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Initialize emulator in ARM mode</span></span><br><span class="line">        mu = Uc(UC_ARCH_ARM, UC_MODE_ARM)<span class="comment"># 创建代码</span></span><br><span class="line">        <span class="comment"># 其它代码添加到此处</span></span><br><span class="line">        <span class="keyword">return</span> mu</span><br><span class="line">    <span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;ERROR: %s&quot;</span> % e)</span><br><span class="line"></span><br><span class="line">mu = test_arm() <span class="comment"># mu就是arm虚拟机</span></span><br></pre></td></tr></table></figure><h4 id="映射内存"><a href="#映射内存" class="headerlink" title="映射内存"></a>映射内存</h4><p>想用Unicorn模拟执行代码，是不能将代码字节流直接以参数形式传递给Unicorn，而是将要执行的代码写入到Unicorn 的虚拟内存中。Uc 虚拟机实例初始内存是没有任何映射的，在读写内存之前使用<em>uc_mem_map</em>函数映射一段内存</p><p>这里开始地址和地址大小都要和0x1000&#x3D;&#x3D;对齐&#x3D;&#x3D;</p><p>否则就是我这种错误：</p><p><img src="/./../images/image-20221229151625712.png" alt="image-20221229151625712"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ADDRESS = <span class="number">0x10000</span></span><br><span class="line">mu.mem_map(ADDRESS, <span class="number">0x1000</span>)  <span class="comment"># 这里大小自己估算</span></span><br></pre></td></tr></table></figure><h4 id="写入代码"><a href="#写入代码" class="headerlink" title="写入代码"></a>写入代码</h4><p>将想要执行的代码写进我们创建的内存中</p><p>mem_write的第二个参数必须是byte字节数组，只支持python的byte数组，不能是String或者bytearray。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ARM_CODE   = <span class="string">b&quot;\x37\x00\xa0\xe3\x03\x10\x42\xe0&quot;</span></span><br><span class="line"><span class="comment"># mov r0, #0x37;</span></span><br><span class="line"><span class="comment"># sub r1, r2, r3</span></span><br><span class="line">mu.mem_write(ADDRESS, ARM_CODE) </span><br></pre></td></tr></table></figure><p>给寄存器初始赋值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mu.reg_write(UC_ARM_REG_R0, <span class="number">0x0</span>)</span><br><span class="line">mu.reg_write(UC_ARM_REG_R2, <span class="number">0x4</span>)</span><br><span class="line">mu.reg_write(UC_ARM_REG_R3, <span class="number">0x1</span>)</span><br><span class="line"><span class="comment"># 这里r1的结果预估是0x3</span></span><br></pre></td></tr></table></figure><h4 id="添加指令级的Hook"><a href="#添加指令级的Hook" class="headerlink" title="添加指令级的Hook"></a>添加指令级的Hook</h4><p>hook类型：</p><ul><li>指令执行类：<ul><li>UC_HOOK_INTR</li><li>UC_HOOK_INSN</li><li>UC_HOOK_CODE</li><li>UC_HOOK_BLOCK</li></ul></li><li>内存访问类：<ul><li>UC_HOOK_MEM_READ</li><li>UC_HOOK_MEM_WRITE</li><li>UC_HOOK_MEM_FETCH</li><li>UC_HOOK_MEM_READ_AFTER</li><li>UC_HOOK_MEM_PROT</li><li>UC_HOOK_MEM_FETCH_INVALID</li><li>UC_HOOK_MEM_INVALID</li><li>UC_HOOK_MEM_VALID</li></ul></li><li>异常处理类：<ul><li>UC_HOOK_MEM_READ_UNMAPPED</li><li>UC_HOOK_MEM_WRITE_UNMAPPED</li><li>UC_HOOK_MEM_FETCH_UNMAPPED</li></ul></li></ul><p><img src="/./../images/image-20221229153037712.png" alt="image-20221229153037712"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hook_add</span>(<span class="params">self, htype, callback, user_data=<span class="literal">None</span>, begin=<span class="number">1</span>, end=<span class="number">0</span>, arg1=<span class="number">0</span></span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">mu.hook_add(UC_HOOK_CODE, hook_code, begin=ADDRESS, end=<span class="number">0x1000</span>)</span><br></pre></td></tr></table></figure><p>以上是添加hook的操作</p><p>在begin…end范围内的每一条指令被执行前都会调用callback。</p><p>hook函数编写：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># callback for tracing instructions</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_code</span>(<span class="params">uc, address, size, user_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&quot;</span> %(address, size))</span><br></pre></td></tr></table></figure><h4 id="执行虚拟机"><a href="#执行虚拟机" class="headerlink" title="执行虚拟机"></a>执行虚拟机</h4><p>emu_start 可以通过timeout参数设置最长执行时长，防止线程死在虚拟机里面。emu_start 执行完成后，可以通过读取内存或寄存器的方式来获取执行结果。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">emu_start</span>(<span class="params">self, begin, until, timeout=<span class="number">0</span>, count=<span class="number">0</span></span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">mu.emu_start(ADDRESS, ADDRESS + <span class="built_in">len</span>(ARM_CODE))</span><br></pre></td></tr></table></figure><p>执行成功，hook函数一共被调用两次（指令有两条）</p><p><img src="/./../images/image-20221229154734059.png" alt="image-20221229154734059"></p><h4 id="获取寄存器结果"><a href="#获取寄存器结果" class="headerlink" title="获取寄存器结果"></a>获取寄存器结果</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r0 = mu.reg_read(UC_ARM_REG_R0)</span><br><span class="line">r1 = mu.reg_read(UC_ARM_REG_R1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; R0 = 0x%x&quot;</span> % r0)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; R1 = 0x%x&quot;</span> % r1)</span><br></pre></td></tr></table></figure><p>和推理的结果相同！！！！</p><p><img src="/./../images/image-20221229154900787.png" alt="image-20221229154900787"></p><hr><h3 id="个人测试全过程："><a href="#个人测试全过程：" class="headerlink" title="个人测试全过程："></a>个人测试全过程：</h3><p><img src="/./../images/image-20221229155328503.png" alt="image-20221229155328503"></p><p><img src="/./../images/image-20221229155356531.png" alt="image-20221229155356531"></p><p>完整代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unicorn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> unicorn.arm_const <span class="keyword">import</span> *</span><br><span class="line">ARM_CODE   = <span class="string">b&quot;\x37\x00\xa0\xe3\x03\x10\x42\xe0&quot;</span></span><br><span class="line"><span class="comment"># mov r0, #0x37;</span></span><br><span class="line"><span class="comment"># sub r1, r2, r3</span></span><br><span class="line"><span class="comment"># Test ARM</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># callback for tracing instructions</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_code</span>(<span class="params">uc, address, size, user_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&quot;</span> %(address, size))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_arm</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Emulate ARM code&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Initialize emulator in ARM mode</span></span><br><span class="line">        mu = Uc(UC_ARCH_ARM, UC_MODE_THUMB)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># map 2MB memory for this emulation</span></span><br><span class="line">        ADDRESS = <span class="number">0x10000</span></span><br><span class="line">        mu.mem_map(ADDRESS, <span class="number">2</span> * <span class="number">0x10000</span>)</span><br><span class="line">        mu.mem_write(ADDRESS, ARM_CODE)</span><br><span class="line"> </span><br><span class="line">        mu.reg_write(UC_ARM_REG_R0, <span class="number">0x1234</span>)</span><br><span class="line">        mu.reg_write(UC_ARM_REG_R2, <span class="number">0x6789</span>)</span><br><span class="line">        mu.reg_write(UC_ARM_REG_R3, <span class="number">0x3333</span>)</span><br><span class="line"> </span><br><span class="line">        mu.hook_add(UC_HOOK_CODE, hook_code, begin=ADDRESS, end=ADDRESS)</span><br><span class="line">        <span class="comment"># emulate machine code in infinite time</span></span><br><span class="line">        mu.emu_start(ADDRESS, ADDRESS + <span class="built_in">len</span>(ARM_CODE))</span><br><span class="line">        r0 = mu.reg_read(UC_ARM_REG_R0)</span><br><span class="line">        r1 = mu.reg_read(UC_ARM_REG_R1)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; R0 = 0x%x&quot;</span> % r0)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; R1 = 0x%x&quot;</span> % r1)</span><br><span class="line">    <span class="keyword">except</span> UcError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;ERROR: %s&quot;</span> % e)</span><br></pre></td></tr></table></figure><blockquote><p>文章引用Pandaos大佬的文章：[<a href="https://bbs.pediy.com/thread-253868.htm#msg_header_h1_1">原创] Unicorn 在 Android 的应用-Android安全-看雪论坛-安全社区|安全招聘|bbs.pediy.com</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;unicorn start!&lt;/p&gt;
&lt;p&gt;效仿大佬的文章简单地给自己作个学习记录，就当作写了篇日记了&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>re_base3</title>
    <link href="https://pa1r0t.github.io/2022/12/22/re-base3/"/>
    <id>https://pa1r0t.github.io/2022/12/22/re-base3/</id>
    <published>2022-12-22T11:33:01.000Z</published>
    <updated>2022-12-22T13:20:03.197Z</updated>
    
    <content type="html"><![CDATA[<p>PE and IAT hook</p><span id="more"></span><h1 id="PE"><a href="#PE" class="headerlink" title="PE"></a>PE</h1><p>由于了解IAT,需要了解一点PE,这里把PE也给写了吧</p><p>PE文件种类：</p><p><img src="/./../images/image-20221222193952005.png" alt="image-20221222193952005"></p><p>OBJ文件不能执行，dll和sys文件需要调试器执行或者服务和程序加载执行</p><p>DOS签名和PE签名</p><p><img src="/./../images/image-20221222194231640.png" alt="image-20221222194231640"></p><p>PE文件大体分为：1.PE头、2.PE体</p><p>1.PE头</p><ul><li>DOS签名</li><li>DOS存根</li><li>NT头</li><li>一系列节区头<ul><li>.data(数据)</li><li>.text(代码)</li><li>.rsrc(资源)</li></ul></li></ul><p>2.PE体：一系列节区</p><p>名词介绍：</p><p>​VA:virtual address 绝对虚拟内存地址</p><p>​RVA:相对虚拟内存地址</p><p>​VA &#x3D; RVA + imageBase</p><p>DOS头结构体：唯一有用的就是e_magic和e_lfanew</p><p><img src="/./../images/image-20221222195650362.png" alt="image-20221222195650362"></p><p>其中e_magic就是Dos签名，e_lfanew就是NT头的偏移</p><h5 id="DOS存根"><a href="#DOS存根" class="headerlink" title="DOS存根"></a>DOS存根</h5><p>Dos存根是兼容dos系统的一种产物，可有可无，内容可用xp内置debug查看</p><p><img src="/./../images/image-20221222195853656.png" alt="image-20221222195853656"></p><p>内容是一段汇编代码，在dos系统中执行</p><h5 id="NT头"><a href="#NT头" class="headerlink" title="NT头"></a>NT头</h5><p>NT头结构体</p><p><img src="/./../images/image-20221222200235227.png" alt="image-20221222200235227"></p><p>签名不作介绍，文件头结构体：</p><p><img src="/./../images/image-20221222200349032.png" alt="image-20221222200349032"></p><p>Machine代表cpu类别</p><p>SizeOfOptionalHeader是表示可选头的大小</p><p>Characteristics表示文件是否是dll，是否可执行</p><p>NT可选头结构体：</p><p><img src="/./../images/image-20221222200743347.png" alt="image-20221222200743347"></p><p><img src="/./../images/image-20221222200759909.png" alt="image-20221222200759909"></p><p>NT可选头非常重要，它记录了很多重要的数据</p><p>ImageBase，是映像基址，映像指的是PE文件加载到内存的一种形态（我觉得更像是一种叫法），映像基址定义了文件加载进内存的基础地址</p><p>SectionAlignment, 节区对齐是文件在内存中的最小单位，文件在内存的大小应该是这个值的整数倍</p><p>FileAlignment, 文件对齐是文件在磁盘中的最小单位，文件在磁盘的大小应该是这个值的整数倍</p><p>Subsystem,子系统用来区分文件是sys驱动文件还是exe可执行文件</p><p><img src="/./../images/image-20221222201551009.png" alt="image-20221222201551009"></p><p>NumberOfRvaAndSizes , 记录DataDirectory数组的个数</p><p>DataDirectory：</p><p><img src="/./../images/image-20221222201756663.png" alt="image-20221222201756663"></p><p>节区头结构体：</p><p><img src="/./../images/image-20221222202014726.png" alt="image-20221222202014726"></p><p><img src="/./../images/image-20221222202552956.png" alt="image-20221222202552956"></p><p>这里的VirtualAddress是用RVA表示的</p><h5 id="RAV-to-RAW"><a href="#RAV-to-RAW" class="headerlink" title="RAV to RAW"></a>RAV to RAW</h5><p>RAW就是文件中节区的偏移（非内存）</p><p><img src="/./../images/image-20221222203627898.png" alt="image-20221222203627898"></p><h5 id="IAT导入地址表"><a href="#IAT导入地址表" class="headerlink" title="IAT导入地址表"></a>IAT导入地址表</h5><p>映像导入描述结构体：</p><p><img src="/./../images/image-20221222204623280.png" alt="image-20221222204623280"></p><p><img src="/./../images/image-20221222204719793.png" alt="image-20221222204719793"></p><p>文件导入多少个库文件，就有多少个 image_import_descriptor结构体</p><p>&#x3D;&#x3D;该结构体的地址保存在image_optional_header32.DataDirectory[1].VirtualAddress中&#x3D;&#x3D;</p><p><img src="/./../images/image-20221222210418625.png" alt="image-20221222210418625"></p><p>INT结构体保存着Image_import_by_name的指针</p><p>结构图：</p><p><img src="/./../images/image-20221222205449044.png" alt="image-20221222205449044"></p><p>PE装载器将导入函数加载到IAT的顺序：</p><p><img src="/./../images/image-20221222205721041.png" alt="image-20221222205721041"></p><h1 id="EAT"><a href="#EAT" class="headerlink" title="EAT"></a>EAT</h1><p>不想写了，和IAT差不多，一个导入一个导出</p><p>它的查找数据先是image_optional_header32.DataDirectory[0].VirtualAddress找到这个结构体，然后根据要找的函数名去AddressOfNames数组里面拿到下标，然后用下标再去Oridinal数组找，找到下标又去AddressOfFunction那里找函数地址</p><p>没有函数名直接用Ordinal查找，Ordinal数组存在的意义是我忘了。。反正就这样</p><p><img src="/./../images/image-20221222211536947.png" alt="image-20221222211536947"></p><p><img src="/./../images/image-20221222211514061.png" alt="image-20221222211514061"></p><hr><h1 id="IAT-hook"><a href="#IAT-hook" class="headerlink" title="IAT hook"></a>IAT hook</h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;PE and IAT hook&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>re_base2</title>
    <link href="https://pa1r0t.github.io/2022/12/21/re-base2/"/>
    <id>https://pa1r0t.github.io/2022/12/21/re-base2/</id>
    <published>2022-12-21T13:56:29.000Z</published>
    <updated>2022-12-22T03:22:59.840Z</updated>
    
    <content type="html"><![CDATA[<p>TLS and keyboard hooking</p><span id="more"></span><h1 id="TLS回调"><a href="#TLS回调" class="headerlink" title="TLS回调"></a>TLS回调</h1><p>TLS(Thread Local Storage) 线程本地存储，主要用于提供本地线程访问局部数据的句柄。</p><p>下面来一段官方解释：</p><p>使用线程<em>本地存储</em> （TLS），可以为进程可以使用全局索引访问的每个线程提供唯一数据。一个线程分配索引，其他线程可以使用它来检索与索引关联的唯一数据</p><p>原理图：</p><p><img src="/./../images/image-20221221220303818.png" alt="image-20221221220303818"></p><p>&#x3D;&#x3D;TLS主要用于程序的反调试检测&#x3D;&#x3D;</p><p>它在运行EP（entrypoint 程序入口代码）代码前执行</p><h6 id="TLS结构体："><a href="#TLS结构体：" class="headerlink" title="TLS结构体："></a>TLS结构体：</h6><p><img src="/./../images/image-20221221220612843.png" alt="image-20221221220612843"></p><p>可以看到TLS结构体中保存着回调函数的地址</p><p>可以打开CFF explore软件直接查看存放TLS回调函数数组的地址</p><p><img src="/./../images/image-20221221221105861.png" alt="image-20221221221105861"></p><p>打开od查看它的地址为401000</p><p><img src="/./../images/image-20221221221841170.png" alt="image-20221221221841170"></p><p>汇编直接定位过去就出来了</p><p><img src="/./../images/image-20221221221931378.png" alt="image-20221221221931378"></p><p>TLS回调函数是在进程或线程创建或终止时调用，如果某个进程存在一个线程，那从程序的创建到销毁需要4次调用回调函数</p><p>TLS回调函数定义：</p><p><img src="/./../images/image-20221221222309417.png" alt="image-20221221222309417"></p><p>注册TLS程序示例代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker, <span class="string">&quot;/INCLUDE:__tls_used&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_console</span><span class="params">(<span class="type">char</span>* szMsg)</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hStdout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line"></span><br><span class="line">    WriteConsoleA(hStdout, szMsg, <span class="built_in">strlen</span>(szMsg), <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> NTAPI <span class="title function_">TLS_CALLBACK1</span><span class="params">(PVOID DllHandle, DWORD Reason, PVOID Reserved)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> szMsg[<span class="number">80</span>] = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line">    wsprintfA(szMsg, <span class="string">&quot;TLS_CALLBACK1() : DllHandle = %X, Reason = %d\n&quot;</span>, DllHandle, Reason);</span><br><span class="line">    print_console(szMsg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> NTAPI <span class="title function_">TLS_CALLBACK2</span><span class="params">(PVOID DllHandle, DWORD Reason, PVOID Reserved)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> szMsg[<span class="number">80</span>] = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line">    wsprintfA(szMsg, <span class="string">&quot;TLS_CALLBACK2() : DllHandle = %X, Reason = %d\n&quot;</span>, DllHandle, Reason);</span><br><span class="line">    print_console(szMsg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> data_seg(<span class="string">&quot;.CRT$XLX&quot;</span>)</span></span><br><span class="line">    PIMAGE_TLS_CALLBACK pTLS_CALLBACKs[] = &#123; TLS_CALLBACK1, TLS_CALLBACK2, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> data_seg()</span></span><br><span class="line"></span><br><span class="line">DWORD WINAPI <span class="title function_">ThreadProc</span><span class="params">(LPVOID lParam)</span></span><br><span class="line">&#123;</span><br><span class="line">    print_console(<span class="string">&quot;ThreadProc() start\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    print_console(<span class="string">&quot;ThreadProc() end\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hThread = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    print_console(<span class="string">&quot;main() start\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    hThread = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, ThreadProc, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    WaitForSingleObject(hThread, <span class="number">60</span>*<span class="number">1000</span>);</span><br><span class="line">    CloseHandle(hThread);</span><br><span class="line"></span><br><span class="line">    print_console(<span class="string">&quot;main() end\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="调试TLS回调函数"><a href="#调试TLS回调函数" class="headerlink" title="调试TLS回调函数"></a>调试TLS回调函数</h5><p>直接在运行前设置调试选项</p><p><img src="/./../images/image-20221221222931558.png" alt="image-20221221222931558"></p><p>添加TLS这里不做阐述</p><hr><h1 id="keyboard-hooking"><a href="#keyboard-hooking" class="headerlink" title="keyboard hooking"></a>keyboard hooking</h1><p>消息钩取工作原理</p><p><img src="/./../images/image-20221222102644542.png" alt="image-20221222102644542"></p><p>使用SetWindowsHookEx()可以实现消息钩子，钩子函数需要存在于dll文件中，由操作系统调用回调函数</p><p>API定义：</p><p><img src="/./../images/image-20221222103023824.png" alt="image-20221222103023824"></p><p>在某进程拥有消息，操作系统就会将dll注入进程序中，实现消息钩取</p><p>只需要一个程序加载安装钩子所在的dll程序，然后SetWindowsHookEx()注册钩子，操作系统就会检测每一个程序的行为，一旦发生键盘输入，就将dll文件注入。</p><p>加载dll注册hook实例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;conio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;windows.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>DEF_DLL_NAME<span class="string">&quot;KeyHook.dll&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>DEF_HOOKSTART<span class="string">&quot;HookStart&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>DEF_HOOKSTOP<span class="string">&quot;HookStop&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span> <span class="params">(*PFN_HOOKSTART)</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span> <span class="params">(*PFN_HOOKSTOP)</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">HMODULEhDll = <span class="literal">NULL</span>;</span><br><span class="line">PFN_HOOKSTARTHookStart = <span class="literal">NULL</span>;</span><br><span class="line">PFN_HOOKSTOPHookStop = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">char</span>ch = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// KeyHook.dll 肺爹</span></span><br><span class="line">hDll = LoadLibraryA(DEF_DLL_NAME);</span><br><span class="line">    <span class="keyword">if</span>( hDll == <span class="literal">NULL</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;LoadLibrary(%s) failed!!! [%d]&quot;</span>, DEF_DLL_NAME, GetLastError());</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// export 窃荐 林家 掘扁</span></span><br><span class="line">HookStart = (PFN_HOOKSTART)GetProcAddress(hDll, DEF_HOOKSTART);</span><br><span class="line">HookStop = (PFN_HOOKSTOP)GetProcAddress(hDll, DEF_HOOKSTOP);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 饶欧 矫累</span></span><br><span class="line">HookStart();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 荤侩磊啊 &#x27;q&#x27; 甫 涝仿且 锭鳖瘤 措扁</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;press &#x27;q&#x27; to quit!\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>( _getch() != <span class="string">&#x27;q&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 饶欧 辆丰</span></span><br><span class="line">HookStop();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// KeyHook.dll 攫肺爹</span></span><br><span class="line">FreeLibrary(hDll);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dll代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;windows.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEF_PROCESS_NAME<span class="string">&quot;notepad.exe&quot;</span></span></span><br><span class="line"></span><br><span class="line">HINSTANCE g_hInstance = <span class="literal">NULL</span>;</span><br><span class="line">HHOOK g_hHook = <span class="literal">NULL</span>;</span><br><span class="line">HWND g_hWnd = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">BOOL WINAPI <span class="title function_">DllMain</span><span class="params">(HINSTANCE hinstDLL, DWORD dwReason, LPVOID lpvReserved)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>( dwReason )</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">g_hInstance = hinstDLL;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LRESULT CALLBACK <span class="title function_">KeyboardProc</span><span class="params">(<span class="type">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> szPath[MAX_PATH] = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line"><span class="type">char</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( nCode &gt;= <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// bit 31 : 0 =&gt; press, 1 =&gt; release</span></span><br><span class="line"><span class="keyword">if</span>( !(lParam &amp; <span class="number">0x80000000</span>) )</span><br><span class="line">&#123;</span><br><span class="line">GetModuleFileNameA(<span class="literal">NULL</span>, szPath, MAX_PATH);</span><br><span class="line">p = <span class="built_in">strrchr</span>(szPath, <span class="string">&#x27;\\&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 泅犁 橇肺技胶 捞抚阑 厚背秦辑 父距 notepad.exe 扼搁 0 酒囱 蔼阑 府畔窃</span></span><br><span class="line">            <span class="comment">// =&gt; 0 酒囱 蔼阑 府畔窍搁 皋矫瘤绰 促澜栏肺 傈崔登瘤 臼澜</span></span><br><span class="line"><span class="keyword">if</span>( !_stricmp(p + <span class="number">1</span>, DEF_PROCESS_NAME) )</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 老馆利牢 版快俊绰 CallNextHookEx() 甫 龋免窍咯</span></span><br><span class="line">    <span class="comment">//   览侩橇肺弊伐 (趣篮 促澜 扰) 栏肺 皋矫瘤甫 傈崔窃</span></span><br><span class="line"><span class="keyword">return</span> CallNextHookEx(g_hHook, nCode, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">__declspec(dllexport) <span class="type">void</span> <span class="title function_">HookStart</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">g_hHook = SetWindowsHookEx(WH_KEYBOARD, KeyboardProc, g_hInstance, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__declspec(dllexport) <span class="type">void</span> <span class="title function_">HookStop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( g_hHook )</span><br><span class="line">&#123;</span><br><span class="line">UnhookWindowsHookEx(g_hHook);</span><br><span class="line">g_hHook = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h5 id="调试hook"><a href="#调试hook" class="headerlink" title="调试hook"></a>调试hook</h5><p>用字符串搜索直接定位到main函数</p><p><img src="/./../images/image-20221222110634215.png" alt="image-20221222110634215"></p><p>上面得到hookStart地址，然后call，F7直接步入就能进入hookstart函数</p><p><img src="/./../images/image-20221222111024672.png" alt="image-20221222111024672"></p><p>这里就是dll中注册键盘hook</p><p>直接根据注册时得到的地址进行跳转就能得到hook函数</p><p><img src="/./../images/image-20221222111311777.png" alt="image-20221222111311777"></p><p>也可以打开notepad，进行附加attach，先摁F9，让hook注册成功</p><p>然后在新加一个模块处停止，option设置</p><p><img src="/./../images/image-20221222111708005.png" alt="image-20221222111708005"></p><p>附加后在键盘输入字母，od会立马断住。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;TLS and keyboard hooking&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>syc_level7</title>
    <link href="https://pa1r0t.github.io/2022/12/20/syc-level7/"/>
    <id>https://pa1r0t.github.io/2022/12/20/syc-level7/</id>
    <published>2022-12-20T03:30:36.000Z</published>
    <updated>2022-12-20T04:11:42.019Z</updated>
    
    <content type="html"><![CDATA[<p>syc_level7</p><p>这种异常处理的catch代码一开始不会找，后来看了三叶草的战队的解答才知道怎么操作</p><span id="more"></span><p>这里有四个throw块，要找到对应catch代码，然后jmp过去就能看见源码，三叶草那边的解答是手撸汇编代码，说实话这种分析太慢，而且容易出错，还不如让ida来帮我们分析</p><p><img src="/./../images/image-20221220115828084.png" alt="image-20221220115828084"></p><p>转到卡片形式汇编代码，有这种标志的就是catch代码</p><p><img src="/./../images/image-20221220115956022.png" alt="image-20221220115956022"></p><p>然后将所有的catch块打上断点</p><p><img src="/./../images/image-20221220120047338.png" alt="image-20221220120047338"></p><p>然后在throw代码之前也都打上断点</p><p><img src="/./../images/image-20221220120159946.png" alt="image-20221220120159946"></p><p>然后，运行程序找到，各个throw对应的catch块</p><p>修改throw代码为jmp 对应catch地址，直接看到源码</p><p><img src="/./../images/image-20221220113600556.png" alt="image-20221220113600556"></p><p>这里随机数，大循环32次每一次要重置srand，小循环四次，所以只需要输出4个随机数即可</p><p>这里用c语言中的srand代码生成随机数，值得注意的是，&#x3D;&#x3D;我在windows上用c语言跑，跑出来的随机数根本不对。要在linux上面跑才行&#x3D;&#x3D;</p><p><img src="/./../images/image-20221220114740283.png" alt="image-20221220114740283"></p><p><img src="/./../images/image-20221220114707904.png" alt="image-20221220114707904"></p><p>这里根据随机数，标上代码块的执行顺序</p><p><img src="/./../images/image-20221220114941422.png" alt="image-20221220114941422"></p><p>最后python伪代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">enc = [<span class="number">0xA3A7C060</span>, <span class="number">0xEE6E5485</span>, <span class="number">0x244B2655</span>, <span class="number">0x318482D9</span>]</span><br><span class="line">delta = <span class="number">0x9E3779B9</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    v11 += delta</span><br><span class="line">    v12 += delta</span><br><span class="line">    v7 += ((v8 &gt;&gt; <span class="number">5</span>) + <span class="number">6</span>) ^ (v8 + v11) ^ (<span class="number">16</span> * v8 + <span class="number">8</span>) ^ (i + v11)</span><br><span class="line">    v9 += ((v10 &gt;&gt; <span class="number">5</span>) + <span class="number">6</span>) ^ (v10 + v12) ^ (<span class="number">16</span> * v10 + <span class="number">8</span>) ^ (i + v12)</span><br><span class="line">    v8 += ((v7 &gt;&gt; <span class="number">5</span>) + <span class="number">7</span>) ^ (v7 + v11) ^ (<span class="number">16</span> * v7 + <span class="number">9</span>) ^ (i + v11)</span><br><span class="line">    v10 += ((v9 &gt;&gt; <span class="number">5</span>) + <span class="number">7</span>) ^ (v9 + v12) ^ (<span class="number">16</span> * v9 + <span class="number">9</span>) ^ (i + v12)</span><br><span class="line">v19 = v7 ^ HIBYTE(delta)</span><br><span class="line">v20 = v8 ^ BYTE2(delta)</span><br><span class="line">v21 = v9 ^ BYTE1(delta)</span><br><span class="line">v22 = v10 ^ (unsigned __int8)delta</span><br></pre></td></tr></table></figure><p>然后根据这个代码写出解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lesson7</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">enc = [<span class="number">0xA3A7C060</span>, <span class="number">0xEE6E5485</span>, <span class="number">0x244B2655</span>, <span class="number">0x318482D9</span>]</span><br><span class="line">delta = <span class="number">0x9E3779B9</span></span><br><span class="line">s = (delta*<span class="number">32</span>)&amp;<span class="number">0xffffffff</span></span><br><span class="line">v7 = enc[<span class="number">0</span>]^<span class="number">0x9e</span></span><br><span class="line">v8 = enc[<span class="number">1</span>]^<span class="number">0x37</span></span><br><span class="line">v9 = enc[<span class="number">2</span>]^<span class="number">0x79</span></span><br><span class="line">v10 = enc[<span class="number">3</span>]^<span class="number">0xb9</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">31</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">    v10 -= ((v9 &gt;&gt; <span class="number">5</span>) + <span class="number">7</span>) ^ (v9 + s) ^ (<span class="number">16</span> * v9 + <span class="number">9</span>) ^ (i + s)</span><br><span class="line">    v10 = v10&amp;<span class="number">0xffffffff</span></span><br><span class="line">    v8 -= ((v7 &gt;&gt; <span class="number">5</span>) + <span class="number">7</span>) ^ (v7 + s) ^ (<span class="number">16</span> * v7 + <span class="number">9</span>) ^ (i + s)</span><br><span class="line">    v8 = v8&amp;<span class="number">0xffffffff</span></span><br><span class="line">    v9 -= ((v10 &gt;&gt; <span class="number">5</span>) + <span class="number">6</span>) ^ (v10 + s) ^ (<span class="number">16</span> * v10 + <span class="number">8</span>) ^ (i + s)</span><br><span class="line">    v9 = v9&amp;<span class="number">0xffffffff</span></span><br><span class="line">    v7 -= ((v8 &gt;&gt; <span class="number">5</span>) + <span class="number">6</span>) ^ (v8 + s) ^ (<span class="number">16</span> * v8 + <span class="number">8</span>) ^ (i + s)</span><br><span class="line">    v7 = v7&amp;<span class="number">0xffffffff</span></span><br><span class="line">    s = (s-delta)&amp;<span class="number">0xffffffff</span></span><br><span class="line">enc = [v7,v8,v9,v10]</span><br><span class="line">flag = <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">hex</span>(x)[<span class="number">2</span>:],enc)),<span class="number">16</span>)</span><br><span class="line">long_to_bytes(flag)</span><br><span class="line"><span class="comment">#SYC&#123;ediGegTEaEi&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;syc_level7&lt;/p&gt;
&lt;p&gt;这种异常处理的catch代码一开始不会找，后来看了三叶草的战队的解答才知道怎么操作&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>syc_level5</title>
    <link href="https://pa1r0t.github.io/2022/12/19/syc-level5/"/>
    <id>https://pa1r0t.github.io/2022/12/19/syc-level5/</id>
    <published>2022-12-19T13:02:09.000Z</published>
    <updated>2022-12-19T13:11:09.681Z</updated>
    
    <content type="html"><![CDATA[<p>emmmmmmmmmmm,第一次做到魔改aes，有点激动记录一下吧</p><span id="more"></span><ol><li><p>魔改AES     </p><p><img src="/./../images/image-20221219210943381.png" alt="image-20221219210943381">       </p></li><li><p>这里做21次操作。但是无列混淆 <img src="/./../images/image-20221219210954851.png" alt="image-20221219210954851"></p></li><li><p>第一次做这种魔改aes，逆着就是先行移位，原先怎么移动，就逆回去 <img src="/./../images/image-20221219211019386.png" alt="image-20221219211019386"></p></li><li><p>然后再字节替换，也可以逆 </p></li><li><p>然后再轮密钥加，这个要从后往前，不然会影响字节替换，字节替换是必须要有顺序的 </p></li><li><p>最后就是每一个密文块的初始异或，该题除了第一块，其他都是拿密文块作为密匙</p></li></ol><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lesson5</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">row_re</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="comment"># 第二行</span></span><br><span class="line">    v1 = a1[<span class="number">13</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">13</span>+i*<span class="number">16</span>] = a1[<span class="number">9</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">9</span>+i*<span class="number">16</span>] = a1[<span class="number">5</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">5</span>+i*<span class="number">16</span>] = a1[<span class="number">1</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">1</span>+i*<span class="number">16</span>] = v1</span><br><span class="line">    <span class="comment"># 第三行 不变</span></span><br><span class="line">    v2 = a1[<span class="number">2</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">2</span>+i*<span class="number">16</span>] = a1[<span class="number">10</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">10</span>+i*<span class="number">16</span>] = v2</span><br><span class="line">    v3 = a1[<span class="number">6</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">6</span>+i*<span class="number">16</span>] = a1[<span class="number">14</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">14</span>+i*<span class="number">16</span>] = v3</span><br><span class="line">    <span class="comment"># 第四行</span></span><br><span class="line">    v4 = a1[<span class="number">15</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">15</span>+i*<span class="number">16</span>] = a1[<span class="number">3</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">3</span>+i*<span class="number">16</span>] = a1[<span class="number">7</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">7</span>+i*<span class="number">16</span>] = a1[<span class="number">11</span>+i*<span class="number">16</span>]</span><br><span class="line">    a1[<span class="number">11</span>+i*<span class="number">16</span>] = v4</span><br><span class="line">    </span><br><span class="line">a1 = [<span class="number">0xF8</span>, <span class="number">0x88</span>, <span class="number">0x9D</span>, <span class="number">0x31</span>, <span class="number">0xC7</span>, <span class="number">0x24</span>, <span class="number">0xD5</span>, <span class="number">0xF9</span>, <span class="number">0x45</span>, <span class="number">0x28</span>, <span class="number">0x9B</span>, <span class="number">0x7D</span>, <span class="number">0x42</span>, <span class="number">0x66</span>, <span class="number">0x65</span>, <span class="number">0x29</span>, <span class="number">0x2E</span>, <span class="number">0xC3</span>, <span class="number">0xC3</span>, <span class="number">0x5F</span>, <span class="number">0x1E</span>, <span class="number">0x1C</span>, <span class="number">0x43</span>, <span class="number">0xE9</span>, <span class="number">0x1E</span>, <span class="number">0xE1</span>, <span class="number">0xB9</span>, <span class="number">0xBD</span>, <span class="number">0x85</span>, <span class="number">0x5B</span>, <span class="number">0x7A</span>, <span class="number">0x39</span>, <span class="number">0xDE</span>, <span class="number">0xF6</span>, <span class="number">0xA7</span>, <span class="number">0xB8</span>, <span class="number">0xF5</span>, <span class="number">0xD2</span>, <span class="number">0xF9</span>, <span class="number">0xFE</span>, <span class="number">0xD9</span>, <span class="number">0xA0</span>, <span class="number">0x13</span>, <span class="number">0xF3</span>, <span class="number">0x43</span>, <span class="number">0xEF</span>, <span class="number">0xB2</span>, <span class="number">0x8A</span>]</span><br><span class="line">key_t = [<span class="number">0x58</span>, <span class="number">0x2F</span>, <span class="number">0x36</span>, <span class="number">0xDD</span>, <span class="number">0x92</span>, <span class="number">0xF2</span>, <span class="number">0x79</span>, <span class="number">0x09</span>, <span class="number">0xC8</span>, <span class="number">0x73</span>, <span class="number">0x6F</span>, <span class="number">0x0A</span>, <span class="number">0x36</span>, <span class="number">0x14</span>, <span class="number">0x6F</span>, <span class="number">0x43</span>, <span class="number">0xB7</span>, <span class="number">0x1A</span>, <span class="number">0x21</span>, <span class="number">0xD0</span>, <span class="number">0x25</span>, <span class="number">0xE8</span>, <span class="number">0x58</span>, <span class="number">0xD9</span>, <span class="number">0xED</span>, <span class="number">0x9B</span>, <span class="number">0x37</span>, <span class="number">0xD3</span>, <span class="number">0xDB</span>, <span class="number">0x8F</span>, <span class="number">0x58</span>, <span class="number">0x90</span>, <span class="number">0x55</span>, <span class="number">0x7D</span>, <span class="number">0x4C</span>, <span class="number">0x5C</span>, <span class="number">0x70</span>, <span class="number">0x95</span>, <span class="number">0x14</span>, <span class="number">0x85</span>, <span class="number">0x9D</span>, <span class="number">0x0E</span>, <span class="number">0x23</span>, <span class="number">0x56</span>, <span class="number">0x46</span>, <span class="number">0x81</span>, <span class="number">0x7B</span>, <span class="number">0xC6</span>, <span class="number">0x6C</span>, <span class="number">0xF6</span>, <span class="number">0x8D</span>, <span class="number">0x4F</span>, <span class="number">0x1C</span>, <span class="number">0x63</span>, <span class="number">0x99</span>, <span class="number">0xCA</span>, <span class="number">0x81</span>, <span class="number">0x6D</span>, <span class="number">0xBA</span>, <span class="number">0x9C</span>, <span class="number">0xC7</span>, <span class="number">0xEC</span>, <span class="number">0xC1</span>, <span class="number">0x5A</span>, <span class="number">0xA5</span>, <span class="number">0x79</span>, <span class="number">0x86</span>, <span class="number">0x50</span>, <span class="number">0xB9</span>, <span class="number">0x1A</span>, <span class="number">0x1F</span>, <span class="number">0x9A</span>, <span class="number">0x38</span>, <span class="number">0x77</span>, <span class="number">0xA5</span>, <span class="number">0x06</span>, <span class="number">0xFF</span>, <span class="number">0x9B</span>, <span class="number">0x64</span>, <span class="number">0x5C</span>, <span class="number">0x10</span>, <span class="number">0xBF</span>, <span class="number">0x28</span>, <span class="number">0x66</span>, <span class="number">0xA9</span>, <span class="number">0xA5</span>, <span class="number">0x37</span>, <span class="number">0xFC</span>, <span class="number">0x91</span>, <span class="number">0xD2</span>, <span class="number">0x92</span>, <span class="number">0xFA</span>, <span class="number">0x6E</span>, <span class="number">0x49</span>, <span class="number">0xF6</span>, <span class="number">0xA6</span>, <span class="number">0x42</span>, <span class="number">0xD6</span>, <span class="number">0x3C</span>, <span class="number">0x5E</span>, <span class="number">0xEB</span>, <span class="number">0x73</span>, <span class="number">0x0B</span>, <span class="number">0xA2</span>, <span class="number">0x7A</span>, <span class="number">0xA1</span>, <span class="number">0x99</span>, <span class="number">0x58</span>, <span class="number">0x14</span>, <span class="number">0xE8</span>, <span class="number">0x6F</span>, <span class="number">0xFE</span>, <span class="number">0x1D</span>, <span class="number">0xE3</span>, <span class="number">0x3A</span>, <span class="number">0xB3</span>, <span class="number">0xF6</span>, <span class="number">0x90</span>, <span class="number">0x31</span>, <span class="number">0x11</span>, <span class="number">0x8C</span>, <span class="number">0x31</span>, <span class="number">0xA8</span>, <span class="number">0x49</span>, <span class="number">0x98</span>, <span class="number">0xD9</span>, <span class="number">0xC7</span>, <span class="number">0xB7</span>, <span class="number">0x66</span>, <span class="number">0xFC</span>, <span class="number">0xE2</span>, <span class="number">0x77</span>, <span class="number">0x90</span>, <span class="number">0x6C</span>, <span class="number">0xD3</span>, <span class="number">0x66</span>, <span class="number">0x1C</span>, <span class="number">0x5D</span>, <span class="number">0x7B</span>, <span class="number">0x2F</span>, <span class="number">0x84</span>, <span class="number">0x84</span>, <span class="number">0xBC</span>, <span class="number">0x98</span>, <span class="number">0x70</span>, <span class="number">0x64</span>, <span class="number">0x26</span>, <span class="number">0x57</span>, <span class="number">0xE0</span>, <span class="number">0x08</span>, <span class="number">0xF5</span>, <span class="number">0x31</span>, <span class="number">0xFC</span>, <span class="number">0x55</span>, <span class="number">0x8E</span>, <span class="number">0x1E</span>, <span class="number">0x78</span>, <span class="number">0xD1</span>, <span class="number">0x32</span>, <span class="number">0x86</span>, <span class="number">0x36</span>, <span class="number">0xC2</span>, <span class="number">0x96</span>, <span class="number">0xDE</span>, <span class="number">0xD6</span>, <span class="number">0xCA</span>, <span class="number">0x63</span>, <span class="number">0xEF</span>, <span class="number">0x2A</span>, <span class="number">0x9F</span>, <span class="number">0xED</span>, <span class="number">0xF1</span>, <span class="number">0x52</span>, <span class="number">0x4E</span>, <span class="number">0xDF</span>, <span class="number">0x77</span>, <span class="number">0x63</span>, <span class="number">0xB1</span>, <span class="number">0xF2</span>, <span class="number">0x20</span>, <span class="number">0xB5</span>, <span class="number">0x7B</span>, <span class="number">0x91</span>, <span class="number">0xCF</span>, <span class="number">0x9F</span>, <span class="number">0xE4</span>, <span class="number">0x7C</span>, <span class="number">0x3E</span>, <span class="number">0xCD</span>, <span class="number">0xAA</span>, <span class="number">0xA3</span>, <span class="number">0x49</span>, <span class="number">0xF2</span>, <span class="number">0xD7</span>, <span class="number">0xE0</span>, <span class="number">0x5F</span>, <span class="number">0x47</span>, <span class="number">0xAC</span>, <span class="number">0x71</span>, <span class="number">0x90</span>, <span class="number">0xD8</span>, <span class="number">0x48</span>, <span class="number">0x0D</span>, <span class="number">0xAE</span>, <span class="number">0x15</span>, <span class="number">0xE2</span>, <span class="number">0xAE</span>, <span class="number">0xE7</span>, <span class="number">0xD5</span>, <span class="number">0xCC</span>, <span class="number">0x29</span>, <span class="number">0x03</span>, <span class="number">0x92</span>, <span class="number">0x60</span>, <span class="number">0x58</span>, <span class="number">0x93</span>, <span class="number">0x4A</span>, <span class="number">0x28</span>, <span class="number">0x55</span>, <span class="number">0x3D</span>, <span class="number">0x5F</span>, <span class="number">0xCA</span>, <span class="number">0xFB</span>, <span class="number">0xDA</span>, <span class="number">0x79</span>, <span class="number">0xCF</span>, <span class="number">0xD9</span>, <span class="number">0x07</span>, <span class="number">0xEB</span>, <span class="number">0xAF</span>, <span class="number">0x81</span>, <span class="number">0x94</span>, <span class="number">0xA1</span>, <span class="number">0x87</span>, <span class="number">0xD4</span>, <span class="number">0xA9</span>, <span class="number">0xFE</span>, <span class="number">0x4D</span>, <span class="number">0x2F</span>, <span class="number">0x73</span>, <span class="number">0x56</span>, <span class="number">0x36</span>, <span class="number">0xE5</span>, <span class="number">0x01</span>, <span class="number">0xBD</span>, <span class="number">0x99</span>, <span class="number">0x64</span>, <span class="number">0x95</span>, <span class="number">0x1C</span>, <span class="number">0x1E</span>, <span class="number">0xB0</span>, <span class="number">0x3C</span>, <span class="number">0xE2</span>, <span class="number">0x53</span>, <span class="number">0x9F</span>, <span class="number">0x4F</span>, <span class="number">0x13</span>, <span class="number">0x2E</span>, <span class="number">0x2F</span>, <span class="number">0x26</span>, <span class="number">0xAE</span>, <span class="number">0xB7</span>, <span class="number">0x4B</span>, <span class="number">0xB3</span>, <span class="number">0xB2</span>, <span class="number">0xA9</span>, <span class="number">0xFB</span>, <span class="number">0x8F</span>, <span class="number">0x50</span>, <span class="number">0xFA</span>, <span class="number">0x64</span>, <span class="number">0xC0</span>, <span class="number">0x85</span>, <span class="number">0xE8</span>, <span class="number">0x33</span>, <span class="number">0x8D</span>, <span class="number">0x2B</span>, <span class="number">0x5F</span>, <span class="number">0x78</span>, <span class="number">0x3E</span>, <span class="number">0x99</span>, <span class="number">0xF6</span>, <span class="number">0x83</span>, <span class="number">0xB1</span>, <span class="number">0xC9</span>, <span class="number">0x0C</span>, <span class="number">0xE7</span>, <span class="number">0x71</span>, <span class="number">0x04</span>, <span class="number">0x21</span>, <span class="number">0x0D</span>, <span class="number">0x43</span>, <span class="number">0x2F</span>, <span class="number">0x7E</span>, <span class="number">0x75</span>, <span class="number">0x7D</span>, <span class="number">0xB6</span>, <span class="number">0x88</span>, <span class="number">0xF6</span>, <span class="number">0xCC</span>, <span class="number">0x7F</span>, <span class="number">0x84</span>, <span class="number">0x11</span>, <span class="number">0xBD</span>, <span class="number">0x24</span>, <span class="number">0x6F</span>, <span class="number">0x4F</span>, <span class="number">0xD7</span>, <span class="number">0x0B</span>, <span class="number">0x11</span>, <span class="number">0x3A</span>, <span class="number">0xAA</span>, <span class="number">0xBD</span>, <span class="number">0x99</span>, <span class="number">0xCC</span>, <span class="number">0x66</span>, <span class="number">0xC2</span>, <span class="number">0x1D</span>, <span class="number">0xDD</span>, <span class="number">0xDB</span>, <span class="number">0x69</span>, <span class="number">0xAF</span>, <span class="number">0xC3</span>, <span class="number">0x88</span>, <span class="number">0x62</span>, <span class="number">0xBE</span>, <span class="number">0xF9</span>, <span class="number">0x22</span>, <span class="number">0xDF</span>, <span class="number">0x27</span>, <span class="number">0x35</span>, <span class="number">0x44</span>, <span class="number">0x1D</span>, <span class="number">0x3A</span>, <span class="number">0xE8</span>, <span class="number">0x9F</span>, <span class="number">0x61</span>, <span class="number">0x70</span>, <span class="number">0xDB</span>, <span class="number">0xC5</span>, <span class="number">0x03</span>, <span class="number">0xCE</span>, <span class="number">0x22</span>, <span class="number">0xE7</span>, <span class="number">0xDC</span>, <span class="number">0xE9</span>, <span class="number">0x17</span>, <span class="number">0xA3</span>, <span class="number">0xC1</span>, <span class="number">0xD3</span>, <span class="number">0xFF</span>, <span class="number">0x3C</span>, <span class="number">0x02</span>]</span><br><span class="line">SBOX = [<span class="number">0x28</span>, <span class="number">0x90</span>, <span class="number">0xC3</span>, <span class="number">0x41</span>, <span class="number">0xC2</span>, <span class="number">0x75</span>, <span class="number">0x84</span>, <span class="number">0xDA</span>, <span class="number">0x79</span>, <span class="number">0xE7</span>, <span class="number">0x21</span>, <span class="number">0x0C</span>, <span class="number">0x81</span>, <span class="number">0xD5</span>, <span class="number">0xBF</span>, <span class="number">0x92</span>, <span class="number">0xB8</span>, <span class="number">0x4E</span>, <span class="number">0xB1</span>, <span class="number">0x2D</span>, <span class="number">0xED</span>, <span class="number">0x5C</span>, <span class="number">0xCB</span>, <span class="number">0x99</span>, <span class="number">0x6A</span>, <span class="number">0x32</span>, <span class="number">0x6F</span>, <span class="number">0xF2</span>, <span class="number">0x52</span>, <span class="number">0x4D</span>, <span class="number">0x29</span>, <span class="number">0x77</span>, <span class="number">0x49</span>, <span class="number">0x1D</span>, <span class="number">0xBB</span>, <span class="number">0x3A</span>, <span class="number">0x9F</span>, <span class="number">0x02</span>, <span class="number">0x1A</span>, <span class="number">0x71</span>, <span class="number">0x58</span>, <span class="number">0x72</span>, <span class="number">0xBA</span>, <span class="number">0xA1</span>, <span class="number">0x5E</span>, <span class="number">0xFA</span>, <span class="number">0x48</span>, <span class="number">0xF9</span>, <span class="number">0xFC</span>, <span class="number">0xF7</span>, <span class="number">0xA6</span>, <span class="number">0x97</span>, <span class="number">0x9D</span>, <span class="number">0x24</span>, <span class="number">0x0D</span>, <span class="number">0xE0</span>, <span class="number">0xF3</span>, <span class="number">0x37</span>, <span class="number">0x08</span>, <span class="number">0xEA</span>, <span class="number">0xF5</span>, <span class="number">0x6B</span>, <span class="number">0x86</span>, <span class="number">0xEF</span>, <span class="number">0x8D</span>, <span class="number">0x61</span>, <span class="number">0x65</span>, <span class="number">0x17</span>, <span class="number">0xD7</span>, <span class="number">0x7E</span>, <span class="number">0x13</span>, <span class="number">0x9C</span>, <span class="number">0xCC</span>, <span class="number">0x12</span>, <span class="number">0x33</span>, <span class="number">0x8E</span>, <span class="number">0x7D</span>, <span class="number">0x2F</span>, <span class="number">0x55</span>, <span class="number">0xCA</span>, <span class="number">0xAB</span>, <span class="number">0xE4</span>, <span class="number">0xFE</span>, <span class="number">0x45</span>, <span class="number">0xD6</span>, <span class="number">0xF6</span>, <span class="number">0xDE</span>, <span class="number">0xF1</span>, <span class="number">0x67</span>, <span class="number">0xE1</span>, <span class="number">0x0B</span>, <span class="number">0xB2</span>, <span class="number">0xAE</span>, <span class="number">0xCF</span>, <span class="number">0x7C</span>, <span class="number">0x04</span>, <span class="number">0x0E</span>, <span class="number">0x16</span>, <span class="number">0xA2</span>, <span class="number">0x00</span>, <span class="number">0xC6</span>, <span class="number">0xFF</span>, <span class="number">0x2C</span>, <span class="number">0x1E</span>, <span class="number">0x47</span>, <span class="number">0x30</span>, <span class="number">0xA4</span>, <span class="number">0x40</span>, <span class="number">0x4B</span>, <span class="number">0x15</span>, <span class="number">0x38</span>, <span class="number">0x35</span>, <span class="number">0xAF</span>, <span class="number">0x3E</span>, <span class="number">0x39</span>, <span class="number">0x3C</span>, <span class="number">0xD2</span>, <span class="number">0x85</span>, <span class="number">0xC7</span>, <span class="number">0x64</span>, <span class="number">0x89</span>, <span class="number">0xFD</span>, <span class="number">0xE8</span>, <span class="number">0x8B</span>, <span class="number">0x43</span>, <span class="number">0xC8</span>, <span class="number">0x22</span>, <span class="number">0x94</span>, <span class="number">0xA8</span>, <span class="number">0x31</span>, <span class="number">0xA3</span>, <span class="number">0xB9</span>, <span class="number">0x20</span>, <span class="number">0xEB</span>, <span class="number">0xB0</span>, <span class="number">0x01</span>, <span class="number">0x3D</span>, <span class="number">0x68</span>, <span class="number">0x5A</span>, <span class="number">0x93</span>, <span class="number">0x5B</span>, <span class="number">0x4F</span>, <span class="number">0x50</span>, <span class="number">0xE6</span>, <span class="number">0x6D</span>, <span class="number">0xF4</span>, <span class="number">0x44</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0xA7</span>, <span class="number">0x51</span>, <span class="number">0xD3</span>, <span class="number">0xC4</span>, <span class="number">0x2B</span>, <span class="number">0x88</span>, <span class="number">0x95</span>, <span class="number">0xA5</span>, <span class="number">0x70</span>, <span class="number">0x23</span>, <span class="number">0x18</span>, <span class="number">0x09</span>, <span class="number">0x4A</span>, <span class="number">0x19</span>, <span class="number">0x66</span>, <span class="number">0xDC</span>, <span class="number">0xEC</span>, <span class="number">0x14</span>, <span class="number">0xA9</span>, <span class="number">0xDB</span>, <span class="number">0xE2</span>, <span class="number">0x91</span>, <span class="number">0x4C</span>, <span class="number">0x57</span>, <span class="number">0x82</span>, <span class="number">0x1B</span>, <span class="number">0x2A</span>, <span class="number">0x11</span>, <span class="number">0x7B</span>, <span class="number">0x5D</span>, <span class="number">0x8A</span>, <span class="number">0xD4</span>, <span class="number">0xA0</span>, <span class="number">0x07</span>, <span class="number">0xD8</span>, <span class="number">0x53</span>, <span class="number">0x9B</span>, <span class="number">0x26</span>, <span class="number">0xD1</span>, <span class="number">0x98</span>, <span class="number">0x42</span>, <span class="number">0x0A</span>, <span class="number">0x9A</span>, <span class="number">0x1C</span>, <span class="number">0x8F</span>, <span class="number">0x5F</span>, <span class="number">0x63</span>, <span class="number">0xE9</span>, <span class="number">0xCD</span>, <span class="number">0xC1</span>, <span class="number">0x1F</span>, <span class="number">0x6C</span>, <span class="number">0xCE</span>, <span class="number">0xAC</span>, <span class="number">0xAA</span>, <span class="number">0xD0</span>, <span class="number">0x7F</span>, <span class="number">0x59</span>, <span class="number">0xBE</span>, <span class="number">0xB6</span>, <span class="number">0x46</span>, <span class="number">0xB7</span>, <span class="number">0x83</span>, <span class="number">0xEE</span>, <span class="number">0x7A</span>, <span class="number">0x9E</span>, <span class="number">0xC5</span>, <span class="number">0x62</span>, <span class="number">0x60</span>, <span class="number">0xF0</span>, <span class="number">0x8C</span>, <span class="number">0x2E</span>, <span class="number">0xC0</span>, <span class="number">0xDD</span>, <span class="number">0x73</span>, <span class="number">0x56</span>, <span class="number">0x76</span>, <span class="number">0x27</span>, <span class="number">0xB5</span>, <span class="number">0x25</span>, <span class="number">0x74</span>, <span class="number">0x6E</span>, <span class="number">0xC9</span>, <span class="number">0xDF</span>, <span class="number">0xB4</span>, <span class="number">0x34</span>, <span class="number">0x05</span>, <span class="number">0xD9</span>, <span class="number">0xB3</span>, <span class="number">0xBD</span>, <span class="number">0x3B</span>, <span class="number">0x54</span>, <span class="number">0xAD</span>, <span class="number">0x0F</span>, <span class="number">0x87</span>, <span class="number">0x78</span>, <span class="number">0xFB</span>, <span class="number">0x69</span>, <span class="number">0xF8</span>, <span class="number">0xBC</span>, <span class="number">0xE3</span>, <span class="number">0x96</span>, <span class="number">0x03</span>, <span class="number">0x3F</span>, <span class="number">0xE5</span>, <span class="number">0x06</span>, <span class="number">0x36</span>]</span><br><span class="line">key = [<span class="built_in">bytearray</span>(<span class="string">b&quot;vMBixpswDVgJhpZd&quot;</span>),[a1[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>)],[a1[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>,<span class="number">32</span>)]]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">21</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">        row_re(i)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i*<span class="number">16</span>,(i+<span class="number">1</span>)*<span class="number">16</span>):</span><br><span class="line">            a1[j] = SBOX.index(a1[j])</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            a1[i*<span class="number">16</span>+k] ^= key_t[p*<span class="number">16</span> + k]</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            a1[l+<span class="number">16</span>*i] ^= key[i][l]</span><br><span class="line"><span class="built_in">bytearray</span>(a1)</span><br><span class="line"><span class="comment"># SYC&#123;ZtZJpWvEthTkaDzLQznEYLybEcNOPfmlukmZbzXBhih&#125;</span></span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;emmmmmmmmmmm,第一次做到魔改aes，有点激动记录一下吧&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>re_base1</title>
    <link href="https://pa1r0t.github.io/2022/12/17/re-base1/"/>
    <id>https://pa1r0t.github.io/2022/12/17/re-base1/</id>
    <published>2022-12-17T13:16:25.000Z</published>
    <updated>2022-12-17T13:36:34.076Z</updated>
    
    <content type="html"><![CDATA[<p>re_OD debugger1</p><span id="more"></span><h1 id="查找main函数的五种方法"><a href="#查找main函数的五种方法" class="headerlink" title="查找main函数的五种方法"></a>查找main函数的五种方法</h1><p>运行程序，看见弹窗，盲猜是user32.GetmessageW()的api</p><p><img src="/./../images/image-20221217212124141.png" alt="image-20221217212124141"></p><p>方法一：</p><p>1.不断地F7步入函数</p><p>2.看见一些红色api，即一些库函数，就Ctrl+F9跳出此函数</p><p><img src="/./../images/image-20221217212358112.png" alt="image-20221217212358112"></p><p>3.直到看见弹窗函数</p><p>方法二：</p><p>1.不断地F8步过函数</p><p>2.直到某个函数执行了弹窗函数，然后在此函数之上下断，然后ctrl+F2重新开始</p><p>3.直到找到弹窗函数</p><p>方法三：</p><p>1.通过查找api的方式查找main函数</p><p>2.右键查看模块间的调用函数</p><p><img src="/./../images/image-20221217212828911.png" alt="image-20221217212828911"></p><p>3.找到弹窗函数即可</p><p>方法四：</p><p>1.Ctrl+n查找所有内存的api</p><p><img src="/./../images/image-20221217213116702.png" alt="image-20221217213116702"></p><p>方法五：</p><p>1.查找字符串,右键即可</p><p>这里修改dump窗口的数据，选中数据后摁ctrl+E</p><p><img src="/./../images/image-20221217213430348.png" alt="image-20221217213430348"></p><p>修改后右键复制到文件</p><p><img src="/./../images/image-20221217213520134.png" alt="image-20221217213520134"></p><p>在dump窗口中，右键保存文件即可</p><p><img src="/./../images/image-20221217213618822.png" alt="image-20221217213618822"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;re_OD debugger1&lt;/p&gt;</summary>
    
    
    
    <category term="re" scheme="https://pa1r0t.github.io/categories/re/"/>
    
    
  </entry>
  
  <entry>
    <title>信创网安wp</title>
    <link href="https://pa1r0t.github.io/2022/12/05/%E4%BF%A1%E5%88%9B%E7%BD%91%E5%AE%89wp/"/>
    <id>https://pa1r0t.github.io/2022/12/05/%E4%BF%A1%E5%88%9B%E7%BD%91%E5%AE%89wp/</id>
    <published>2022-12-05T02:42:19.000Z</published>
    <updated>2022-12-05T03:12:44.452Z</updated>
    
    <content type="html"><![CDATA[<p>省排名：22</p><p>web师傅纠结于web最后一题，所以杂项一道没做。然后我把仿射密码的做题思路给忘了，然后密码0解，至于pwn….</p><span id="more"></span><h1 id="RevShift"><a href="#RevShift" class="headerlink" title="RevShift"></a>RevShift</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&#x27;≁⧃⩆㷕⿤ᩣᡤ㋟㩨ᣳ⿃ᣰ㑥㥟⫴㍽&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(str1)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">    t = <span class="built_in">ord</span>(i)&amp;<span class="number">0xff</span></span><br><span class="line">    <span class="keyword">if</span> t &gt; <span class="number">128</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(i) &gt;&gt; <span class="number">7</span>)+<span class="built_in">chr</span>((<span class="built_in">ord</span>(i)-<span class="number">128</span>)&amp;<span class="number">0xff</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(i) &gt;&gt; <span class="number">7</span>)+<span class="built_in">chr</span>((<span class="built_in">ord</span>(i))&amp;<span class="number">0xff</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">f.close()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="string">&#x27;10000000&#x27;</span>,<span class="number">2</span>))</span><br><span class="line"><span class="comment"># DASCTF&#123;U_d4c0de_th1s_C1pher_Utf&#125;</span></span><br></pre></td></tr></table></figure><h1 id="ReContract"><a href="#ReContract" class="headerlink" title="ReContract"></a>ReContract</h1><h5 id="1-智能合约的题，我也是第一次做，但提示说是一道容易题，查看文件发现前面有几个数字缺了，直接百度搜着找就行"><a href="#1-智能合约的题，我也是第一次做，但提示说是一道容易题，查看文件发现前面有几个数字缺了，直接百度搜着找就行" class="headerlink" title="1.智能合约的题，我也是第一次做，但提示说是一道容易题，查看文件发现前面有几个数字缺了，直接百度搜着找就行"></a>1.智能合约的题，我也是第一次做，但提示说是一道容易题，查看文件发现前面有几个数字缺了，直接百度搜着找就行<img src="/./../images/image-20221205105400376.png" alt="image-20221205105400376"></h5><h5 id="2-然后又找到一篇文章，上面写着一个在线工具"><a href="#2-然后又找到一篇文章，上面写着一个在线工具" class="headerlink" title="2.然后又找到一篇文章，上面写着一个在线工具"></a>2.然后又找到一篇文章，上面写着一个在线工具<img src="/./../images/image-20221205105528927.png" alt="image-20221205105528927"></h5><h5 id="3-直接将字节码复制进去翻译即可"><a href="#3-直接将字节码复制进去翻译即可" class="headerlink" title="3.直接将字节码复制进去翻译即可"></a>3.直接将字节码复制进去翻译即可<img src="/./../images/image-20221205105705533.png" alt="image-20221205105705533"></h5><h5 id="4-这里看见有五个可疑数字，拿去转字符串看看"><a href="#4-这里看见有五个可疑数字，拿去转字符串看看" class="headerlink" title="4.这里看见有五个可疑数字，拿去转字符串看看"></a>4.这里看见有五个可疑数字，拿去转字符串看看<img src="/./../images/image-20221205105820247.png" alt="image-20221205105820247"></h5><h5 id="5-发现顺序是乱的，以我神级英语水平，大概的顺序就是-’反编译智能合约字节码真的不错’-hhhhhhhhhhhh"><a href="#5-发现顺序是乱的，以我神级英语水平，大概的顺序就是-’反编译智能合约字节码真的不错’-hhhhhhhhhhhh" class="headerlink" title="5.发现顺序是乱的，以我神级英语水平，大概的顺序就是:’反编译智能合约字节码真的不错’,hhhhhhhhhhhh"></a>5.发现顺序是乱的，以我神级英语水平，大概的顺序就是:’反编译智能合约字节码真的不错’,hhhhhhhhhhhh<img src="/./../images/image-20221205110022973.png" alt="image-20221205110022973"></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x4279746563306465355f00000000000000000000000000000000000000000000</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x4441534354467b00000000000000000000000000000000000000000000000000</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x536d3472745f43306e74724063745f0000000000000000000000000000000000</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x443363306d70316c655f00000000000000000000000000000000000000000000</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">0x31735f46756e4e792e7d00000000000000000000000000000000000000000000</span>))</span><br><span class="line"><span class="comment"># DASCTF&#123;D3c0mp1le_Sm4rt_C0ntr@ct_Bytec0de5_1s_FunNy.&#125;</span></span><br></pre></td></tr></table></figure><hr><p>赛后复现密码—–逆向第三道懒得复现，还有密码第三道。。。。。。&#x3D;&#x3D;看了一遍代码就把文件扔到回收站了&#x3D;&#x3D;</p><h1 id="easy-Affline"><a href="#easy-Affline" class="headerlink" title="easy_Affline"></a>easy_Affline</h1><p>这道题题目给的a，b数字太大，我以为要爆破很长的区间，其实不用，经过我脚本的测试，发现大数字和小数字的结果是相同的，所以只需遍历0~m即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">text = <span class="string">&#x27;aCdhpnlmNKuRJbfVIXUvyTrSPqjBMzgwHZkAxWGiYetEsocDLFOQ&#x27;</span></span><br><span class="line">cipher = <span class="string">&#x27;CezmBh&#123;BKDdD_oP_rKD_rdtF_cMHu&#125;&#x27;</span></span><br><span class="line">flag=<span class="string">&#x27;DASCTF&#x27;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">d</span>():</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">52</span>):</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">52</span>):</span><br><span class="line">            <span class="keyword">if</span> GCD(a,<span class="number">52</span>) == <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            c = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            t = inverse(a,<span class="number">52</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> cipher:</span><br><span class="line">                x = text.find(i)</span><br><span class="line">                c += text[t*(x-b) % <span class="built_in">len</span>(text)]</span><br><span class="line">            <span class="keyword">if</span> c == flag:</span><br><span class="line">                <span class="built_in">print</span>(a,b)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">d()</span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">6</span></span><br><span class="line">t = inverse(a,<span class="number">52</span>)</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cipher:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> text:</span><br><span class="line">            flag += i</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            x = text.find(i)</span><br><span class="line">            flag += text[t*(x-b) % <span class="built_in">len</span>(text)]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># DASCTF&#123;TheLe_iU_Ihe_ILxE_Yrjp&#125;</span></span><br></pre></td></tr></table></figure><h1 id="gauss-system"><a href="#gauss-system" class="headerlink" title="gauss_system"></a>gauss_system</h1><p>sage解即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">k = <span class="number">1751007263671615053487807501173970925758538</span></span><br><span class="line">c = <span class="number">463982900309034681135307002234842926080979</span></span><br><span class="line">p, q = var(<span class="string">&quot;p, q&quot;</span>)</span><br><span class="line">assume(p, <span class="string">&quot;integer&quot;</span>)</span><br><span class="line">assume(q, <span class="string">&quot;integer&quot;</span>)</span><br><span class="line">sol = solve((p - <span class="number">1003</span>) ** <span class="number">2</span> + (q - <span class="number">48</span>) ** <span class="number">2</span> == k, p, q)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> p, q <span class="keyword">in</span> sol:</span><br><span class="line">    <span class="keyword">if</span> p &gt; <span class="number">0</span> <span class="keyword">and</span> q &gt; <span class="number">0</span>:</span><br><span class="line">        p, q = <span class="built_in">int</span>(p), <span class="built_in">int</span>(q)</span><br><span class="line">        <span class="keyword">if</span> is_prime(p) <span class="keyword">and</span> is_prime(q):</span><br><span class="line">            <span class="built_in">print</span>(p)</span><br><span class="line">            <span class="built_in">print</span>(q)</span><br></pre></td></tr></table></figure><p><img src="/./../images/image-20221205111022196.png" alt="image-20221205111022196"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">s = <span class="number">1751007263671615053487807501173970925758538</span></span><br><span class="line">c = <span class="number">463982900309034681135307002234842926080979</span></span><br><span class="line">p = <span class="number">1087638045546779918273</span></span><br><span class="line">q = <span class="number">753691412682137267747</span></span><br><span class="line"><span class="keyword">assert</span> p**<span class="number">2</span> + q**<span class="number">2</span> == s</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = libnum.invmod(e,phi)</span><br><span class="line"></span><br><span class="line">n = p*q</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line">long_to_bytes(m)</span><br><span class="line"><span class="comment"># Z[i]_15_m4g1c</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;省排名：22&lt;/p&gt;
&lt;p&gt;web师傅纠结于web最后一题，所以杂项一道没做。然后我把仿射密码的做题思路给忘了，然后密码0解，至于pwn….&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>NOV X联合出题人</title>
    <link href="https://pa1r0t.github.io/2022/11/29/buuctf-nov/"/>
    <id>https://pa1r0t.github.io/2022/11/29/buuctf-nov/</id>
    <published>2022-11-29T08:52:11.000Z</published>
    <updated>2022-11-30T09:27:57.484Z</updated>
    
    <content type="html"><![CDATA[<p>​比赛一直在打安洵杯，buu都没好好看，现在安洵杯迷宫题斜着走还没搞明白，先来复现一波buu的月赛</p><span id="more"></span><h1 id="babytea"><a href="#babytea" class="headerlink" title="babytea"></a>babytea</h1><h1 id="1-一-看核心算法经典tea"><a href="#1-一-看核心算法经典tea" class="headerlink" title="1. 一 看核心算法经典tea"></a>1. 一 看核心算法经典tea<img src="/./../images/image-20221129172038310.png" alt="image-20221129172038310"></h1><h2 id="2-结果脚本算不出来-x3D-x3D-，我还以为老子脚本有问题，动调发现有异常，直接去看汇编，结果发现果然存在几个异常点"><a href="#2-结果脚本算不出来-x3D-x3D-，我还以为老子脚本有问题，动调发现有异常，直接去看汇编，结果发现果然存在几个异常点" class="headerlink" title="2.结果脚本算不出来&#x3D;&#x3D;，我还以为老子脚本有问题，动调发现有异常，直接去看汇编，结果发现果然存在几个异常点"></a>2.结果脚本算不出来&#x3D;&#x3D;，我还以为老子脚本有问题，动调发现有异常，直接去看汇编，结果发现果然存在几个异常点</h2><h3 id="a-sum-异常"><a href="#a-sum-异常" class="headerlink" title="a)sum+异常"></a>a)sum+异常<img src="/./../images/image-20221129172501520.png" alt="image-20221129172501520"></h3><h3 id="b-开头也有异常，而且这个是默认必须跳转"><a href="#b-开头也有异常，而且这个是默认必须跳转" class="headerlink" title="b)开头也有异常，而且这个是默认必须跳转"></a>b)开头也有异常，而且这个是默认必须跳转<img src="/./../images/image-20221129172612239.png" alt="image-20221129172612239"></h3><h2 id="3-直接修改汇编，让报错的地方直接跳转到异常处理程序"><a href="#3-直接修改汇编，让报错的地方直接跳转到异常处理程序" class="headerlink" title="3.直接修改汇编，让报错的地方直接跳转到异常处理程序"></a>3.直接修改汇编，让报错的地方直接跳转到异常处理程序<img src="/./../images/image-20221129172922988.png" alt="image-20221129172922988"></h2><h2 id="4-然后源码就变了"><a href="#4-然后源码就变了" class="headerlink" title="4.然后源码就变了"></a>4.然后源码就变了<img src="/./../images/image-20221129173019067.png" alt="image-20221129173019067"></h2><h2 id="5-但是v5地方不是每次都要异或，是有条件的，当-gt-gt-0x1f-x3D-x3D-0时异或"><a href="#5-但是v5地方不是每次都要异或，是有条件的，当-gt-gt-0x1f-x3D-x3D-0时异或" class="headerlink" title="5.但是v5地方不是每次都要异或，是有条件的，当&gt;&gt;0x1f &#x3D;&#x3D; 0时异或"></a>5.但是v5地方不是每次都要异或，是有条件的，当&gt;&gt;0x1f &#x3D;&#x3D; 0时异或<img src="/./../images/image-20221129173152401.png" alt="image-20221129173152401"></h2><h2 id="6-总之这是一道魔改tea罢了，脚本如下"><a href="#6-总之这是一道魔改tea罢了，脚本如下" class="headerlink" title="6.总之这是一道魔改tea罢了，脚本如下"></a>6.总之这是一道魔改tea罢了，脚本如下</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tea</span>(<span class="params">v,k,d38,d3c</span>):</span><br><span class="line">    v0 = v[<span class="number">0</span>]</span><br><span class="line">    v1 = v[<span class="number">1</span>]</span><br><span class="line">    s = <span class="number">0</span></span><br><span class="line">    j = [<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># sum</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        s = (s + dword_41F000)&amp;<span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">if</span> (s &gt;&gt; <span class="number">0x1f</span>) == <span class="number">0</span>:</span><br><span class="line">            s ^= <span class="number">0x1234567</span></span><br><span class="line">        j.append(s) </span><br><span class="line">    <span class="built_in">sum</span> = j[<span class="number">32</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        v1 -= (k[<span class="number">3</span>] + (v0 &gt;&gt; <span class="number">5</span>)) ^ (<span class="built_in">sum</span> + v0) ^ (k[<span class="number">2</span>] + <span class="number">16</span> * v0)</span><br><span class="line">        v1 = v1&amp;<span class="number">0xffffffff</span></span><br><span class="line">        v0 -= (k[<span class="number">1</span>] + (v1 &gt;&gt; <span class="number">5</span>)) ^ (<span class="built_in">sum</span> + v1) ^ (k[<span class="number">0</span>] + <span class="number">16</span> * v1)</span><br><span class="line">        v0 = v0&amp;<span class="number">0xffffffff</span></span><br><span class="line">        <span class="built_in">sum</span> = j[<span class="number">31</span>-i]</span><br><span class="line">    v0 ^= d38</span><br><span class="line">    v1 ^= d3c</span><br><span class="line">    v[<span class="number">0</span>] = v0&amp;<span class="number">0xffffffff</span></span><br><span class="line">    v[<span class="number">1</span>] = v1&amp;<span class="number">0xffffffff</span></span><br><span class="line"></span><br><span class="line">enc = [<span class="number">0x5E27B530</span>, <span class="number">0x0BDBEF7F3</span>, <span class="number">0x0E3516A8F</span>, <span class="number">0x5D836CFE</span>, <span class="number">0x0D83DFA09</span>, <span class="number">0x8EFC737A</span>,<span class="number">0x55A853A3</span>, <span class="number">0x7A564EC5</span>]</span><br><span class="line">k = [<span class="number">0x67452301</span>, <span class="number">0x0EFCDAB89</span>, <span class="number">0x98BADCFE</span>, <span class="number">0x10325476</span>]</span><br><span class="line">m = [<span class="literal">None</span>]*<span class="number">2</span></span><br><span class="line">flag = []</span><br><span class="line">dword_41F038 = [<span class="number">0x1234567</span>,<span class="number">0x5E27B530</span>,<span class="number">0x0E3516A8F</span>,<span class="number">0x0D83DFA09</span>]</span><br><span class="line">dword_41F03C = [<span class="number">0x89ABCDEF</span>,<span class="number">0x0BDBEF7F3</span>,<span class="number">0x5D836CFE</span>,<span class="number">0x8EFC737A</span>]</span><br><span class="line">dword_41F000 = <span class="number">0x9E3779B1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    m[<span class="number">0</span>] = enc[<span class="number">2</span>*i]</span><br><span class="line">    m[<span class="number">1</span>] = enc[<span class="number">2</span>*i+<span class="number">1</span>]</span><br><span class="line">    tea(m,k,dword_41F038[i],dword_41F03C[i])</span><br><span class="line">    flag.append(long_to_bytes(m[<span class="number">0</span>])[::-<span class="number">1</span>])</span><br><span class="line">    flag.append(long_to_bytes(m[<span class="number">1</span>])[::-<span class="number">1</span>])</span><br><span class="line"><span class="string">b&#x27;&#x27;</span>.join(flag)</span><br><span class="line"><span class="comment">#600d_y0u_r34lly_kn0w_734_4nd_53h</span></span><br></pre></td></tr></table></figure><hr><h1 id="babysmc"><a href="#babysmc" class="headerlink" title="babysmc"></a>babysmc</h1><h3 id="1-smc函数，但是异或值是输入的值"><a href="#1-smc函数，但是异或值是输入的值" class="headerlink" title="1.smc函数，但是异或值是输入的值"></a>1.smc函数，但是异或值是输入的值<img src="/./../images/image-20221130165909641.png" alt="image-20221130165909641"></h3><h3 id="2-其他也没有和输入值相关的函数，所以只能选择爆破"><a href="#2-其他也没有和输入值相关的函数，所以只能选择爆破" class="headerlink" title="2.其他也没有和输入值相关的函数，所以只能选择爆破"></a>2.其他也没有和输入值相关的函数，所以只能选择爆破<img src="/./../images/image-20221130170030329.png" alt="image-20221130170030329"></h3><h3 id="3-当爆破到第一个操作时push-ebp时那就成功了，所以硬编码就为0x55，先是loc50，第一个值是57"><a href="#3-当爆破到第一个操作时push-ebp时那就成功了，所以硬编码就为0x55，先是loc50，第一个值是57" class="headerlink" title="3.当爆破到第一个操作时push ebp时那就成功了，所以硬编码就为0x55，先是loc50，第一个值是57"></a>3.当爆破到第一个操作时push ebp时那就成功了，所以硬编码就为0x55，先是loc50，第一个值是57<img src="/./../images/image-20221130170339966.png" alt="image-20221130170339966"></h3><h3 id="4-但是爆破失败，真的是糟糕！！！"><a href="#4-但是爆破失败，真的是糟糕！！！" class="headerlink" title="4.但是爆破失败，真的是糟糕！！！"></a>4.但是爆破失败，真的是糟糕！！！<img src="/./../images/image-20221130170528580.png" alt="image-20221130170528580"></h3><h3 id="5-后面发现还有一个函数，这个函数居然爆破成功了，奇了个怪"><a href="#5-后面发现还有一个函数，这个函数居然爆破成功了，奇了个怪" class="headerlink" title="5.后面发现还有一个函数，这个函数居然爆破成功了，奇了个怪"></a>5.后面发现还有一个函数，这个函数居然爆破成功了，奇了个怪<img src="/./../images/image-20221130170643748.png" alt="image-20221130170643748"></h3><h3 id="6-后面惊奇地发现第一个函数应该被异或了两次，进过256长度的计算，确实如此"><a href="#6-后面惊奇地发现第一个函数应该被异或了两次，进过256长度的计算，确实如此" class="headerlink" title="6.后面惊奇地发现第一个函数应该被异或了两次，进过256长度的计算，确实如此"></a>6.后面惊奇地发现第一个函数应该被异或了两次，进过256长度的计算，确实如此<img src="/./../images/image-20221130170821019.png" alt="image-20221130170821019"></h3><h3 id="7-然后就爆破出来了，yes，用idc改编码"><a href="#7-然后就爆破出来了，yes，用idc改编码" class="headerlink" title="7.然后就爆破出来了，yes，用idc改编码"></a>7.然后就爆破出来了，yes，用idc改编码<img src="/./../images/image-20221130170946128.png" alt="image-20221130170946128"></h3><h3 id="8-改完之后从修改开始处到return代码全部重新分析一遍，因为256长度把已经分析了的代码也改了，然后重新生成函数"><a href="#8-改完之后从修改开始处到return代码全部重新分析一遍，因为256长度把已经分析了的代码也改了，然后重新生成函数" class="headerlink" title="8.改完之后从修改开始处到return代码全部重新分析一遍，因为256长度把已经分析了的代码也改了，然后重新生成函数"></a>8.改完之后从修改开始处到return代码全部重新分析一遍，因为256长度把已经分析了的代码也改了，然后重新生成函数<img src="/./../images/image-20221129213724788.png"></h3><h3 id="9-然后逻辑就是循环十次，不同函数调用十次，最后用z3解"><a href="#9-然后逻辑就是循环十次，不同函数调用十次，最后用z3解" class="headerlink" title="9.然后逻辑就是循环十次，不同函数调用十次，最后用z3解"></a>9.然后逻辑就是循环十次，不同函数调用十次，最后用z3解<img src="/./../images/image-20221130172042777.png" alt="image-20221130172042777"></h3><h3 id="这里附上代码，仅供参考"><a href="#这里附上代码，仅供参考" class="headerlink" title="这里附上代码，仅供参考"></a>这里附上代码，仅供参考</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">dword_422040 = [<span class="number">0x00027FC8</span>, <span class="number">0x00029049</span>, <span class="number">0x0003336C</span>, <span class="number">0x0002C6A7</span>, <span class="number">0x00036CB0</span>, <span class="number">0x0001F2BB</span>, <span class="number">0x00035262</span>, <span class="number">0x0002AEDF</span>, <span class="number">0x0002955E</span>, <span class="number">0x0002EE10</span>, <span class="number">0x0002B057</span>, <span class="number">0x0002FDE8</span>, <span class="number">0x00029B92</span>, <span class="number">0x00035842</span>, <span class="number">0x000294D2</span>, <span class="number">0x0002B984</span>]</span><br><span class="line"></span><br><span class="line">flag = [<span class="number">0</span>] * <span class="number">34</span></span><br><span class="line">s = Solver()</span><br><span class="line">a1 = [BitVec(<span class="string">f&#x27;flag[<span class="subst">&#123;i&#125;</span>]&#x27;</span>,<span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">17</span>,<span class="number">33</span>)]</span><br><span class="line">s.add(dword_422040[<span class="number">0</span>] == (<span class="number">159</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                          + <span class="number">109</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                          + <span class="number">14</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                          + <span class="number">92</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                          + <span class="number">211</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + <span class="number">178</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">57</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                          + <span class="number">175</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                          + <span class="number">170</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                        + <span class="number">59</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + <span class="number">200</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                          + <span class="number">5</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                          + <span class="number">48</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                          + <span class="number">28</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                          + <span class="number">18</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">228</span> * a1[<span class="number">1</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">6</span>] == (<span class="number">173</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                          + <span class="number">34</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                          + <span class="number">69</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + <span class="number">216</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                          + <span class="number">225</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                          + <span class="number">160</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                          + <span class="number">207</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">175</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">121</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                          + <span class="number">122</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                          + <span class="number">179</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                          + <span class="number">91</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                          + <span class="number">181</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                          + <span class="number">93</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                          + <span class="number">121</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + <span class="number">12</span> * a1[<span class="number">15</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">8</span>] == (<span class="number">215</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                          + <span class="number">164</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                          + <span class="number">97</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                          + <span class="number">99</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                          + <span class="number">188</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + ((a1[<span class="number">9</span>] &lt;&lt; <span class="number">7</span>)&amp;<span class="number">0xffffffff</span>) \</span><br><span class="line">                          + <span class="number">214</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + <span class="number">106</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                          + <span class="number">169</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                          + <span class="number">28</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                          + <span class="number">18</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                          + a1[<span class="number">1</span>] \</span><br><span class="line">                          + <span class="number">177</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">114</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">176</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                          + <span class="number">25</span> * a1[<span class="number">13</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">9</span>] == (<span class="number">175</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                          + <span class="number">42</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + <span class="number">214</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                          + <span class="number">43</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                          + <span class="number">147</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + <span class="number">53</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">12</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                          + <span class="number">213</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">241</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                          + <span class="number">223</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                          + <span class="number">65</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                          + <span class="number">42</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                          + <span class="number">131</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                          + <span class="number">81</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                          + <span class="number">92</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                          + <span class="number">110</span> * a1[<span class="number">8</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">13</span>] == (<span class="number">57</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                           + <span class="number">109</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                           + <span class="number">60</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                           + <span class="number">228</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                           + <span class="number">166</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                           + <span class="number">236</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                           + <span class="number">100</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                           + <span class="number">179</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                           + <span class="number">20</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                           + <span class="number">45</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                           + <span class="number">204</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                           + <span class="number">182</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                           + <span class="number">84</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                           + <span class="number">170</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                           + <span class="number">199</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                           + <span class="number">138</span> * a1[<span class="number">1</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">10</span>] == (<span class="number">98</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                           + <span class="number">122</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                           + <span class="number">237</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                           + <span class="number">117</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                           + <span class="number">34</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                           + <span class="number">168</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                           + <span class="number">135</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                           + <span class="number">119</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                           + <span class="number">91</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                           + <span class="number">161</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                           + <span class="number">152</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                           + <span class="number">186</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                           + <span class="number">187</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                           + <span class="number">72</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                           + <span class="number">36</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                           + <span class="number">171</span> * a1[<span class="number">1</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">7</span>] == (<span class="number">184</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                          + <span class="number">112</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                          + <span class="number">107</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                          + <span class="number">170</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                          + <span class="number">55</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                          + <span class="number">85</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                          + <span class="number">212</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">173</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                          + <span class="number">166</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                          + <span class="number">142</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + <span class="number">202</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                          + <span class="number">63</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                          + <span class="number">30</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">175</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                          + <span class="number">217</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + <span class="number">63</span> * a1[<span class="number">1</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">15</span>] == (((a1[<span class="number">7</span>] &lt;&lt; <span class="number">6</span>)&amp;<span class="number">0xffffffff</span>) \</span><br><span class="line">                           + <span class="number">228</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                           + <span class="number">90</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                           + <span class="number">85</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                           + <span class="number">196</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                           + <span class="number">219</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                           + <span class="number">93</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                           + <span class="number">183</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                           + <span class="number">156</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                           + <span class="number">197</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                           + <span class="number">119</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                           + <span class="number">36</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                           + <span class="number">205</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                           + <span class="number">94</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                           + <span class="number">153</span> * a1[<span class="number">5</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">5</span>] == (<span class="number">9</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + ((a1[<span class="number">5</span>] &lt;&lt; <span class="number">6</span>)&amp;<span class="number">0xffffffff</span>) \</span><br><span class="line">                          + <span class="number">62</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                          + <span class="number">58</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">100</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                          + <span class="number">137</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                          + <span class="number">6</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                          + <span class="number">119</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                          + <span class="number">180</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + <span class="number">228</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                          + <span class="number">88</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                          + <span class="number">107</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                          + <span class="number">56</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                          + <span class="number">207</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                          + <span class="number">248</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">150</span> * a1[<span class="number">3</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">3</span>] == (<span class="number">38</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">194</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + <span class="number">105</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                          + <span class="number">150</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + <span class="number">75</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                          + <span class="number">89</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                          + <span class="number">99</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                          + <span class="number">98</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                          + <span class="number">91</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                          + <span class="number">178</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                          + <span class="number">117</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                          + <span class="number">48</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                          + <span class="number">239</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">233</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                          + <span class="number">63</span> * a1[<span class="number">5</span>]  \</span><br><span class="line">                          + <span class="number">250</span> * a1[<span class="number">9</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">11</span>] == (<span class="number">30</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                           + <span class="number">13</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                           + <span class="number">206</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                           + <span class="number">234</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                           + <span class="number">71</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                           + <span class="number">239</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                           + <span class="number">141</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                           + <span class="number">179</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                           + <span class="number">113</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                           + <span class="number">181</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                           + <span class="number">52</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                           + <span class="number">74</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                           + <span class="number">168</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                           + <span class="number">239</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                           + <span class="number">164</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                           + <span class="number">179</span> * a1[<span class="number">2</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">14</span>] == (<span class="number">211</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                           + <span class="number">74</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                           + <span class="number">144</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                           + <span class="number">234</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                           + <span class="number">241</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                           + <span class="number">157</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                           + <span class="number">25</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                           + <span class="number">6</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                           + <span class="number">243</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                           + <span class="number">107</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                           + <span class="number">77</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                           + <span class="number">127</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                           + <span class="number">67</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                           + <span class="number">13</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                           + <span class="number">151</span> * a1[<span class="number">3</span>]  \</span><br><span class="line">                           + <span class="number">127</span> * a1[<span class="number">13</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">2</span>] == (<span class="number">209</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                          + <span class="number">110</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">22</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">102</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                          + <span class="number">187</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                          + <span class="number">58</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                          + <span class="number">236</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + <span class="number">146</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                          + <span class="number">205</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                          + <span class="number">63</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                          + <span class="number">211</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + <span class="number">152</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                          + <span class="number">82</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                          + <span class="number">14</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                          + <span class="number">49</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                          + <span class="number">251</span> * a1[<span class="number">0</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">12</span>] == (<span class="number">230</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                           + <span class="number">27</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                           + <span class="number">186</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                           + <span class="number">58</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                           + <span class="number">121</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                           + <span class="number">59</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                           + <span class="number">90</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                           + <span class="number">40</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                           + <span class="number">230</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                           + <span class="number">25</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                           + <span class="number">198</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                           + <span class="number">81</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                           + <span class="number">71</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                           + <span class="number">180</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                           + <span class="number">149</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                           + <span class="number">73</span> * a1[<span class="number">15</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">4</span>] == (<span class="number">188</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                          + <span class="number">80</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                          + <span class="number">221</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + ((a1[<span class="number">12</span>] &lt;&lt; <span class="number">6</span>)&amp;<span class="number">0xffffffff</span>) \</span><br><span class="line">                          + <span class="number">230</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                          + <span class="number">123</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                          + <span class="number">124</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                          + <span class="number">253</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                          + <span class="number">202</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">63</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                          + <span class="number">40</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">109</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                          + <span class="number">195</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                          + <span class="number">199</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                          + <span class="number">82</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + <span class="number">225</span> * a1[<span class="number">14</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">s.add(dword_422040[<span class="number">1</span>] == (<span class="number">236</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                          + <span class="number">44</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                          + <span class="number">214</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                          + <span class="number">52</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                          + <span class="number">37</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                          + <span class="number">101</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                          + <span class="number">244</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                          + <span class="number">238</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                          + <span class="number">109</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                          + <span class="number">188</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                          + <span class="number">20</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                          + <span class="number">87</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                          + <span class="number">93</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                          + <span class="number">158</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                          + <span class="number">105</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                          + <span class="number">3</span> * a1[<span class="number">2</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line"><span class="keyword">assert</span> s.check() == sat</span><br><span class="line"><span class="built_in">print</span>(s.model())</span><br><span class="line">flag[<span class="number">28</span>] = <span class="number">114</span></span><br><span class="line">flag[<span class="number">18</span>] = <span class="number">42</span></span><br><span class="line">flag[<span class="number">21</span>] = <span class="number">71</span></span><br><span class="line">flag[<span class="number">27</span>] = <span class="number">42</span></span><br><span class="line">flag[<span class="number">30</span>] = <span class="number">124</span></span><br><span class="line">flag[<span class="number">32</span>] = <span class="number">51</span></span><br><span class="line">flag[<span class="number">23</span>] = <span class="number">42</span></span><br><span class="line">flag[<span class="number">26</span>] = <span class="number">186</span></span><br><span class="line">flag[<span class="number">31</span>] = <span class="number">209</span></span><br><span class="line">flag[<span class="number">17</span>] = <span class="number">186</span></span><br><span class="line">flag[<span class="number">24</span>] = <span class="number">186</span></span><br><span class="line">flag[<span class="number">29</span>] = <span class="number">11</span></span><br><span class="line">flag[<span class="number">20</span>] = <span class="number">45</span></span><br><span class="line">flag[<span class="number">19</span>] = <span class="number">51</span></span><br><span class="line">flag[<span class="number">22</span>] = <span class="number">51</span></span><br><span class="line">flag[<span class="number">25</span>] = <span class="number">25</span></span><br><span class="line">dword_422000 = [<span class="number">0x0002A81A</span>, <span class="number">0x00028D44</span>, <span class="number">0x00022653</span>, <span class="number">0x0002E993</span>, <span class="number">0x000249B5</span>, <span class="number">0x00024265</span>, <span class="number">0x0003253D</span>, <span class="number">0x0002D77B</span>, <span class="number">0x000282C8</span>, <span class="number">0x00022892</span>, <span class="number">0x0002BD54</span>, <span class="number">0x0002482E</span>, <span class="number">0x00024C1F</span>, <span class="number">0x00028127</span>, <span class="number">0x0001E62E</span>, <span class="number">0x0001F009</span>]</span><br><span class="line"></span><br><span class="line">x = Solver()</span><br><span class="line">a1 = [BitVec(<span class="string">f&#x27;flag[<span class="subst">&#123;i&#125;</span>]&#x27;</span>,<span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">17</span>)]</span><br><span class="line">x.add(dword_422000[<span class="number">12</span>] == (<span class="number">199</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                       + <span class="number">98</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                       + <span class="number">192</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                       + <span class="number">23</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                       + <span class="number">79</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                       + <span class="number">77</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                       + <span class="number">185</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                       + <span class="number">135</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                       + <span class="number">119</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                           + <span class="number">54</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                           + <span class="number">41</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                       + <span class="number">124</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                       + <span class="number">18</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                       + <span class="number">181</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                       + <span class="number">191</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                       + <span class="number">7</span> * a1[<span class="number">3</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">3</span>] == (<span class="number">210</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                      + <span class="number">26</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                      + <span class="number">169</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + <span class="number">177</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">205</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                      + <span class="number">223</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">32</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">225</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                      + <span class="number">61</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">72</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                      + <span class="number">186</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">253</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">205</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">49</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                      + <span class="number">232</span> * a1[<span class="number">7</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">13</span>] == (<span class="number">192</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                       + <span class="number">22</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                       + <span class="number">175</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                       + <span class="number">184</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                       + <span class="number">116</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                       + <span class="number">70</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                       + <span class="number">153</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                       + <span class="number">119</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                       + <span class="number">217</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                       + <span class="number">123</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                       + <span class="number">17</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                       + <span class="number">244</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                       + <span class="number">116</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                       + <span class="number">46</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                       + <span class="number">19</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                       + <span class="number">130</span> * a1[<span class="number">11</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">7</span>] == (<span class="number">41</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">71</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                      + <span class="number">185</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                      + <span class="number">69</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                      + <span class="number">142</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                      + <span class="number">221</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">24</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                      + <span class="number">208</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">41</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">159</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">231</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">235</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + <span class="number">225</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + (a1[<span class="number">4</span>] &lt;&lt; <span class="number">6</span>) \</span><br><span class="line">                      + <span class="number">162</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">134</span> * a1[<span class="number">15</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">11</span>] == (<span class="number">36</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                       + <span class="number">220</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                       + <span class="number">110</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                       + <span class="number">45</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                       + <span class="number">123</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                       + <span class="number">133</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                       + <span class="number">101</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                       + <span class="number">137</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                       + <span class="number">102</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                           + <span class="number">227</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                       + <span class="number">94</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                       + <span class="number">18</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                       + <span class="number">22</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                       + <span class="number">189</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                       + <span class="number">218</span> * a1[<span class="number">8</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">15</span>] == (<span class="number">86</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                       + <span class="number">31</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                       + <span class="number">229</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                       + <span class="number">27</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                       + <span class="number">6</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                       + <span class="number">13</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                       + <span class="number">158</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                       + <span class="number">89</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                       + <span class="number">35</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                       + <span class="number">126</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                       + <span class="number">165</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                       + <span class="number">220</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                       + <span class="number">138</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                       + <span class="number">100</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                       + <span class="number">84</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                       + <span class="number">175</span> * a1[<span class="number">2</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">8</span>] == (<span class="number">7</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                      + <span class="number">28</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                      + <span class="number">131</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">6</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">254</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + <span class="number">130</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + <span class="number">124</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                      + <span class="number">55</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">157</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">175</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">140</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                      + <span class="number">241</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">11</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                      + <span class="number">211</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">121</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                      + <span class="number">200</span> * a1[<span class="number">15</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">6</span>] == (<span class="number">195</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">197</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + <span class="number">218</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                      + <span class="number">83</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                      + <span class="number">98</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">70</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">229</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                      + <span class="number">148</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                      + <span class="number">195</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + <span class="number">94</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">211</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">220</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">81</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">253</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                      + <span class="number">78</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                      + <span class="number">4</span> * a1[<span class="number">3</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">14</span>] == (<span class="number">3</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                       + <span class="number">136</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                       + <span class="number">156</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                       + <span class="number">189</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                       + <span class="number">244</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                       + <span class="number">157</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                       + <span class="number">83</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                       + <span class="number">6</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                       + <span class="number">113</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                       + <span class="number">63</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                       + <span class="number">35</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                       + <span class="number">22</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                       + <span class="number">26</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                       + <span class="number">62</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                       + <span class="number">98</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                       + <span class="number">110</span> * a1[<span class="number">13</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">4</span>] == (<span class="number">96</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                      + <span class="number">248</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                      + <span class="number">191</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">194</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">154</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                      + <span class="number">31</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">157</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                      + <span class="number">248</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + <span class="number">81</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                      + <span class="number">56</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">52</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + <span class="number">94</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">212</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">83</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                      + <span class="number">83</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">158</span> * a1[<span class="number">11</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">1</span>] == (<span class="number">67</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                      + <span class="number">220</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">123</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                      + <span class="number">168</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">23</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">148</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                      + <span class="number">127</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">194</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                      + <span class="number">132</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                      + <span class="number">44</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + <span class="number">60</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + <span class="number">98</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                      + <span class="number">38</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">245</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">159</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">146</span> * a1[<span class="number">3</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">5</span>] == (<span class="number">132</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                           + <span class="number">10</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                      + <span class="number">95</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + <span class="number">83</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">99</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                      + <span class="number">77</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">195</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">47</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">38</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + <span class="number">178</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                      + <span class="number">74</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                      + <span class="number">86</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                      + <span class="number">208</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">240</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">120</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">43</span> * a1[<span class="number">15</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">9</span>] == (<span class="number">172</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                      + <span class="number">110</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">92</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                      + <span class="number">126</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                      + <span class="number">91</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + <span class="number">77</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">207</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">249</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                      + <span class="number">240</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">129</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">6</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + <span class="number">100</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                      + a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">76</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">127</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                      + <span class="number">4</span> * a1[<span class="number">8</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">10</span>] == (<span class="number">46</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                       + <span class="number">37</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                       + <span class="number">3</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                       + <span class="number">72</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                       + <span class="number">116</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                       + <span class="number">186</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                       + <span class="number">221</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                       + <span class="number">236</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                       + <span class="number">79</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                       + <span class="number">175</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                       + <span class="number">184</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                       + <span class="number">160</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                       + <span class="number">227</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                       + <span class="number">99</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                       + <span class="number">71</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                       + <span class="number">4</span> * a1[<span class="number">5</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">0</span>] == (<span class="number">203</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                      + <span class="number">31</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + <span class="number">11</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">149</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                      + <span class="number">215</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">206</span> * a1[<span class="number">1</span>] \</span><br><span class="line">                      + <span class="number">245</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">9</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                      + <span class="number">16</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">241</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + <span class="number">110</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                      + <span class="number">175</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">38</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                      + <span class="number">227</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">208</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">8</span> * a1[<span class="number">15</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">x.add(dword_422000[<span class="number">2</span>] == (<span class="number">132</span> * a1[<span class="number">3</span>] \</span><br><span class="line">                      + <span class="number">119</span> * a1[<span class="number">14</span>] \</span><br><span class="line">                      + <span class="number">26</span> * a1[<span class="number">8</span>] \</span><br><span class="line">                      + <span class="number">24</span> * a1[<span class="number">6</span>] \</span><br><span class="line">                      + <span class="number">121</span> * a1[<span class="number">11</span>] \</span><br><span class="line">                      + <span class="number">235</span> * a1[<span class="number">2</span>] \</span><br><span class="line">                      + <span class="number">228</span> * a1[<span class="number">12</span>] \</span><br><span class="line">                      + <span class="number">34</span> * a1[<span class="number">5</span>] \</span><br><span class="line">                      + <span class="number">37</span> * a1[<span class="number">15</span>] \</span><br><span class="line">                      + <span class="number">24</span> * a1[<span class="number">9</span>] \</span><br><span class="line">                      + <span class="number">145</span> * a1[<span class="number">13</span>] \</span><br><span class="line">                      + <span class="number">199</span> * a1[<span class="number">4</span>] \</span><br><span class="line">                      + <span class="number">173</span> * a1[<span class="number">10</span>] \</span><br><span class="line">                      + <span class="number">58</span> * a1[<span class="number">0</span>] \</span><br><span class="line">                      + <span class="number">246</span> * a1[<span class="number">7</span>] \</span><br><span class="line">                      + <span class="number">199</span> * a1[<span class="number">1</span>])&amp;<span class="number">0xffffffff</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">assert</span> x.check() == sat</span><br><span class="line"><span class="built_in">print</span>(x.model())</span><br><span class="line"></span><br><span class="line">flag[<span class="number">0</span>] = <span class="number">0x23</span></span><br><span class="line">flag[<span class="number">33</span>] = <span class="number">0x21</span></span><br><span class="line">flag[<span class="number">5</span>] = <span class="number">43</span></span><br><span class="line">flag[<span class="number">11</span>] = <span class="number">186</span></span><br><span class="line">flag[<span class="number">8</span>] = <span class="number">51</span></span><br><span class="line">flag[<span class="number">16</span>] = <span class="number">72</span></span><br><span class="line">flag[<span class="number">6</span>] = <span class="number">42</span></span><br><span class="line">flag[<span class="number">4</span>] = <span class="number">51</span></span><br><span class="line">flag[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">flag[<span class="number">10</span>] = <span class="number">179</span></span><br><span class="line">flag[<span class="number">14</span>] = <span class="number">43</span></span><br><span class="line">flag[<span class="number">7</span>] = <span class="number">186</span></span><br><span class="line">flag[<span class="number">1</span>] = <span class="number">90</span></span><br><span class="line">flag[<span class="number">13</span>] = <span class="number">113</span></span><br><span class="line">flag[<span class="number">12</span>] = <span class="number">51</span></span><br><span class="line">flag[<span class="number">2</span>] = <span class="number">45</span></span><br><span class="line">flag[<span class="number">9</span>] = <span class="number">72</span></span><br><span class="line">flag[<span class="number">15</span>] = <span class="number">114</span></span><br><span class="line"></span><br><span class="line">by280 = [<span class="number">0x7A</span>, <span class="number">0x91</span>, <span class="number">0x9F</span>, <span class="number">0x23</span>, <span class="number">0x71</span>, <span class="number">0xD1</span>, <span class="number">0x63</span>, <span class="number">0xDB</span>, <span class="number">0x59</span>, <span class="number">0x0A</span>, <span class="number">0xEC</span>, <span class="number">0x69</span>, <span class="number">0xEE</span>, <span class="number">0x76</span>, <span class="number">0x5D</span>, <span class="number">0x64</span>, <span class="number">0x37</span>, <span class="number">0x42</span>, <span class="number">0x8C</span>, <span class="number">0x0B</span>, <span class="number">0x3C</span>, <span class="number">0x5C</span>, <span class="number">0x80</span>, <span class="number">0xAD</span>, <span class="number">0x6A</span>, <span class="number">0x03</span>, <span class="number">0x43</span>, <span class="number">0x93</span>, <span class="number">0xBC</span>, <span class="number">0xBF</span>, <span class="number">0xE3</span>, <span class="number">0xAF</span>, <span class="number">0x5A</span>, <span class="number">0x8A</span>, <span class="number">0x65</span>, <span class="number">0x0D</span>, <span class="number">0x31</span>, <span class="number">0xDF</span>, <span class="number">0x3E</span>, <span class="number">0xA7</span>, <span class="number">0xE4</span>, <span class="number">0xDD</span>, <span class="number">0xB4</span>, <span class="number">0xB0</span>, <span class="number">0x56</span>, <span class="number">0x1C</span>, <span class="number">0x12</span>, <span class="number">0xA4</span>, <span class="number">0x9E</span>, <span class="number">0xD8</span>, <span class="number">0x3D</span>, <span class="number">0x81</span>, <span class="number">0x60</span>, <span class="number">0x9A</span>, <span class="number">0xCB</span>, <span class="number">0xFA</span>, <span class="number">0xB1</span>, <span class="number">0xE0</span>, <span class="number">0xD3</span>, <span class="number">0xF4</span>, <span class="number">0xA2</span>, <span class="number">0x26</span>, <span class="number">0x68</span>, <span class="number">0x90</span>, <span class="number">0x4B</span>, <span class="number">0x45</span>, <span class="number">0x85</span>, <span class="number">0x20</span>, <span class="number">0x16</span>, <span class="number">0xDE</span>, <span class="number">0xED</span>, <span class="number">0x4C</span>, <span class="number">0x6F</span>, <span class="number">0x34</span>, <span class="number">0xDC</span>, <span class="number">0xBE</span>, <span class="number">0xD2</span>, <span class="number">0x46</span>, <span class="number">0x33</span>, <span class="number">0x14</span>, <span class="number">0x77</span>, <span class="number">0xC6</span>, <span class="number">0xCD</span>, <span class="number">0xF0</span>, <span class="number">0xC5</span>, <span class="number">0xAC</span>, <span class="number">0x1F</span>, <span class="number">0xD0</span>, <span class="number">0x95</span>, <span class="number">0x97</span>, <span class="number">0x3F</span>, <span class="number">0xD7</span>, <span class="number">0x52</span>, <span class="number">0xAE</span>, <span class="number">0xB9</span>, <span class="number">0xC9</span>, <span class="number">0x0C</span>, <span class="number">0xCA</span>, <span class="number">0x4E</span>, <span class="number">0xF1</span>, <span class="number">0xB7</span>, <span class="number">0x39</span>, <span class="number">0x7F</span>, <span class="number">0x27</span>, <span class="number">0x2B</span>, <span class="number">0x40</span>, <span class="number">0x4A</span>, <span class="number">0x51</span>, <span class="number">0xA1</span>, <span class="number">0xCC</span>, <span class="number">0xCE</span>, <span class="number">0x6E</span>, <span class="number">0x70</span>, <span class="number">0xFF</span>, <span class="number">0x0E</span>, <span class="number">0xEF</span>, <span class="number">0x8E</span>, <span class="number">0x25</span>, <span class="number">0xB3</span>, <span class="number">0x5E</span>, <span class="number">0x6C</span>, <span class="number">0xAB</span>, <span class="number">0x02</span>, <span class="number">0x49</span>, <span class="number">0xE9</span>, <span class="number">0x9B</span>, <span class="number">0x36</span>, <span class="number">0x13</span>, <span class="number">0x9C</span>, <span class="number">0x04</span>, <span class="number">0x35</span>, <span class="number">0xC0</span>, <span class="number">0xFB</span>, <span class="number">0x3A</span>, <span class="number">0x67</span>, <span class="number">0xB6</span>, <span class="number">0x9D</span>, <span class="number">0xC2</span>, <span class="number">0x73</span>, <span class="number">0xB5</span>, <span class="number">0x6D</span>, <span class="number">0xCF</span>, <span class="number">0x83</span>, <span class="number">0x2C</span>, <span class="number">0x01</span>, <span class="number">0xC1</span>, <span class="number">0x10</span>, <span class="number">0x6B</span>, <span class="number">0x79</span>, <span class="number">0x87</span>, <span class="number">0x5B</span>, <span class="number">0x57</span>, <span class="number">0x47</span>, <span class="number">0xE5</span>, <span class="number">0x15</span>, <span class="number">0xF7</span>, <span class="number">0xA5</span>, <span class="number">0x74</span>, <span class="number">0xAA</span>, <span class="number">0x53</span>, <span class="number">0x7D</span>, <span class="number">0x2E</span>, <span class="number">0xD5</span>, <span class="number">0xA3</span>, <span class="number">0x19</span>, <span class="number">0xF5</span>, <span class="number">0x2D</span>, <span class="number">0xFD</span>, <span class="number">0x61</span>, <span class="number">0x8D</span>, <span class="number">0xC8</span>, <span class="number">0x1B</span>, <span class="number">0xC3</span>, <span class="number">0xDA</span>, <span class="number">0xF6</span>, <span class="number">0x72</span>, <span class="number">0x54</span>, <span class="number">0x5F</span>, <span class="number">0x1E</span>, <span class="number">0xE8</span>, <span class="number">0x17</span>, <span class="number">0x50</span>, <span class="number">0xB2</span>, <span class="number">0xE7</span>, <span class="number">0x0F</span>, <span class="number">0x7E</span>, <span class="number">0x55</span>, <span class="number">0xBD</span>, <span class="number">0x86</span>, <span class="number">0x00</span>, <span class="number">0x78</span>, <span class="number">0x94</span>, <span class="number">0x92</span>, <span class="number">0x09</span>, <span class="number">0x2F</span>, <span class="number">0xD6</span>, <span class="number">0xD9</span>, <span class="number">0xF3</span>, <span class="number">0x29</span>, <span class="number">0xE6</span>, <span class="number">0x24</span>, <span class="number">0x32</span>, <span class="number">0x66</span>, <span class="number">0x22</span>, <span class="number">0x41</span>, <span class="number">0xC4</span>, <span class="number">0x7C</span>, <span class="number">0x05</span>, <span class="number">0x98</span>, <span class="number">0x44</span>, <span class="number">0x4F</span>, <span class="number">0x99</span>, <span class="number">0xA9</span>, <span class="number">0xE1</span>, <span class="number">0x8F</span>, <span class="number">0x08</span>, <span class="number">0x1A</span>, <span class="number">0x2A</span>, <span class="number">0x11</span>, <span class="number">0xEA</span>, <span class="number">0x3B</span>, <span class="number">0xE2</span>, <span class="number">0x38</span>, <span class="number">0xB8</span>, <span class="number">0x18</span>, <span class="number">0xF9</span>, <span class="number">0xD4</span>, <span class="number">0xC7</span>, <span class="number">0x62</span>, <span class="number">0x7B</span>, <span class="number">0x75</span>, <span class="number">0x58</span>, <span class="number">0x96</span>, <span class="number">0x28</span>, <span class="number">0xEB</span>, <span class="number">0x06</span>, <span class="number">0x84</span>, <span class="number">0x89</span>, <span class="number">0x48</span>, <span class="number">0x82</span>, <span class="number">0x88</span>, <span class="number">0xA6</span>, <span class="number">0xFE</span>, <span class="number">0xA0</span>, <span class="number">0xF2</span>, <span class="number">0xF8</span>, <span class="number">0x1D</span>, <span class="number">0x8B</span>, <span class="number">0xFC</span>, <span class="number">0xA8</span>, <span class="number">0x21</span>, <span class="number">0x30</span>, <span class="number">0xBB</span>, <span class="number">0x07</span>, <span class="number">0xBA</span>, <span class="number">0x4D</span>]</span><br><span class="line">by380 = [<span class="number">0x45</span>, <span class="number">0x1F</span>, <span class="number">0x63</span>, <span class="number">0x81</span>, <span class="number">0xE6</span>, <span class="number">0xAD</span>, <span class="number">0x4F</span>, <span class="number">0xD3</span>, <span class="number">0xC0</span>, <span class="number">0x15</span>, <span class="number">0x69</span>, <span class="number">0x8F</span>, <span class="number">0x0D</span>, <span class="number">0x31</span>, <span class="number">0x0C</span>, <span class="number">0xB0</span>, <span class="number">0xF1</span>, <span class="number">0x2E</span>, <span class="number">0x98</span>, <span class="number">0xC1</span>, <span class="number">0xC2</span>, <span class="number">0x96</span>, <span class="number">0xB2</span>, <span class="number">0xEB</span>, <span class="number">0xBF</span>, <span class="number">0xDF</span>, <span class="number">0x17</span>, <span class="number">0xF4</span>, <span class="number">0x7F</span>, <span class="number">0xE5</span>, <span class="number">0x66</span>, <span class="number">0x73</span>, <span class="number">0xD8</span>, <span class="number">0x56</span>, <span class="number">0x46</span>, <span class="number">0x20</span>, <span class="number">0x9C</span>, <span class="number">0x77</span>, <span class="number">0x3D</span>, <span class="number">0x72</span>, <span class="number">0xA3</span>, <span class="number">0x91</span>, <span class="number">0x49</span>, <span class="number">0x68</span>, <span class="number">0x4C</span>, <span class="number">0x1E</span>, <span class="number">0xAE</span>, <span class="number">0x06</span>, <span class="number">0x7A</span>, <span class="number">0x94</span>, <span class="number">0xDD</span>, <span class="number">0x52</span>, <span class="number">0x55</span>, <span class="number">0x2C</span>, <span class="number">0xB8</span>, <span class="number">0x42</span>, <span class="number">0x79</span>, <span class="number">0xFE</span>, <span class="number">0x38</span>, <span class="number">0xEF</span>, <span class="number">0x8B</span>, <span class="number">0xF7</span>, <span class="number">0xAC</span>, <span class="number">0xDC</span>, <span class="number">0xFF</span>, <span class="number">0x78</span>, <span class="number">0x34</span>, <span class="number">0x70</span>, <span class="number">0xA9</span>, <span class="number">0xCE</span>, <span class="number">0x3F</span>, <span class="number">0x0E</span>, <span class="number">0x11</span>, <span class="number">0x43</span>, <span class="number">0x5B</span>, <span class="number">0xF8</span>, <span class="number">0xAF</span>, <span class="number">0xD0</span>, <span class="number">0xFA</span>, <span class="number">0x33</span>, <span class="number">0xBA</span>, <span class="number">0xCF</span>, <span class="number">0x4A</span>, <span class="number">0xC9</span>, <span class="number">0x88</span>, <span class="number">0x4E</span>, <span class="number">0x80</span>, <span class="number">0x10</span>, <span class="number">0x85</span>, <span class="number">0x37</span>, <span class="number">0x12</span>, <span class="number">0xAB</span>, <span class="number">0xE1</span>, <span class="number">0x61</span>, <span class="number">0xB7</span>, <span class="number">0x3E</span>, <span class="number">0x4D</span>, <span class="number">0x19</span>, <span class="number">0x3A</span>, <span class="number">0x04</span>, <span class="number">0x8C</span>, <span class="number">0x92</span>, <span class="number">0x0B</span>, <span class="number">0xE7</span>, <span class="number">0x3C</span>, <span class="number">0xEA</span>, <span class="number">0xC7</span>, <span class="number">0x16</span>, <span class="number">0x35</span>, <span class="number">0xB1</span>, <span class="number">0xA7</span>, <span class="number">0x8E</span>, <span class="number">0x40</span>, <span class="number">0x9F</span>, <span class="number">0xB6</span>, <span class="number">0xB5</span>, <span class="number">0x25</span>, <span class="number">0xA0</span>, <span class="number">0x5A</span>, <span class="number">0x30</span>, <span class="number">0x7D</span>, <span class="number">0xA2</span>, <span class="number">0x1A</span>, <span class="number">0x64</span>, <span class="number">0xC5</span>, <span class="number">0x6D</span>, <span class="number">0x74</span>, <span class="number">0x82</span>, <span class="number">0x08</span>, <span class="number">0x7E</span>, <span class="number">0xD2</span>, <span class="number">0xF6</span>, <span class="number">0xAA</span>, <span class="number">0xDA</span>, <span class="number">0xED</span>, <span class="number">0x4B</span>, <span class="number">0x6E</span>, <span class="number">0xE8</span>, <span class="number">0xE9</span>, <span class="number">0xE2</span>, <span class="number">0xD4</span>, <span class="number">0x71</span>, <span class="number">0xB9</span>, <span class="number">0x09</span>, <span class="number">0x84</span>, <span class="number">0x3B</span>, <span class="number">0xC4</span>, <span class="number">0x1C</span>, <span class="number">0x60</span>, <span class="number">0xFD</span>, <span class="number">0x22</span>, <span class="number">0x99</span>, <span class="number">0x39</span>, <span class="number">0x97</span>, <span class="number">0x18</span>, <span class="number">0x89</span>, <span class="number">0x7C</span>, <span class="number">0xA4</span>, <span class="number">0x27</span>, <span class="number">0xBD</span>, <span class="number">0x0F</span>, <span class="number">0xCC</span>, <span class="number">0x95</span>, <span class="number">0xF5</span>, <span class="number">0xB3</span>, <span class="number">0x65</span>, <span class="number">0x6B</span>, <span class="number">0x8A</span>, <span class="number">0x58</span>, <span class="number">0x36</span>, <span class="number">0xBB</span>, <span class="number">0x9E</span>, <span class="number">0x75</span>, <span class="number">0xD1</span>, <span class="number">0x03</span>, <span class="number">0x9D</span>, <span class="number">0x6A</span>, <span class="number">0x6C</span>, <span class="number">0x53</span>, <span class="number">0x05</span>, <span class="number">0xB4</span>, <span class="number">0xE4</span>, <span class="number">0xEE</span>, <span class="number">0x67</span>, <span class="number">0x87</span>, <span class="number">0x7B</span>, <span class="number">0x32</span>, <span class="number">0x2D</span>, <span class="number">0x24</span>, <span class="number">0x2A</span>, <span class="number">0x59</span>, <span class="number">0xEC</span>, <span class="number">0x0A</span>, <span class="number">0xDB</span>, <span class="number">0x21</span>, <span class="number">0x07</span>, <span class="number">0x23</span>, <span class="number">0x50</span>, <span class="number">0x02</span>, <span class="number">0x41</span>, <span class="number">0xF2</span>, <span class="number">0x83</span>, <span class="number">0xD9</span>, <span class="number">0x26</span>, <span class="number">0xBC</span>, <span class="number">0x6F</span>, <span class="number">0x86</span>, <span class="number">0xA6</span>, <span class="number">0x93</span>, <span class="number">0xF9</span>, <span class="number">0xC8</span>, <span class="number">0xD6</span>, <span class="number">0xA5</span>, <span class="number">0x1D</span>, <span class="number">0xE3</span>, <span class="number">0xE0</span>, <span class="number">0xFC</span>, <span class="number">0xCA</span>, <span class="number">0x1B</span>, <span class="number">0x5E</span>, <span class="number">0x8D</span>, <span class="number">0x2F</span>, <span class="number">0x5C</span>, <span class="number">0xBE</span>, <span class="number">0x47</span>, <span class="number">0xA8</span>, <span class="number">0x44</span>, <span class="number">0x57</span>, <span class="number">0x54</span>, <span class="number">0x48</span>, <span class="number">0xC3</span>, <span class="number">0x00</span>, <span class="number">0x62</span>, <span class="number">0x5D</span>, <span class="number">0xCB</span>, <span class="number">0xD7</span>, <span class="number">0x76</span>, <span class="number">0xCD</span>, <span class="number">0x28</span>, <span class="number">0xD5</span>, <span class="number">0x14</span>, <span class="number">0x90</span>, <span class="number">0x13</span>, <span class="number">0xDE</span>, <span class="number">0x5F</span>, <span class="number">0xF0</span>, <span class="number">0x01</span>, <span class="number">0x2B</span>, <span class="number">0xC6</span>, <span class="number">0x29</span>, <span class="number">0x9A</span>, <span class="number">0x9B</span>, <span class="number">0x51</span>, <span class="number">0xF3</span>, <span class="number">0xFB</span>, <span class="number">0xA1</span>]</span><br><span class="line">by580 = [<span class="number">0x00</span>, <span class="number">0x74</span>, <span class="number">0x59</span>, <span class="number">0xC6</span>, <span class="number">0xAC</span>, <span class="number">0xD3</span>, <span class="number">0xC1</span>, <span class="number">0xA0</span>, <span class="number">0x88</span>, <span class="number">0x3F</span>, <span class="number">0x1C</span>, <span class="number">0x28</span>, <span class="number">0x17</span>, <span class="number">0x22</span>, <span class="number">0xC5</span>, <span class="number">0x38</span>, <span class="number">0xF9</span>, <span class="number">0x1B</span>, <span class="number">0x21</span>, <span class="number">0x49</span>, <span class="number">0x99</span>, <span class="number">0xAF</span>, <span class="number">0xD6</span>, <span class="number">0x95</span>, <span class="number">0xA4</span>, <span class="number">0x9D</span>, <span class="number">0x5D</span>, <span class="number">0x5B</span>, <span class="number">0x73</span>, <span class="number">0xFE</span>, <span class="number">0xC9</span>, <span class="number">0x9A</span>, <span class="number">0x4C</span>, <span class="number">0xB4</span>, <span class="number">0x27</span>, <span class="number">0x5E</span>, <span class="number">0x71</span>, <span class="number">0x25</span>, <span class="number">0xE2</span>, <span class="number">0x90</span>, <span class="number">0xC0</span>, <span class="number">0x62</span>, <span class="number">0x5F</span>, <span class="number">0x48</span>, <span class="number">0x77</span>, <span class="number">0xE0</span>, <span class="number">0xF2</span>, <span class="number">0x8E</span>, <span class="number">0x40</span>, <span class="number">0xC7</span>, <span class="number">0x79</span>, <span class="number">0x1A</span>, <span class="number">0xDC</span>, <span class="number">0xF3</span>, <span class="number">0x01</span>, <span class="number">0xB6</span>, <span class="number">0xD8</span>, <span class="number">0xB5</span>, <span class="number">0x67</span>, <span class="number">0x1E</span>, <span class="number">0x85</span>, <span class="number">0x12</span>, <span class="number">0x68</span>, <span class="number">0x87</span>, <span class="number">0xD0</span>, <span class="number">0x30</span>, <span class="number">0xEB</span>, <span class="number">0x2F</span>, <span class="number">0x50</span>, <span class="number">0xCF</span>, <span class="number">0xEE</span>, <span class="number">0xDD</span>, <span class="number">0xFB</span>, <span class="number">0xE6</span>, <span class="number">0xA5</span>, <span class="number">0x69</span>, <span class="number">0x05</span>, <span class="number">0x75</span>, <span class="number">0xB7</span>, <span class="number">0xEF</span>, <span class="number">0x70</span>, <span class="number">0x53</span>, <span class="number">0xFF</span>, <span class="number">0xBA</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x9B</span>, <span class="number">0xA1</span>, <span class="number">0x39</span>, <span class="number">0xF8</span>, <span class="number">0x65</span>, <span class="number">0x1F</span>, <span class="number">0x7A</span>, <span class="number">0x51</span>, <span class="number">0x98</span>, <span class="number">0xAD</span>, <span class="number">0x02</span>, <span class="number">0x13</span>, <span class="number">0x18</span>, <span class="number">0xC3</span>, <span class="number">0x31</span>, <span class="number">0x89</span>, <span class="number">0xCD</span>, <span class="number">0xCA</span>, <span class="number">0x91</span>, <span class="number">0xD1</span>, <span class="number">0x78</span>, <span class="number">0x57</span>, <span class="number">0x47</span>, <span class="number">0xB8</span>, <span class="number">0x54</span>, <span class="number">0x9F</span>, <span class="number">0x96</span>, <span class="number">0x04</span>, <span class="number">0x23</span>, <span class="number">0x2B</span>, <span class="number">0xE5</span>, <span class="number">0x46</span>, <span class="number">0x29</span>, <span class="number">0x7C</span>, <span class="number">0x76</span>, <span class="number">0x82</span>, <span class="number">0xBC</span>, <span class="number">0xFC</span>, <span class="number">0x6E</span>, <span class="number">0xEC</span>, <span class="number">0xED</span>, <span class="number">0x64</span>, <span class="number">0x4A</span>, <span class="number">0x26</span>, <span class="number">0x34</span>, <span class="number">0x5C</span>, <span class="number">0x19</span>, <span class="number">0x55</span>, <span class="number">0xFD</span>, <span class="number">0x6D</span>, <span class="number">0xFA</span>, <span class="number">0x7E</span>, <span class="number">0xB2</span>, <span class="number">0xD4</span>, <span class="number">0xF1</span>, <span class="number">0xF6</span>, <span class="number">0xE4</span>, <span class="number">0x60</span>, <span class="number">0xB0</span>, <span class="number">0x52</span>, <span class="number">0x9E</span>, <span class="number">0x8F</span>, <span class="number">0xBB</span>, <span class="number">0x08</span>, <span class="number">0x3B</span>, <span class="number">0x97</span>, <span class="number">0xE8</span>, <span class="number">0x10</span>, <span class="number">0x6C</span>, <span class="number">0x44</span>, <span class="number">0x3A</span>, <span class="number">0x36</span>, <span class="number">0x35</span>, <span class="number">0x03</span>, <span class="number">0xC4</span>, <span class="number">0x81</span>, <span class="number">0x9C</span>, <span class="number">0xAB</span>, <span class="number">0xCB</span>, <span class="number">0x66</span>, <span class="number">0xAA</span>, <span class="number">0x37</span>, <span class="number">0xA2</span>, <span class="number">0xD2</span>, <span class="number">0xE1</span>, <span class="number">0xE9</span>, <span class="number">0x7B</span>, <span class="number">0x14</span>, <span class="number">0x8D</span>, <span class="number">0xD9</span>, <span class="number">0xF5</span>, <span class="number">0x0B</span>, <span class="number">0xC2</span>, <span class="number">0x07</span>, <span class="number">0xA8</span>, <span class="number">0x0D</span>, <span class="number">0xA3</span>, <span class="number">0x0A</span>, <span class="number">0x84</span>, <span class="number">0x6B</span>, <span class="number">0x2C</span>, <span class="number">0xEA</span>, <span class="number">0x0C</span>, <span class="number">0xAE</span>, <span class="number">0x7D</span>, <span class="number">0x6F</span>, <span class="number">0xD7</span>, <span class="number">0xE7</span>, <span class="number">0xC8</span>, <span class="number">0x3C</span>, <span class="number">0x45</span>, <span class="number">0xCC</span>, <span class="number">0x58</span>, <span class="number">0xB9</span>, <span class="number">0x3D</span>, <span class="number">0x33</span>, <span class="number">0x4E</span>, <span class="number">0x4B</span>, <span class="number">0x8C</span>, <span class="number">0xCE</span>, <span class="number">0x72</span>, <span class="number">0x6A</span>, <span class="number">0x8B</span>, <span class="number">0x2D</span>, <span class="number">0x24</span>, <span class="number">0x11</span>, <span class="number">0xDF</span>, <span class="number">0x5A</span>, <span class="number">0x2E</span>, <span class="number">0x92</span>, <span class="number">0xDA</span>, <span class="number">0x86</span>, <span class="number">0x94</span>, <span class="number">0xA7</span>, <span class="number">0xD5</span>, <span class="number">0x4F</span>, <span class="number">0x2A</span>, <span class="number">0xB3</span>, <span class="number">0x63</span>, <span class="number">0x61</span>, <span class="number">0xE3</span>, <span class="number">0xDE</span>, <span class="number">0x43</span>, <span class="number">0x1D</span>, <span class="number">0xBF</span>, <span class="number">0x15</span>, <span class="number">0x32</span>, <span class="number">0xBE</span>, <span class="number">0x16</span>, <span class="number">0x3E</span>, <span class="number">0x93</span>, <span class="number">0x7F</span>, <span class="number">0x83</span>, <span class="number">0x56</span>, <span class="number">0x06</span>, <span class="number">0xF7</span>, <span class="number">0x8A</span>, <span class="number">0x20</span>, <span class="number">0xBD</span>, <span class="number">0x0E</span>, <span class="number">0xA6</span>, <span class="number">0xDB</span>, <span class="number">0x0F</span>, <span class="number">0xB1</span>, <span class="number">0x42</span>, <span class="number">0xF0</span>, <span class="number">0x09</span>, <span class="number">0x4D</span>, <span class="number">0xA9</span>, <span class="number">0xF4</span>]</span><br><span class="line">by780 = [<span class="number">0x0F</span>, <span class="number">0xA5</span>, <span class="number">0xBA</span>, <span class="number">0x03</span>, <span class="number">0xF9</span>, <span class="number">0x69</span>, <span class="number">0x2A</span>, <span class="number">0xD7</span>, <span class="number">0xEA</span>, <span class="number">0xB5</span>, <span class="number">0xFC</span>, <span class="number">0xA1</span>, <span class="number">0x39</span>, <span class="number">0x20</span>, <span class="number">0x68</span>, <span class="number">0x72</span>, <span class="number">0x25</span>, <span class="number">0xB2</span>, <span class="number">0x6C</span>, <span class="number">0xAD</span>, <span class="number">0x88</span>, <span class="number">0x51</span>, <span class="number">0x73</span>, <span class="number">0xEB</span>, <span class="number">0xCF</span>, <span class="number">0x13</span>, <span class="number">0xDE</span>, <span class="number">0x7C</span>, <span class="number">0x6D</span>, <span class="number">0x38</span>, <span class="number">0x05</span>, <span class="number">0x09</span>, <span class="number">0xC2</span>, <span class="number">0x96</span>, <span class="number">0x1F</span>, <span class="number">0x7F</span>, <span class="number">0x37</span>, <span class="number">0x4A</span>, <span class="number">0xC9</span>, <span class="number">0xE7</span>, <span class="number">0x6A</span>, <span class="number">0xB0</span>, <span class="number">0x59</span>, <span class="number">0xF7</span>, <span class="number">0xD2</span>, <span class="number">0xB9</span>, <span class="number">0x16</span>, <span class="number">0xC8</span>, <span class="number">0xEE</span>, <span class="number">0xA9</span>, <span class="number">0x18</span>, <span class="number">0x80</span>, <span class="number">0xAC</span>, <span class="number">0xE3</span>, <span class="number">0x9E</span>, <span class="number">0x6F</span>, <span class="number">0x3C</span>, <span class="number">0x2F</span>, <span class="number">0x3E</span>, <span class="number">0x9A</span>, <span class="number">0xBE</span>, <span class="number">0x1D</span>, <span class="number">0xB4</span>, <span class="number">0x7B</span>, <span class="number">0x7D</span>, <span class="number">0x32</span>, <span class="number">0x6B</span>, <span class="number">0x74</span>, <span class="number">0xC5</span>, <span class="number">0xC0</span>, <span class="number">0xC7</span>, <span class="number">0xD1</span>, <span class="number">0x29</span>, <span class="number">0x98</span>, <span class="number">0xDD</span>, <span class="number">0xB6</span>, <span class="number">0x0E</span>, <span class="number">0x4D</span>, <span class="number">0xBF</span>, <span class="number">0x79</span>, <span class="number">0x0D</span>, <span class="number">0xDA</span>, <span class="number">0x7A</span>, <span class="number">0x17</span>, <span class="number">0x71</span>, <span class="number">0x43</span>, <span class="number">0x87</span>, <span class="number">0xFF</span>, <span class="number">0xDC</span>, <span class="number">0xC6</span>, <span class="number">0x12</span>, <span class="number">0xE9</span>, <span class="number">0x67</span>, <span class="number">0x2D</span>, <span class="number">0x70</span>, <span class="number">0x9F</span>, <span class="number">0x95</span>, <span class="number">0x30</span>, <span class="number">0x26</span>, <span class="number">0x24</span>, <span class="number">0x2B</span>, <span class="number">0xA8</span>, <span class="number">0xA2</span>, <span class="number">0xD8</span>, <span class="number">0x3B</span>, <span class="number">0x31</span>, <span class="number">0xA0</span>, <span class="number">0x3D</span>, <span class="number">0x4B</span>, <span class="number">0x90</span>, <span class="number">0x60</span>, <span class="number">0x34</span>, <span class="number">0x75</span>, <span class="number">0xE8</span>, <span class="number">0x5D</span>, <span class="number">0xF4</span>, <span class="number">0x85</span>, <span class="number">0xF3</span>, <span class="number">0xFE</span>, <span class="number">0x35</span>, <span class="number">0xCB</span>, <span class="number">0xB8</span>, <span class="number">0x02</span>, <span class="number">0x50</span>, <span class="number">0xB1</span>, <span class="number">0xF1</span>, <span class="number">0x1A</span>, <span class="number">0x1B</span>, <span class="number">0x21</span>, <span class="number">0xCD</span>, <span class="number">0xC4</span>, <span class="number">0x7E</span>, <span class="number">0xED</span>, <span class="number">0x07</span>, <span class="number">0xD9</span>, <span class="number">0xD6</span>, <span class="number">0x44</span>, <span class="number">0x15</span>, <span class="number">0x8E</span>, <span class="number">0x49</span>, <span class="number">0xB3</span>, <span class="number">0x97</span>, <span class="number">0xE6</span>, <span class="number">0x63</span>, <span class="number">0xB7</span>, <span class="number">0xEF</span>, <span class="number">0x3A</span>, <span class="number">0x8F</span>, <span class="number">0xF2</span>, <span class="number">0x53</span>, <span class="number">0x10</span>, <span class="number">0x77</span>, <span class="number">0x86</span>, <span class="number">0xF8</span>, <span class="number">0x8A</span>, <span class="number">0x28</span>, <span class="number">0x3F</span>, <span class="number">0xD4</span>, <span class="number">0x4C</span>, <span class="number">0xE5</span>, <span class="number">0x82</span>, <span class="number">0x83</span>, <span class="number">0xEC</span>, <span class="number">0x62</span>, <span class="number">0x89</span>, <span class="number">0xDF</span>, <span class="number">0xC3</span>, <span class="number">0x14</span>, <span class="number">0xCA</span>, <span class="number">0xA3</span>, <span class="number">0x5F</span>, <span class="number">0x64</span>, <span class="number">0x47</span>, <span class="number">0xFD</span>, <span class="number">0x00</span>, <span class="number">0x84</span>, <span class="number">0x66</span>, <span class="number">0xA7</span>, <span class="number">0x5A</span>, <span class="number">0x0C</span>, <span class="number">0x01</span>, <span class="number">0xD5</span>, <span class="number">0x5B</span>, <span class="number">0x0A</span>, <span class="number">0x4F</span>, <span class="number">0x27</span>, <span class="number">0x78</span>, <span class="number">0x0B</span>, <span class="number">0x2E</span>, <span class="number">0x48</span>, <span class="number">0x36</span>, <span class="number">0xFA</span>, <span class="number">0x08</span>, <span class="number">0x56</span>, <span class="number">0xE0</span>, <span class="number">0xA6</span>, <span class="number">0xC1</span>, <span class="number">0x5C</span>, <span class="number">0x8B</span>, <span class="number">0x41</span>, <span class="number">0x06</span>, <span class="number">0xBB</span>, <span class="number">0x52</span>, <span class="number">0x93</span>, <span class="number">0xAF</span>, <span class="number">0x2C</span>, <span class="number">0x5E</span>, <span class="number">0xF6</span>, <span class="number">0x61</span>, <span class="number">0xF0</span>, <span class="number">0xAB</span>, <span class="number">0x91</span>, <span class="number">0x45</span>, <span class="number">0x04</span>, <span class="number">0xBD</span>, <span class="number">0xCC</span>, <span class="number">0xE4</span>, <span class="number">0x65</span>, <span class="number">0x9D</span>, <span class="number">0x92</span>, <span class="number">0xCE</span>, <span class="number">0x40</span>, <span class="number">0xAE</span>, <span class="number">0x76</span>, <span class="number">0x9B</span>, <span class="number">0x9C</span>, <span class="number">0xAA</span>, <span class="number">0x54</span>, <span class="number">0xD0</span>, <span class="number">0x1C</span>, <span class="number">0x81</span>, <span class="number">0x4E</span>, <span class="number">0x57</span>, <span class="number">0x55</span>, <span class="number">0x23</span>, <span class="number">0x6E</span>, <span class="number">0x1E</span>, <span class="number">0x99</span>, <span class="number">0xDB</span>, <span class="number">0xFB</span>, <span class="number">0xA4</span>, <span class="number">0x22</span>, <span class="number">0x19</span>, <span class="number">0x58</span>, <span class="number">0x11</span>, <span class="number">0x8D</span>, <span class="number">0x94</span>, <span class="number">0xD3</span>, <span class="number">0xE2</span>, <span class="number">0x8C</span>, <span class="number">0xF5</span>, <span class="number">0x42</span>, <span class="number">0x46</span>, <span class="number">0xBC</span>, <span class="number">0x33</span>, <span class="number">0xE1</span>]</span><br><span class="line">byb80 = [<span class="number">0x38</span>, <span class="number">0xD9</span>, <span class="number">0xDA</span>, <span class="number">0xE6</span>, <span class="number">0xB5</span>, <span class="number">0xF1</span>, <span class="number">0x0B</span>, <span class="number">0x93</span>, <span class="number">0x0C</span>, <span class="number">0x58</span>, <span class="number">0x0D</span>, <span class="number">0xAE</span>, <span class="number">0x0A</span>, <span class="number">0x85</span>, <span class="number">0x2A</span>, <span class="number">0x50</span>, <span class="number">0xC2</span>, <span class="number">0xBF</span>, <span class="number">0xD4</span>, <span class="number">0x28</span>, <span class="number">0x52</span>, <span class="number">0xC4</span>, <span class="number">0x4F</span>, <span class="number">0xE1</span>, <span class="number">0x44</span>, <span class="number">0xE0</span>, <span class="number">0xA2</span>, <span class="number">0x70</span>, <span class="number">0x36</span>, <span class="number">0x65</span>, <span class="number">0x4B</span>, <span class="number">0x41</span>, <span class="number">0x9D</span>, <span class="number">0x5F</span>, <span class="number">0x05</span>, <span class="number">0x7C</span>, <span class="number">0xF7</span>, <span class="number">0xD7</span>, <span class="number">0x99</span>, <span class="number">0x8B</span>, <span class="number">0xCC</span>, <span class="number">0xCE</span>, <span class="number">0x16</span>, <span class="number">0xBE</span>, <span class="number">0xB6</span>, <span class="number">0xC5</span>, <span class="number">0x8F</span>, <span class="number">0x79</span>, <span class="number">0xC7</span>, <span class="number">0x20</span>, <span class="number">0x7E</span>, <span class="number">0xF4</span>, <span class="number">0xF3</span>, <span class="number">0x2E</span>, <span class="number">0x4A</span>, <span class="number">0x89</span>, <span class="number">0xD6</span>, <span class="number">0x0F</span>, <span class="number">0x6E</span>, <span class="number">0xB0</span>, <span class="number">0x61</span>, <span class="number">0xB1</span>, <span class="number">0x6D</span>, <span class="number">0x19</span>, <span class="number">0x73</span>, <span class="number">0x03</span>, <span class="number">0x74</span>, <span class="number">0xA1</span>, <span class="number">0x40</span>, <span class="number">0xEC</span>, <span class="number">0xC0</span>, <span class="number">0x57</span>, <span class="number">0x94</span>, <span class="number">0x7A</span>, <span class="number">0x66</span>, <span class="number">0xD5</span>, <span class="number">0xEA</span>, <span class="number">0x17</span>, <span class="number">0x6A</span>, <span class="number">0x84</span>, <span class="number">0x37</span>, <span class="number">0xED</span>, <span class="number">0xF6</span>, <span class="number">0x13</span>, <span class="number">0x31</span>, <span class="number">0x5B</span>, <span class="number">0x82</span>, <span class="number">0x1E</span>, <span class="number">0xFC</span>, <span class="number">0x92</span>, <span class="number">0xE2</span>, <span class="number">0x42</span>, <span class="number">0x86</span>, <span class="number">0xBA</span>, <span class="number">0xE3</span>, <span class="number">0x91</span>, <span class="number">0x7F</span>, <span class="number">0x67</span>, <span class="number">0x5C</span>, <span class="number">0x98</span>, <span class="number">0x15</span>, <span class="number">0x22</span>, <span class="number">0x8D</span>, <span class="number">0x80</span>, <span class="number">0x04</span>, <span class="number">0xE4</span>, <span class="number">0x25</span>, <span class="number">0x09</span>, <span class="number">0xA0</span>, <span class="number">0xAD</span>, <span class="number">0x63</span>, <span class="number">0xE5</span>, <span class="number">0xB4</span>, <span class="number">0x9A</span>, <span class="number">0x3C</span>, <span class="number">0xA3</span>, <span class="number">0x3A</span>, <span class="number">0x69</span>, <span class="number">0xF8</span>, <span class="number">0xCD</span>, <span class="number">0xBC</span>, <span class="number">0x88</span>, <span class="number">0x55</span>, <span class="number">0xB2</span>, <span class="number">0xBD</span>, <span class="number">0x6B</span>, <span class="number">0x77</span>, <span class="number">0x71</span>, <span class="number">0xB3</span>, <span class="number">0xD3</span>, <span class="number">0x90</span>, <span class="number">0x75</span>, <span class="number">0x06</span>, <span class="number">0x49</span>, <span class="number">0xC3</span>, <span class="number">0x32</span>, <span class="number">0x4D</span>, <span class="number">0x1D</span>, <span class="number">0xA8</span>, <span class="number">0xAA</span>, <span class="number">0xFB</span>, <span class="number">0x7B</span>, <span class="number">0x7D</span>, <span class="number">0x2B</span>, <span class="number">0xA6</span>, <span class="number">0x34</span>, <span class="number">0x72</span>, <span class="number">0x47</span>, <span class="number">0xF0</span>, <span class="number">0x2F</span>, <span class="number">0x9C</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x8C</span>, <span class="number">0x26</span>, <span class="number">0x5E</span>, <span class="number">0x87</span>, <span class="number">0xD1</span>, <span class="number">0xCF</span>, <span class="number">0xC9</span>, <span class="number">0x18</span>, <span class="number">0x51</span>, <span class="number">0x23</span>, <span class="number">0xCB</span>, <span class="number">0xF5</span>, <span class="number">0x1C</span>, <span class="number">0x9F</span>, <span class="number">0x97</span>, <span class="number">0xF9</span>, <span class="number">0xBB</span>, <span class="number">0xA7</span>, <span class="number">0x39</span>, <span class="number">0x45</span>, <span class="number">0x02</span>, <span class="number">0xFD</span>, <span class="number">0x46</span>, <span class="number">0x8A</span>, <span class="number">0x54</span>, <span class="number">0xA4</span>, <span class="number">0x8E</span>, <span class="number">0x9E</span>, <span class="number">0x68</span>, <span class="number">0x96</span>, <span class="number">0x0E</span>, <span class="number">0x78</span>, <span class="number">0xB8</span>, <span class="number">0x3D</span>, <span class="number">0x11</span>, <span class="number">0x64</span>, <span class="number">0xAF</span>, <span class="number">0x10</span>, <span class="number">0xDE</span>, <span class="number">0x6C</span>, <span class="number">0x60</span>, <span class="number">0x5A</span>, <span class="number">0x76</span>, <span class="number">0x1A</span>, <span class="number">0xE9</span>, <span class="number">0xC1</span>, <span class="number">0x3E</span>, <span class="number">0xCA</span>, <span class="number">0x9B</span>, <span class="number">0x27</span>, <span class="number">0x30</span>, <span class="number">0xEF</span>, <span class="number">0xFF</span>, <span class="number">0x07</span>, <span class="number">0xD2</span>, <span class="number">0xB9</span>, <span class="number">0x2D</span>, <span class="number">0xD0</span>, <span class="number">0xEE</span>, <span class="number">0x83</span>, <span class="number">0xAB</span>, <span class="number">0xF2</span>, <span class="number">0x4C</span>, <span class="number">0xA5</span>, <span class="number">0x21</span>, <span class="number">0x62</span>, <span class="number">0x81</span>, <span class="number">0x33</span>, <span class="number">0x1B</span>, <span class="number">0xD8</span>, <span class="number">0x6F</span>, <span class="number">0xAC</span>, <span class="number">0x3B</span>, <span class="number">0x5D</span>, <span class="number">0xE8</span>, <span class="number">0xFA</span>, <span class="number">0x3F</span>, <span class="number">0xDB</span>, <span class="number">0x95</span>, <span class="number">0xE7</span>, <span class="number">0x59</span>, <span class="number">0x12</span>, <span class="number">0x48</span>, <span class="number">0x35</span>, <span class="number">0xC6</span>, <span class="number">0x2C</span>, <span class="number">0x4E</span>, <span class="number">0x01</span>, <span class="number">0xDD</span>, <span class="number">0x43</span>, <span class="number">0x29</span>, <span class="number">0xDC</span>, <span class="number">0x24</span>, <span class="number">0x1F</span>, <span class="number">0xB7</span>, <span class="number">0xA9</span>, <span class="number">0xEB</span>, <span class="number">0xC8</span>, <span class="number">0xFE</span>, <span class="number">0x56</span>, <span class="number">0xDF</span>, <span class="number">0x53</span>]</span><br><span class="line">byd80 = [<span class="number">0xB0</span>, <span class="number">0x28</span>, <span class="number">0x0B</span>, <span class="number">0x89</span>, <span class="number">0x4B</span>, <span class="number">0xA4</span>, <span class="number">0xBE</span>, <span class="number">0x1A</span>, <span class="number">0x8F</span>, <span class="number">0x6C</span>, <span class="number">0xCF</span>, <span class="number">0xB2</span>, <span class="number">0xB5</span>, <span class="number">0xFE</span>, <span class="number">0xFB</span>, <span class="number">0x59</span>, <span class="number">0x2D</span>, <span class="number">0x29</span>, <span class="number">0x39</span>, <span class="number">0x62</span>, <span class="number">0x97</span>, <span class="number">0xAA</span>, <span class="number">0xD7</span>, <span class="number">0x7D</span>, <span class="number">0x94</span>, <span class="number">0x2C</span>, <span class="number">0xFC</span>, <span class="number">0x5D</span>, <span class="number">0xB4</span>, <span class="number">0x7C</span>, <span class="number">0x8A</span>, <span class="number">0x82</span>, <span class="number">0xD3</span>, <span class="number">0xA7</span>, <span class="number">0xBA</span>, <span class="number">0xDF</span>, <span class="number">0x21</span>, <span class="number">0xE6</span>, <span class="number">0xA2</span>, <span class="number">0xD0</span>, <span class="number">0xE8</span>, <span class="number">0xF0</span>, <span class="number">0x67</span>, <span class="number">0x3A</span>, <span class="number">0xB9</span>, <span class="number">0x98</span>, <span class="number">0xF9</span>, <span class="number">0xAE</span>, <span class="number">0xD1</span>, <span class="number">0x56</span>, <span class="number">0xD8</span>, <span class="number">0xCA</span>, <span class="number">0x10</span>, <span class="number">0xEA</span>, <span class="number">0x92</span>, <span class="number">0xA8</span>, <span class="number">0x75</span>, <span class="number">0x7E</span>, <span class="number">0x65</span>, <span class="number">0xA9</span>, <span class="number">0xAF</span>, <span class="number">0x51</span>, <span class="number">0xC9</span>, <span class="number">0x8E</span>, <span class="number">0xD4</span>, <span class="number">0x77</span>, <span class="number">0xE4</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x61</span>, <span class="number">0x9E</span>, <span class="number">0x24</span>, <span class="number">0xD9</span>, <span class="number">0x9B</span>, <span class="number">0x11</span>, <span class="number">0x05</span>, <span class="number">0x1D</span>, <span class="number">0x96</span>, <span class="number">0x9A</span>, <span class="number">0xB1</span>, <span class="number">0xE0</span>, <span class="number">0x83</span>, <span class="number">0xE1</span>, <span class="number">0x1C</span>, <span class="number">0xCD</span>, <span class="number">0xF3</span>, <span class="number">0x38</span>, <span class="number">0xB3</span>, <span class="number">0x57</span>, <span class="number">0x50</span>, <span class="number">0xF4</span>, <span class="number">0xAC</span>, <span class="number">0xEB</span>, <span class="number">0x14</span>, <span class="number">0xA5</span>, <span class="number">0x46</span>, <span class="number">0xF6</span>, <span class="number">0x93</span>, <span class="number">0xAD</span>, <span class="number">0x7B</span>, <span class="number">0x30</span>, <span class="number">0xEF</span>, <span class="number">0x79</span>, <span class="number">0x17</span>, <span class="number">0x47</span>, <span class="number">0xDA</span>, <span class="number">0xC0</span>, <span class="number">0xDD</span>, <span class="number">0xDE</span>, <span class="number">0xDC</span>, <span class="number">0x5A</span>, <span class="number">0x76</span>, <span class="number">0x3B</span>, <span class="number">0x31</span>, <span class="number">0x0D</span>, <span class="number">0x0E</span>, <span class="number">0x86</span>, <span class="number">0xF1</span>, <span class="number">0x71</span>, <span class="number">0xFA</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0xA3</span>, <span class="number">0xBF</span>, <span class="number">0x64</span>, <span class="number">0x37</span>, <span class="number">0x22</span>, <span class="number">0xD2</span>, <span class="number">0x69</span>, <span class="number">0x5C</span>, <span class="number">0xC6</span>, <span class="number">0x16</span>, <span class="number">0x9F</span>, <span class="number">0x5E</span>, <span class="number">0x7A</span>, <span class="number">0x1E</span>, <span class="number">0x27</span>, <span class="number">0x60</span>, <span class="number">0x6E</span>, <span class="number">0xF8</span>, <span class="number">0x8C</span>, <span class="number">0xEE</span>, <span class="number">0xC2</span>, <span class="number">0x74</span>, <span class="number">0x81</span>, <span class="number">0x8B</span>, <span class="number">0x33</span>, <span class="number">0x03</span>, <span class="number">0xBD</span>, <span class="number">0x2A</span>, <span class="number">0x0A</span>, <span class="number">0x68</span>, <span class="number">0x6B</span>, <span class="number">0x3F</span>, <span class="number">0x4C</span>, <span class="number">0xC3</span>, <span class="number">0x15</span>, <span class="number">0x04</span>, <span class="number">0x3D</span>, <span class="number">0x63</span>, <span class="number">0xF5</span>, <span class="number">0xAB</span>, <span class="number">0xCC</span>, <span class="number">0x3C</span>, <span class="number">0x53</span>, <span class="number">0x20</span>, <span class="number">0x66</span>, <span class="number">0xC4</span>, <span class="number">0xC1</span>, <span class="number">0x23</span>, <span class="number">0xE7</span>, <span class="number">0x25</span>, <span class="number">0x55</span>, <span class="number">0xC7</span>, <span class="number">0xED</span>, <span class="number">0xB7</span>, <span class="number">0xBC</span>, <span class="number">0xCB</span>, <span class="number">0x8D</span>, <span class="number">0x09</span>, <span class="number">0xCE</span>, <span class="number">0x52</span>, <span class="number">0xBB</span>, <span class="number">0xE2</span>, <span class="number">0xC5</span>, <span class="number">0xB6</span>, <span class="number">0x26</span>, <span class="number">0x12</span>, <span class="number">0x2F</span>, <span class="number">0x99</span>, <span class="number">0x58</span>, <span class="number">0x40</span>, <span class="number">0x6D</span>, <span class="number">0xA1</span>, <span class="number">0x3E</span>, <span class="number">0x48</span>, <span class="number">0x85</span>, <span class="number">0xA6</span>, <span class="number">0xF2</span>, <span class="number">0x0F</span>, <span class="number">0x43</span>, <span class="number">0x78</span>, <span class="number">0xB8</span>, <span class="number">0x01</span>, <span class="number">0xE5</span>, <span class="number">0xD5</span>, <span class="number">0x6F</span>, <span class="number">0x4E</span>, <span class="number">0xF7</span>, <span class="number">0x13</span>, <span class="number">0x42</span>, <span class="number">0xEC</span>, <span class="number">0x45</span>, <span class="number">0x2B</span>, <span class="number">0x4F</span>, <span class="number">0x36</span>, <span class="number">0xDB</span>, <span class="number">0x9C</span>, <span class="number">0xE3</span>, <span class="number">0x44</span>, <span class="number">0x34</span>, <span class="number">0x84</span>, <span class="number">0x73</span>, <span class="number">0x2E</span>, <span class="number">0x7F</span>, <span class="number">0xFD</span>, <span class="number">0x91</span>, <span class="number">0x41</span>, <span class="number">0xD6</span>, <span class="number">0x95</span>, <span class="number">0x18</span>, <span class="number">0xFF</span>, <span class="number">0x70</span>, <span class="number">0xC8</span>, <span class="number">0x02</span>, <span class="number">0x5F</span>, <span class="number">0x08</span>, <span class="number">0x1B</span>, <span class="number">0x6A</span>, <span class="number">0x5B</span>, <span class="number">0x19</span>, <span class="number">0xA0</span>, <span class="number">0x4D</span>, <span class="number">0x35</span>, <span class="number">0x54</span>, <span class="number">0xE9</span>, <span class="number">0x32</span>, <span class="number">0x88</span>, <span class="number">0x72</span>, <span class="number">0x07</span>, <span class="number">0x87</span>, <span class="number">0x90</span>, <span class="number">0x4A</span>, <span class="number">0x80</span>, <span class="number">0x1F</span>, <span class="number">0x9D</span>]</span><br><span class="line">by1180 = [<span class="number">0xE8</span>, <span class="number">0x22</span>, <span class="number">0x64</span>, <span class="number">0x9F</span>, <span class="number">0xC5</span>, <span class="number">0xD5</span>, <span class="number">0x25</span>, <span class="number">0xC9</span>, <span class="number">0x5D</span>, <span class="number">0xDF</span>, <span class="number">0xA1</span>, <span class="number">0x74</span>, <span class="number">0xCB</span>, <span class="number">0x57</span>, <span class="number">0xF7</span>, <span class="number">0xF0</span>, <span class="number">0xBD</span>, <span class="number">0x56</span>, <span class="number">0xFF</span>, <span class="number">0x33</span>, <span class="number">0x79</span>, <span class="number">0xFE</span>, <span class="number">0x87</span>, <span class="number">0xB6</span>, <span class="number">0xB1</span>, <span class="number">0x54</span>, <span class="number">0x10</span>, <span class="number">0x95</span>, <span class="number">0x8A</span>, <span class="number">0xEC</span>, <span class="number">0x7B</span>, <span class="number">0x48</span>, <span class="number">0x84</span>, <span class="number">0x3D</span>, <span class="number">0x30</span>, <span class="number">0xEF</span>, <span class="number">0x86</span>, <span class="number">0xFA</span>, <span class="number">0x97</span>, <span class="number">0x1C</span>, <span class="number">0xDC</span>, <span class="number">0xA9</span>, <span class="number">0x5A</span>, <span class="number">0xF3</span>, <span class="number">0x67</span>, <span class="number">0x18</span>, <span class="number">0x83</span>, <span class="number">0x72</span>, <span class="number">0x06</span>, <span class="number">0xB9</span>, <span class="number">0xF5</span>, <span class="number">0x05</span>, <span class="number">0x68</span>, <span class="number">0x59</span>, <span class="number">0xF2</span>, <span class="number">0xE4</span>, <span class="number">0x88</span>, <span class="number">0x5E</span>, <span class="number">0x14</span>, <span class="number">0x17</span>, <span class="number">0x11</span>, <span class="number">0x9C</span>, <span class="number">0xAB</span>, <span class="number">0xDE</span>, <span class="number">0xEB</span>, <span class="number">0x7D</span>, <span class="number">0x62</span>, <span class="number">0x9B</span>, <span class="number">0xD6</span>, <span class="number">0xF4</span>, <span class="number">0x01</span>, <span class="number">0x29</span>, <span class="number">0xBC</span>, <span class="number">0xC0</span>, <span class="number">0x69</span>, <span class="number">0xA2</span>, <span class="number">0x2B</span>, <span class="number">0x0D</span>, <span class="number">0x1D</span>, <span class="number">0x98</span>, <span class="number">0x6A</span>, <span class="number">0xBE</span>, <span class="number">0x65</span>, <span class="number">0x09</span>, <span class="number">0xF8</span>, <span class="number">0x96</span>, <span class="number">0xB4</span>, <span class="number">0x6E</span>, <span class="number">0x63</span>, <span class="number">0xE3</span>, <span class="number">0x34</span>, <span class="number">0x2D</span>, <span class="number">0xCE</span>, <span class="number">0x0A</span>, <span class="number">0xCD</span>, <span class="number">0xAA</span>, <span class="number">0x21</span>, <span class="number">0xCC</span>, <span class="number">0xE7</span>, <span class="number">0xA5</span>, <span class="number">0xDB</span>, <span class="number">0xD8</span>, <span class="number">0x03</span>, <span class="number">0xDD</span>, <span class="number">0xB2</span>, <span class="number">0x1F</span>, <span class="number">0x9D</span>, <span class="number">0x9E</span>, <span class="number">0x0E</span>, <span class="number">0x8F</span>, <span class="number">0x8B</span>, <span class="number">0xCA</span>, <span class="number">0x92</span>, <span class="number">0x0B</span>, <span class="number">0xA7</span>, <span class="number">0x5B</span>, <span class="number">0xD2</span>, <span class="number">0xCF</span>, <span class="number">0x47</span>, <span class="number">0x07</span>, <span class="number">0x04</span>, <span class="number">0xAE</span>, <span class="number">0x3B</span>, <span class="number">0xA8</span>, <span class="number">0x7C</span>, <span class="number">0x73</span>, <span class="number">0xF9</span>, <span class="number">0x35</span>, <span class="number">0xEE</span>, <span class="number">0x7A</span>, <span class="number">0xB0</span>, <span class="number">0xBA</span>, <span class="number">0x85</span>, <span class="number">0x46</span>, <span class="number">0x3E</span>, <span class="number">0x81</span>, <span class="number">0xC7</span>, <span class="number">0x40</span>, <span class="number">0x37</span>, <span class="number">0x15</span>, <span class="number">0x3A</span>, <span class="number">0x19</span>, <span class="number">0xE0</span>, <span class="number">0x1E</span>, <span class="number">0x28</span>, <span class="number">0x4A</span>, <span class="number">0x4F</span>, <span class="number">0x8C</span>, <span class="number">0xD4</span>, <span class="number">0x51</span>, <span class="number">0x2E</span>, <span class="number">0x94</span>, <span class="number">0x89</span>, <span class="number">0x2A</span>, <span class="number">0x0F</span>, <span class="number">0x7E</span>, <span class="number">0xE1</span>, <span class="number">0xC8</span>, <span class="number">0x5F</span>, <span class="number">0x4E</span>, <span class="number">0x6D</span>, <span class="number">0xF6</span>, <span class="number">0x49</span>, <span class="number">0xB8</span>, <span class="number">0x55</span>, <span class="number">0x60</span>, <span class="number">0x82</span>, <span class="number">0x20</span>, <span class="number">0x36</span>, <span class="number">0xC1</span>, <span class="number">0x0C</span>, <span class="number">0x1B</span>, <span class="number">0xC4</span>, <span class="number">0x00</span>, <span class="number">0xE5</span>, <span class="number">0xA3</span>, <span class="number">0x2C</span>, <span class="number">0xE9</span>, <span class="number">0xC2</span>, <span class="number">0xF1</span>, <span class="number">0x23</span>, <span class="number">0x3F</span>, <span class="number">0xC3</span>, <span class="number">0xB5</span>, <span class="number">0x8D</span>, <span class="number">0xD7</span>, <span class="number">0x42</span>, <span class="number">0xFC</span>, <span class="number">0x50</span>, <span class="number">0x13</span>, <span class="number">0xBB</span>, <span class="number">0x61</span>, <span class="number">0x9A</span>, <span class="number">0x44</span>, <span class="number">0xE6</span>, <span class="number">0x91</span>, <span class="number">0x2F</span>, <span class="number">0x70</span>, <span class="number">0xC6</span>, <span class="number">0x6F</span>, <span class="number">0xD1</span>, <span class="number">0x27</span>, <span class="number">0x43</span>, <span class="number">0x08</span>, <span class="number">0xDA</span>, <span class="number">0xFD</span>, <span class="number">0x52</span>, <span class="number">0x71</span>, <span class="number">0x77</span>, <span class="number">0xED</span>, <span class="number">0xE2</span>, <span class="number">0xAD</span>, <span class="number">0x16</span>, <span class="number">0x8E</span>, <span class="number">0x12</span>, <span class="number">0x4C</span>, <span class="number">0x31</span>, <span class="number">0x3C</span>, <span class="number">0x39</span>, <span class="number">0x78</span>, <span class="number">0x90</span>, <span class="number">0xBF</span>, <span class="number">0x1A</span>, <span class="number">0x76</span>, <span class="number">0x75</span>, <span class="number">0x41</span>, <span class="number">0x99</span>, <span class="number">0xD0</span>, <span class="number">0x80</span>, <span class="number">0xB7</span>, <span class="number">0x66</span>, <span class="number">0x24</span>, <span class="number">0xD3</span>, <span class="number">0x7F</span>, <span class="number">0x4B</span>, <span class="number">0x45</span>, <span class="number">0x5C</span>, <span class="number">0x53</span>, <span class="number">0x4D</span>, <span class="number">0x26</span>, <span class="number">0x32</span>, <span class="number">0xA0</span>, <span class="number">0xFB</span>, <span class="number">0xB3</span>, <span class="number">0x38</span>, <span class="number">0x6B</span>, <span class="number">0xAF</span>, <span class="number">0xA6</span>, <span class="number">0xD9</span>, <span class="number">0x02</span>, <span class="number">0xA4</span>, <span class="number">0xEA</span>, <span class="number">0x6C</span>, <span class="number">0xAC</span>, <span class="number">0x58</span>, <span class="number">0x93</span>]</span><br><span class="line">by1380 = [<span class="number">0x91</span>, <span class="number">0x67</span>, <span class="number">0x1A</span>, <span class="number">0xBE</span>, <span class="number">0xAB</span>, <span class="number">0xC2</span>, <span class="number">0x85</span>, <span class="number">0xD5</span>, <span class="number">0xDA</span>, <span class="number">0xCC</span>, <span class="number">0xF7</span>, <span class="number">0x5B</span>, <span class="number">0x54</span>, <span class="number">0x61</span>, <span class="number">0x05</span>, <span class="number">0xDF</span>, <span class="number">0x02</span>, <span class="number">0x70</span>, <span class="number">0x65</span>, <span class="number">0x69</span>, <span class="number">0x9A</span>, <span class="number">0x7A</span>, <span class="number">0x09</span>, <span class="number">0x92</span>, <span class="number">0x5D</span>, <span class="number">0x2A</span>, <span class="number">0xA7</span>, <span class="number">0x37</span>, <span class="number">0xFF</span>, <span class="number">0x19</span>, <span class="number">0xE6</span>, <span class="number">0x99</span>, <span class="number">0xF3</span>, <span class="number">0x1E</span>, <span class="number">0xBD</span>, <span class="number">0x82</span>, <span class="number">0x48</span>, <span class="number">0x3C</span>, <span class="number">0xE8</span>, <span class="number">0xC8</span>, <span class="number">0x66</span>, <span class="number">0x17</span>, <span class="number">0xB7</span>, <span class="number">0xA9</span>, <span class="number">0xC5</span>, <span class="number">0x4E</span>, <span class="number">0x33</span>, <span class="number">0x84</span>, <span class="number">0x45</span>, <span class="number">0xD3</span>, <span class="number">0x8B</span>, <span class="number">0x49</span>, <span class="number">0x50</span>, <span class="number">0x43</span>, <span class="number">0x8F</span>, <span class="number">0xCD</span>, <span class="number">0x73</span>, <span class="number">0x29</span>, <span class="number">0x04</span>, <span class="number">0xDC</span>, <span class="number">0x01</span>, <span class="number">0x0C</span>, <span class="number">0xDD</span>, <span class="number">0x2E</span>, <span class="number">0xFB</span>, <span class="number">0x6E</span>, <span class="number">0x0F</span>, <span class="number">0x24</span>, <span class="number">0x57</span>, <span class="number">0xE9</span>, <span class="number">0xC9</span>, <span class="number">0x7D</span>, <span class="number">0xB3</span>, <span class="number">0x40</span>, <span class="number">0x4B</span>, <span class="number">0x56</span>, <span class="number">0x6C</span>, <span class="number">0x68</span>, <span class="number">0xE2</span>, <span class="number">0x22</span>, <span class="number">0xF6</span>, <span class="number">0x80</span>, <span class="number">0xAA</span>, <span class="number">0x95</span>, <span class="number">0xD4</span>, <span class="number">0x97</span>, <span class="number">0x94</span>, <span class="number">0x21</span>, <span class="number">0x53</span>, <span class="number">0xD1</span>, <span class="number">0xE3</span>, <span class="number">0x59</span>, <span class="number">0xD2</span>, <span class="number">0xED</span>, <span class="number">0x41</span>, <span class="number">0x4D</span>, <span class="number">0x74</span>, <span class="number">0xA3</span>, <span class="number">0xA0</span>, <span class="number">0x32</span>, <span class="number">0x0D</span>, <span class="number">0xFC</span>, <span class="number">0x46</span>, <span class="number">0x34</span>, <span class="number">0xFA</span>, <span class="number">0xB1</span>, <span class="number">0x5E</span>, <span class="number">0xC6</span>, <span class="number">0x71</span>, <span class="number">0xC0</span>, <span class="number">0xE0</span>, <span class="number">0x3F</span>, <span class="number">0x13</span>, <span class="number">0x12</span>, <span class="number">0xD7</span>, <span class="number">0xEE</span>, <span class="number">0xF8</span>, <span class="number">0x26</span>, <span class="number">0xE1</span>, <span class="number">0x25</span>, <span class="number">0x88</span>, <span class="number">0x77</span>, <span class="number">0xB0</span>, <span class="number">0x8D</span>, <span class="number">0x6A</span>, <span class="number">0xEA</span>, <span class="number">0x0E</span>, <span class="number">0xD6</span>, <span class="number">0x3E</span>, <span class="number">0x03</span>, <span class="number">0x64</span>, <span class="number">0xBF</span>, <span class="number">0x8C</span>, <span class="number">0x96</span>, <span class="number">0xD9</span>, <span class="number">0xA4</span>, <span class="number">0x42</span>, <span class="number">0xAD</span>, <span class="number">0xFD</span>, <span class="number">0x16</span>, <span class="number">0x5A</span>, <span class="number">0xE4</span>, <span class="number">0x06</span>, <span class="number">0x9D</span>, <span class="number">0x07</span>, <span class="number">0x87</span>, <span class="number">0x5F</span>, <span class="number">0xAF</span>, <span class="number">0xDB</span>, <span class="number">0xC1</span>, <span class="number">0x93</span>, <span class="number">0x1C</span>, <span class="number">0xF1</span>, <span class="number">0xDE</span>, <span class="number">0xA6</span>, <span class="number">0x3A</span>, <span class="number">0xF4</span>, <span class="number">0x2C</span>, <span class="number">0x1B</span>, <span class="number">0x39</span>, <span class="number">0xE7</span>, <span class="number">0x4A</span>, <span class="number">0xC7</span>, <span class="number">0x35</span>, <span class="number">0xFE</span>, <span class="number">0x0A</span>, <span class="number">0x62</span>, <span class="number">0xF0</span>, <span class="number">0xCA</span>, <span class="number">0xEC</span>, <span class="number">0x27</span>, <span class="number">0x52</span>, <span class="number">0x23</span>, <span class="number">0x7F</span>, <span class="number">0xA5</span>, <span class="number">0x79</span>, <span class="number">0x7C</span>, <span class="number">0x75</span>, <span class="number">0x86</span>, <span class="number">0xEB</span>, <span class="number">0x60</span>, <span class="number">0xA8</span>, <span class="number">0xF5</span>, <span class="number">0x1F</span>, <span class="number">0x20</span>, <span class="number">0xC3</span>, <span class="number">0x63</span>, <span class="number">0x5C</span>, <span class="number">0x72</span>, <span class="number">0x18</span>, <span class="number">0xE5</span>, <span class="number">0x51</span>, <span class="number">0xAC</span>, <span class="number">0xB9</span>, <span class="number">0x90</span>, <span class="number">0x9F</span>, <span class="number">0x4C</span>, <span class="number">0xB2</span>, <span class="number">0xCB</span>, <span class="number">0x00</span>, <span class="number">0x6F</span>, <span class="number">0x28</span>, <span class="number">0xA1</span>, <span class="number">0xB6</span>, <span class="number">0x9B</span>, <span class="number">0xD0</span>, <span class="number">0x7B</span>, <span class="number">0x36</span>, <span class="number">0x4F</span>, <span class="number">0x9C</span>, <span class="number">0xCF</span>, <span class="number">0x98</span>, <span class="number">0x8A</span>, <span class="number">0x0B</span>, <span class="number">0x78</span>, <span class="number">0xB4</span>, <span class="number">0x7E</span>, <span class="number">0x2B</span>, <span class="number">0xEF</span>, <span class="number">0x58</span>, <span class="number">0xB5</span>, <span class="number">0xBA</span>, <span class="number">0x55</span>, <span class="number">0xB8</span>, <span class="number">0x10</span>, <span class="number">0x2F</span>, <span class="number">0x44</span>, <span class="number">0xAE</span>, <span class="number">0x89</span>, <span class="number">0x08</span>, <span class="number">0xC4</span>, <span class="number">0x3B</span>, <span class="number">0x9E</span>, <span class="number">0xF9</span>, <span class="number">0x6D</span>, <span class="number">0xF2</span>, <span class="number">0x15</span>, <span class="number">0x1D</span>, <span class="number">0x30</span>, <span class="number">0x47</span>, <span class="number">0x8E</span>, <span class="number">0x31</span>, <span class="number">0x2D</span>, <span class="number">0xD8</span>, <span class="number">0x6B</span>, <span class="number">0x3D</span>, <span class="number">0x11</span>, <span class="number">0x14</span>, <span class="number">0xA2</span>, <span class="number">0x83</span>, <span class="number">0xCE</span>, <span class="number">0xBB</span>, <span class="number">0x81</span>, <span class="number">0xBC</span>, <span class="number">0x76</span>, <span class="number">0x38</span>]</span><br><span class="line">by1780 = [<span class="number">0x38</span>, <span class="number">0x5A</span>, <span class="number">0xC7</span>, <span class="number">0x98</span>, <span class="number">0x15</span>, <span class="number">0x6A</span>, <span class="number">0xC9</span>, <span class="number">0x28</span>, <span class="number">0x33</span>, <span class="number">0xEA</span>, <span class="number">0xF4</span>, <span class="number">0xD9</span>, <span class="number">0xDB</span>, <span class="number">0x77</span>, <span class="number">0xB8</span>, <span class="number">0x49</span>, <span class="number">0x1B</span>, <span class="number">0x79</span>, <span class="number">0xF5</span>, <span class="number">0xFD</span>, <span class="number">0x3E</span>, <span class="number">0xA2</span>, <span class="number">0xDE</span>, <span class="number">0x17</span>, <span class="number">0xC4</span>, <span class="number">0x5E</span>, <span class="number">0xE5</span>, <span class="number">0x11</span>, <span class="number">0xB6</span>, <span class="number">0x1D</span>, <span class="number">0x86</span>, <span class="number">0xF9</span>, <span class="number">0x90</span>, <span class="number">0x78</span>, <span class="number">0x8A</span>, <span class="number">0x14</span>, <span class="number">0x12</span>, <span class="number">0xB1</span>, <span class="number">0xC2</span>, <span class="number">0x21</span>, <span class="number">0xF1</span>, <span class="number">0x02</span>, <span class="number">0x58</span>, <span class="number">0xA1</span>, <span class="number">0x23</span>, <span class="number">0x0C</span>, <span class="number">0xAD</span>, <span class="number">0xA5</span>, <span class="number">0x50</span>, <span class="number">0x48</span>, <span class="number">0x1E</span>, <span class="number">0x6D</span>, <span class="number">0xF8</span>, <span class="number">0x96</span>, <span class="number">0x9D</span>, <span class="number">0x19</span>, <span class="number">0x00</span>, <span class="number">0xBD</span>, <span class="number">0x26</span>, <span class="number">0xCE</span>, <span class="number">0xA7</span>, <span class="number">0x24</span>, <span class="number">0x2E</span>, <span class="number">0x39</span>, <span class="number">0x7B</span>, <span class="number">0xFA</span>, <span class="number">0x5F</span>, <span class="number">0xCC</span>, <span class="number">0x1A</span>, <span class="number">0x0B</span>, <span class="number">0x40</span>, <span class="number">0x0F</span>, <span class="number">0x4B</span>, <span class="number">0x82</span>, <span class="number">0xE2</span>, <span class="number">0x97</span>, <span class="number">0x10</span>, <span class="number">0x2A</span>, <span class="number">0xFC</span>, <span class="number">0x3B</span>, <span class="number">0xB2</span>, <span class="number">0x66</span>, <span class="number">0x27</span>, <span class="number">0x54</span>, <span class="number">0x07</span>, <span class="number">0xE3</span>, <span class="number">0x08</span>, <span class="number">0xA3</span>, <span class="number">0xA6</span>, <span class="number">0xED</span>, <span class="number">0x62</span>, <span class="number">0x13</span>, <span class="number">0x9C</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0x92</span>, <span class="number">0xE8</span>, <span class="number">0xAE</span>, <span class="number">0xBE</span>, <span class="number">0xE1</span>, <span class="number">0x0A</span>, <span class="number">0x41</span>, <span class="number">0x94</span>, <span class="number">0x80</span>, <span class="number">0xA9</span>, <span class="number">0x2F</span>, <span class="number">0x29</span>, <span class="number">0x70</span>, <span class="number">0x35</span>, <span class="number">0x16</span>, <span class="number">0xF7</span>, <span class="number">0x6B</span>, <span class="number">0xFE</span>, <span class="number">0x9E</span>, <span class="number">0x0D</span>, <span class="number">0xD3</span>, <span class="number">0x7F</span>, <span class="number">0x1F</span>, <span class="number">0xA0</span>, <span class="number">0x32</span>, <span class="number">0xD2</span>, <span class="number">0x52</span>, <span class="number">0x05</span>, <span class="number">0x76</span>, <span class="number">0x89</span>, <span class="number">0x9B</span>, <span class="number">0x7A</span>, <span class="number">0x8F</span>, <span class="number">0x99</span>, <span class="number">0xEF</span>, <span class="number">0xCF</span>, <span class="number">0x51</span>, <span class="number">0x0E</span>, <span class="number">0xEC</span>, <span class="number">0x59</span>, <span class="number">0x5C</span>, <span class="number">0x37</span>, <span class="number">0xD5</span>, <span class="number">0x8E</span>, <span class="number">0x31</span>, <span class="number">0x34</span>, <span class="number">0x2D</span>, <span class="number">0x93</span>, <span class="number">0x25</span>, <span class="number">0x1C</span>, <span class="number">0xC8</span>, <span class="number">0x5B</span>, <span class="number">0x47</span>, <span class="number">0x9F</span>, <span class="number">0x03</span>, <span class="number">0x67</span>, <span class="number">0x7E</span>, <span class="number">0x42</span>, <span class="number">0x7D</span>, <span class="number">0x3A</span>, <span class="number">0xAA</span>, <span class="number">0x57</span>, <span class="number">0xDA</span>, <span class="number">0x9A</span>, <span class="number">0xAB</span>, <span class="number">0x74</span>, <span class="number">0x72</span>, <span class="number">0xE4</span>, <span class="number">0xB7</span>, <span class="number">0x5D</span>, <span class="number">0xCD</span>, <span class="number">0x87</span>, <span class="number">0x46</span>, <span class="number">0x2B</span>, <span class="number">0x43</span>, <span class="number">0xF3</span>, <span class="number">0xD0</span>, <span class="number">0x85</span>, <span class="number">0x55</span>, <span class="number">0xBB</span>, <span class="number">0xD4</span>, <span class="number">0xC6</span>, <span class="number">0x61</span>, <span class="number">0x56</span>, <span class="number">0x04</span>, <span class="number">0x65</span>, <span class="number">0x7C</span>, <span class="number">0x88</span>, <span class="number">0xC3</span>, <span class="number">0x73</span>, <span class="number">0xBC</span>, <span class="number">0xEB</span>, <span class="number">0xDD</span>, <span class="number">0x4D</span>, <span class="number">0xE0</span>, <span class="number">0xE6</span>, <span class="number">0xC0</span>, <span class="number">0x63</span>, <span class="number">0x8D</span>, <span class="number">0xF2</span>, <span class="number">0x81</span>, <span class="number">0xF6</span>, <span class="number">0xA8</span>, <span class="number">0x3D</span>, <span class="number">0x3F</span>, <span class="number">0xA4</span>, <span class="number">0xE9</span>, <span class="number">0x4A</span>, <span class="number">0xB5</span>, <span class="number">0xF0</span>, <span class="number">0xCA</span>, <span class="number">0x8B</span>, <span class="number">0x2C</span>, <span class="number">0xD7</span>, <span class="number">0xAC</span>, <span class="number">0xC5</span>, <span class="number">0xC1</span>, <span class="number">0xBF</span>, <span class="number">0x53</span>, <span class="number">0xD1</span>, <span class="number">0x6F</span>, <span class="number">0x06</span>, <span class="number">0xE7</span>, <span class="number">0xD6</span>, <span class="number">0x09</span>, <span class="number">0x95</span>, <span class="number">0x44</span>, <span class="number">0x71</span>, <span class="number">0xB9</span>, <span class="number">0x83</span>, <span class="number">0x4C</span>, <span class="number">0x22</span>, <span class="number">0xAF</span>, <span class="number">0xB4</span>, <span class="number">0x75</span>, <span class="number">0x36</span>, <span class="number">0x30</span>, <span class="number">0xCB</span>, <span class="number">0xEE</span>, <span class="number">0x91</span>, <span class="number">0x45</span>, <span class="number">0x8C</span>, <span class="number">0x4E</span>, <span class="number">0x6E</span>, <span class="number">0x6C</span>, <span class="number">0x4F</span>, <span class="number">0x84</span>, <span class="number">0xBA</span>, <span class="number">0xFF</span>, <span class="number">0x64</span>, <span class="number">0xB3</span>, <span class="number">0x60</span>, <span class="number">0xFB</span>, <span class="number">0xB0</span>, <span class="number">0x18</span>, <span class="number">0xD8</span>, <span class="number">0xDF</span>, <span class="number">0x3C</span>, <span class="number">0x68</span>, <span class="number">0xDC</span>, <span class="number">0x69</span>]</span><br><span class="line">by1d80 = [<span class="number">0xD1</span>, <span class="number">0x9C</span>, <span class="number">0x68</span>, <span class="number">0xC0</span>, <span class="number">0x13</span>, <span class="number">0xAC</span>, <span class="number">0x48</span>, <span class="number">0x32</span>, <span class="number">0xA3</span>, <span class="number">0xBA</span>, <span class="number">0x4C</span>, <span class="number">0xE7</span>, <span class="number">0x6D</span>, <span class="number">0xC8</span>, <span class="number">0x1C</span>, <span class="number">0xAB</span>, <span class="number">0xE2</span>, <span class="number">0x7A</span>, <span class="number">0x42</span>, <span class="number">0xE1</span>, <span class="number">0x7B</span>, <span class="number">0x16</span>, <span class="number">0x67</span>, <span class="number">0x03</span>, <span class="number">0xAE</span>, <span class="number">0x7E</span>, <span class="number">0xAA</span>, <span class="number">0x38</span>, <span class="number">0x22</span>, <span class="number">0x02</span>, <span class="number">0x39</span>, <span class="number">0x51</span>, <span class="number">0xC7</span>, <span class="number">0x79</span>, <span class="number">0xD7</span>, <span class="number">0xCB</span>, <span class="number">0xEF</span>, <span class="number">0x62</span>, <span class="number">0x98</span>, <span class="number">0xDC</span>, <span class="number">0x53</span>, <span class="number">0x72</span>, <span class="number">0x89</span>, <span class="number">0xA5</span>, <span class="number">0x4B</span>, <span class="number">0xC6</span>, <span class="number">0x86</span>, <span class="number">0xF6</span>, <span class="number">0xFC</span>, <span class="number">0x77</span>, <span class="number">0x5A</span>, <span class="number">0xF5</span>, <span class="number">0x2E</span>, <span class="number">0x3D</span>, <span class="number">0xB2</span>, <span class="number">0xFE</span>, <span class="number">0x59</span>, <span class="number">0x27</span>, <span class="number">0x80</span>, <span class="number">0x63</span>, <span class="number">0xDD</span>, <span class="number">0x1A</span>, <span class="number">0x12</span>, <span class="number">0x5E</span>, <span class="number">0xED</span>, <span class="number">0xB0</span>, <span class="number">0xBC</span>, <span class="number">0xC4</span>, <span class="number">0x5F</span>, <span class="number">0x11</span>, <span class="number">0xC9</span>, <span class="number">0x09</span>, <span class="number">0xC5</span>, <span class="number">0x75</span>, <span class="number">0x96</span>, <span class="number">0x0A</span>, <span class="number">0x2F</span>, <span class="number">0x00</span>, <span class="number">0x17</span>, <span class="number">0x81</span>, <span class="number">0x14</span>, <span class="number">0x47</span>, <span class="number">0xBB</span>, <span class="number">0x9D</span>, <span class="number">0x8E</span>, <span class="number">0x3C</span>, <span class="number">0xD6</span>, <span class="number">0xA1</span>, <span class="number">0xE0</span>, <span class="number">0xA2</span>, <span class="number">0x26</span>, <span class="number">0x5D</span>, <span class="number">0x08</span>, <span class="number">0x6E</span>, <span class="number">0x4E</span>, <span class="number">0xF1</span>, <span class="number">0xCF</span>, <span class="number">0x73</span>, <span class="number">0x8A</span>, <span class="number">0x90</span>, <span class="number">0x0B</span>, <span class="number">0xB3</span>, <span class="number">0x3E</span>, <span class="number">0xB6</span>, <span class="number">0x1F</span>, <span class="number">0xC3</span>, <span class="number">0xB7</span>, <span class="number">0xDA</span>, <span class="number">0x8D</span>, <span class="number">0x05</span>, <span class="number">0xEE</span>, <span class="number">0x18</span>, <span class="number">0x93</span>, <span class="number">0x3A</span>, <span class="number">0x6A</span>, <span class="number">0x8C</span>, <span class="number">0x43</span>, <span class="number">0x8F</span>, <span class="number">0xEB</span>, <span class="number">0xE9</span>, <span class="number">0x5B</span>, <span class="number">0x29</span>, <span class="number">0x37</span>, <span class="number">0x1E</span>, <span class="number">0x46</span>, <span class="number">0x33</span>, <span class="number">0x31</span>, <span class="number">0xFB</span>, <span class="number">0x35</span>, <span class="number">0x34</span>, <span class="number">0x61</span>, <span class="number">0x04</span>, <span class="number">0x0E</span>, <span class="number">0x2B</span>, <span class="number">0x74</span>, <span class="number">0xF9</span>, <span class="number">0x8B</span>, <span class="number">0x2C</span>, <span class="number">0x20</span>, <span class="number">0x0C</span>, <span class="number">0x7C</span>, <span class="number">0x28</span>, <span class="number">0x5C</span>, <span class="number">0xCA</span>, <span class="number">0xE6</span>, <span class="number">0x6B</span>, <span class="number">0xD8</span>, <span class="number">0x30</span>, <span class="number">0xE4</span>, <span class="number">0x21</span>, <span class="number">0x44</span>, <span class="number">0x70</span>, <span class="number">0x06</span>, <span class="number">0xA6</span>, <span class="number">0x60</span>, <span class="number">0x41</span>, <span class="number">0x84</span>, <span class="number">0x10</span>, <span class="number">0x95</span>, <span class="number">0x4F</span>, <span class="number">0x64</span>, <span class="number">0x83</span>, <span class="number">0xD2</span>, <span class="number">0x9A</span>, <span class="number">0xBE</span>, <span class="number">0xAF</span>, <span class="number">0x9F</span>, <span class="number">0x07</span>, <span class="number">0xC1</span>, <span class="number">0xB8</span>, <span class="number">0x3B</span>, <span class="number">0x65</span>, <span class="number">0xCC</span>, <span class="number">0x57</span>, <span class="number">0xB5</span>, <span class="number">0xD9</span>, <span class="number">0x92</span>, <span class="number">0xDE</span>, <span class="number">0x0D</span>, <span class="number">0xE3</span>, <span class="number">0xF3</span>, <span class="number">0xA4</span>, <span class="number">0xBD</span>, <span class="number">0x6F</span>, <span class="number">0xD3</span>, <span class="number">0x25</span>, <span class="number">0x88</span>, <span class="number">0x71</span>, <span class="number">0xFF</span>, <span class="number">0xA9</span>, <span class="number">0x36</span>, <span class="number">0xB1</span>, <span class="number">0x78</span>, <span class="number">0x24</span>, <span class="number">0x69</span>, <span class="number">0xAD</span>, <span class="number">0x19</span>, <span class="number">0xBF</span>, <span class="number">0xFD</span>, <span class="number">0xCD</span>, <span class="number">0x4A</span>, <span class="number">0xEA</span>, <span class="number">0x87</span>, <span class="number">0x91</span>, <span class="number">0xA8</span>, <span class="number">0x66</span>, <span class="number">0x82</span>, <span class="number">0x50</span>, <span class="number">0x0F</span>, <span class="number">0x99</span>, <span class="number">0x45</span>, <span class="number">0xF2</span>, <span class="number">0xD5</span>, <span class="number">0x9B</span>, <span class="number">0x94</span>, <span class="number">0x7D</span>, <span class="number">0xCE</span>, <span class="number">0xDB</span>, <span class="number">0xB9</span>, <span class="number">0x52</span>, <span class="number">0xE5</span>, <span class="number">0xF4</span>, <span class="number">0x01</span>, <span class="number">0x7F</span>, <span class="number">0xD4</span>, <span class="number">0x15</span>, <span class="number">0x2D</span>, <span class="number">0x3F</span>, <span class="number">0x1D</span>, <span class="number">0xA7</span>, <span class="number">0xC2</span>, <span class="number">0xFA</span>, <span class="number">0x40</span>, <span class="number">0xE8</span>, <span class="number">0xA0</span>, <span class="number">0x55</span>, <span class="number">0x6C</span>, <span class="number">0xF7</span>, <span class="number">0x1B</span>, <span class="number">0x58</span>, <span class="number">0x85</span>, <span class="number">0x56</span>, <span class="number">0x9E</span>, <span class="number">0xEC</span>, <span class="number">0x97</span>, <span class="number">0x23</span>, <span class="number">0xF0</span>, <span class="number">0x4D</span>, <span class="number">0xD0</span>, <span class="number">0xF8</span>, <span class="number">0x2A</span>, <span class="number">0x49</span>, <span class="number">0xB4</span>, <span class="number">0x76</span>, <span class="number">0x54</span>, <span class="number">0xDF</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun2</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(by280)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == by280[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun3</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(by380)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == by380[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun5</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(by580)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == by580[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun7</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(by780)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == by780[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">funb</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(byb80)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == byb80[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fund</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(byd80)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == byd80[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun11</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(by1180)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == by1180[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun13</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(by1380)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == by1380[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun17</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(by1780)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == by1780[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun1d</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(by1d80)):</span><br><span class="line">            <span class="keyword">if</span> flag[i] == by1d80[j]:</span><br><span class="line">                flag[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">fun1d()</span><br><span class="line">fun17()</span><br><span class="line">fun13()</span><br><span class="line">fun11()</span><br><span class="line">fund()</span><br><span class="line">funb()</span><br><span class="line">fun7()</span><br><span class="line">fun5()</span><br><span class="line">fun3()</span><br><span class="line">fun2()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytearray</span>(flag))</span><br><span class="line">index = [<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;13&#x27;</span>, <span class="string">&#x27;17&#x27;</span>, <span class="string">&#x27;1d&#x27;</span>]</span><br><span class="line"><span class="comment"># #y0u_4r3_7h3_m4573r_0f_r3v3r51n6_!</span></span><br></pre></td></tr></table></figure><p><img src="/./../images/image-20221130172748967.png" alt="image-20221130172748967"></p><p>&#x3D;&#x3D;然后这里注意的是flag[i] &#x3D; j后一定要加break，不然会无，然后第二段数据有多解，在移位操作处加&amp;0xfffffff,比如((a1[12] &lt;&lt; 6)&amp;0xffffffff)，这样才算和c代码成功转换&#x3D;&#x3D;</p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;​	比赛一直在打安洵杯，buu都没好好看，现在安洵杯迷宫题斜着走还没搞明白，先来复现一波buu的月赛&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>安徽省赛</title>
    <link href="https://pa1r0t.github.io/2022/11/21/%E5%AE%89%E5%BE%BD%E7%9C%81%E8%B5%9B/"/>
    <id>https://pa1r0t.github.io/2022/11/21/%E5%AE%89%E5%BE%BD%E7%9C%81%E8%B5%9B/</id>
    <published>2022-11-21T06:13:57.000Z</published>
    <updated>2022-11-29T08:53:10.582Z</updated>
    
    <content type="html"><![CDATA[<p>安徽省赛只有一个小时，我吐了，脚本都来不及写。。。。赛后才把flag搞出来</p><span id="more"></span><p>呃，</p><p>我其实也是第一次见这么庞大的迷宫，一共4384个格~~</p><p>这里看见一行66</p><p><a href="https://imgse.com/i/zQvXfe"><img src="https://s1.ax1x.com/2022/11/21/zQvXfe.png" alt="zQvXfe.png"></a></p><p>代码逻辑很简单，这里不做过多介绍</p><p><em>&#x2F;我原先的脚本的思路是走到错的地方再返回，导致效率太低，跑了好久都没跑出来&#x2F;</em></p><p>赛后我还未想好该怎么优化我的深搜算法，所以就进行了一波手工画图。。。。。。。。</p><h4 id="图一："><a href="#图一：" class="headerlink" title="图一："></a>图一：</h4><p><a href="https://imgse.com/i/zQvwWQ"><img src="https://s1.ax1x.com/2022/11/21/zQvwWQ.png" alt="zQvwWQ.png"></a></p><h4 id="图二："><a href="#图二：" class="headerlink" title="图二："></a>图二：</h4><p><a href="https://imgse.com/i/zQv7ex"><img src="https://s1.ax1x.com/2022/11/21/zQv7ex.png" alt="zQv7ex.png"></a></p><h4 id="图三："><a href="#图三：" class="headerlink" title="图三："></a>图三：</h4><p><a href="https://imgse.com/i/zQvHw6"><img src="https://s1.ax1x.com/2022/11/21/zQvHw6.png" alt="zQvHw6.png"></a></p><p>emmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm</p><p>然后就根据这个路线，手写路线字符串</p><p><a href="https://imgse.com/i/zQx9mt"><img src="https://s1.ax1x.com/2022/11/21/zQx9mt.png" alt="zQx9mt.png"></a></p><p>以上是我写的，本办法，太菜了，只能这么搞了</p><hr><p>##下面贴上EDI团队的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">map</span> = []</span><br><span class="line">data =[<span class="built_in">map</span>[i*<span class="number">66</span>:i*<span class="number">66</span>+<span class="number">66</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">66</span>)]</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line">usedmap  =  [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data))] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)) ]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">DFS</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">64</span> <span class="keyword">and</span> y == <span class="number">65</span>:</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">    <span class="keyword">if</span> data[x+<span class="number">1</span>][y] == <span class="number">0</span> <span class="keyword">and</span> usedmap [x+<span class="number">1</span>][y] == <span class="number">0</span>:</span><br><span class="line">        usedmap [x][y] = <span class="number">1</span></span><br><span class="line">        flag += <span class="string">&#x27;s&#x27;</span></span><br><span class="line">        DFS(x+<span class="number">1</span>,y)</span><br><span class="line">        flag = flag[:-<span class="number">1</span>]</span><br><span class="line">        usedmap [x][y] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> data[x-<span class="number">1</span>][y] == <span class="number">0</span> <span class="keyword">and</span> usedmap [x-<span class="number">1</span>][y] == <span class="number">0</span>:</span><br><span class="line">        usedmap [x][y] = <span class="number">1</span></span><br><span class="line">        flag += <span class="string">&#x27;w&#x27;</span></span><br><span class="line">        DFS(x-<span class="number">1</span>,y)</span><br><span class="line">        flag = flag[:-<span class="number">1</span>]</span><br><span class="line">        usedmap [x][y] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> data[x][y+<span class="number">1</span>] == <span class="number">0</span> <span class="keyword">and</span> usedmap [x][y+<span class="number">1</span>] == <span class="number">0</span>:</span><br><span class="line">        usedmap [x][y] = <span class="number">1</span></span><br><span class="line">        flag += <span class="string">&#x27;d&#x27;</span></span><br><span class="line">        DFS(x,y+<span class="number">1</span>)</span><br><span class="line">        flag = flag[:-<span class="number">1</span>]</span><br><span class="line">        usedmap [x][y] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> data[x][y-<span class="number">1</span>] == <span class="number">0</span> <span class="keyword">and</span> usedmap [x][y-<span class="number">1</span>] == <span class="number">0</span>:</span><br><span class="line">        usedmap [x][y] = <span class="number">1</span></span><br><span class="line">        flag += <span class="string">&#x27;a&#x27;</span></span><br><span class="line">        DFS(x,y-<span class="number">1</span>)</span><br><span class="line">        flag = flag[:-<span class="number">1</span>]</span><br><span class="line">        usedmap [x][y] = <span class="number">0</span></span><br><span class="line">y=<span class="number">0</span></span><br><span class="line">x=<span class="number">1</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    DFS(x,y)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>他们的脚本其实就是只走对的位置，我实在没想到居然效率会快这么多！！！！！！！！！</p><p>后来我参照他们的思路，重新优化了一下我的脚本，可以说在他们的基础上在一次优化了程序的效率</p><p><strong>只能说算法实在太重要了！！！！！！！！！！！！！！</strong></p><h2 id="我的代码："><a href="#我的代码：" class="headerlink" title="我的代码："></a>我的代码：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dfs</span>(<span class="params">v6, v7</span>):</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(flag) &gt; <span class="number">364</span>: <span class="comment"># 这里防止深度过深</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> v6 == <span class="number">64</span> <span class="keyword">and</span> v7 == <span class="number">65</span>:</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">    tlag[<span class="number">66</span> * v6 + v7] = <span class="number">1</span>  <span class="comment"># 标记走过了</span></span><br><span class="line">    <span class="keyword">if</span> map1[<span class="number">66</span> * v6 + v7 + <span class="number">1</span>] == <span class="number">0</span> <span class="keyword">and</span> tlag[<span class="number">66</span> * v6 + v7+<span class="number">1</span>] == <span class="number">0</span>: <span class="comment"># 这个位置能不能走，有没有走过</span></span><br><span class="line">        flag += <span class="string">&#x27;d&#x27;</span></span><br><span class="line">        dfs(v6, v7 + <span class="number">1</span>)</span><br><span class="line">        flag = flag[:-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> map1[<span class="number">66</span> * (v6+<span class="number">1</span>) + v7] == <span class="number">0</span> <span class="keyword">and</span> tlag[<span class="number">66</span> * (v6+<span class="number">1</span>) + v7] == <span class="number">0</span>:</span><br><span class="line">        flag += <span class="string">&#x27;s&#x27;</span></span><br><span class="line">        dfs(v6+<span class="number">1</span>,v7)</span><br><span class="line">        flag = flag[:-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> map1[<span class="number">66</span> * (v6-<span class="number">1</span>) + v7] == <span class="number">0</span> <span class="keyword">and</span> tlag[<span class="number">66</span> * (v6-<span class="number">1</span>) + v7] == <span class="number">0</span>:</span><br><span class="line">        flag += <span class="string">&#x27;w&#x27;</span></span><br><span class="line">        dfs(v6-<span class="number">1</span>, v7)</span><br><span class="line">        flag = flag[:-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> map1[<span class="number">66</span> * (v6) + v7 - <span class="number">1</span>] == <span class="number">0</span> <span class="keyword">and</span> tlag[<span class="number">66</span> * (v6) + v7-<span class="number">1</span>] == <span class="number">0</span>:</span><br><span class="line">        flag += <span class="string">&#x27;a&#x27;</span></span><br><span class="line">        dfs(v6, v7 - <span class="number">1</span>)</span><br><span class="line">        flag = flag[:-<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># 这里不用将标志去掉，因为这个位置所有方向都走过了都没到终点，那么其他位置到达该位置也无法到达终点，所以懂吧？</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    map1 = []</span><br><span class="line">    tlag = [<span class="number">0</span>]*<span class="built_in">len</span>(map1)</span><br><span class="line">    flag = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        dfs(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>至于代码的细节这里直接看注释即可，都已经写好了</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这里个人的算法功底还有待提升，算法还是要多练，不然明明会做，但是现场做不出来，太难受了！！！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;安徽省赛只有一个小时，我吐了，脚本都来不及写。。。。赛后才把flag搞出来&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="https://pa1r0t.github.io/categories/ctf/"/>
    
    
  </entry>
  
</feed>
